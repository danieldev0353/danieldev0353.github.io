/*! For license information please see LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{257:function(t,e,n){"use strict";t.exports=function(t,e){return e||(e={}),"string"!=typeof(t=t&&t.__esModule?t.default:t)?t:(/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t)}},272:function(t,e,n){var r=n(6),o=n(22),l=n(61),c=n(273),h=n(178),d=n(8),f=n(15),m=n(45),v=n(4),x=o("Reflect","construct"),y=Object.prototype,_=[].push,M=v((function(){function t(){}return!(x((function(){}),[],t)instanceof t)})),w=!v((function(){x((function(){}))})),S=M||w;r({target:"Reflect",stat:!0,forced:S,sham:S},{construct:function(t,e){h(t),d(e);var n=arguments.length<3?t:h(arguments[2]);if(w&&!M)return x(t,e,n);if(t==n){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var r=[null];return l(_,r,e),new(l(c,t,r))}var o=n.prototype,v=m(f(o)?o:y),S=l(t,v,e);return f(S)?S:v}})},273:function(t,e,n){"use strict";var r=n(0),o=n(3),l=n(60),c=n(15),h=n(13),d=n(72),f=r.Function,m=o([].concat),v=o([].join),x={},y=function(t,e,n){if(!h(x,e)){for(var r=[],i=0;i<e;i++)r[i]="a["+i+"]";x[e]=f("C,a","return new C("+v(r,",")+")")}return x[e](t,n)};t.exports=f.bind||function(t){var e=l(this),n=e.prototype,r=d(arguments,1),o=function(){var n=m(r,d(arguments));return this instanceof o?y(e,n.length,n):e.apply(t,n)};return c(n)&&(o.prototype=n),o}},274:function(t,e,n){"use strict";function r(t){return r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},r(t)}n.d(e,"a",(function(){return r}))},275:function(t,e,n){"use strict";n.d(e,"a",(function(){return Va})),n.d(e,"b",(function(){return Hl})),n.d(e,"c",(function(){return An})),n.d(e,"d",(function(){return Je})),n.d(e,"e",(function(){return Ho})),n.d(e,"f",(function(){return zn})),n.d(e,"g",(function(){return Vs})),n.d(e,"h",(function(){return Vo})),n.d(e,"i",(function(){return ko})),n.d(e,"j",(function(){return ut})),n.d(e,"k",(function(){return Dt})),n.d(e,"l",(function(){return Fs}));const r="137",o=100,l=301,c=302,h=303,d=304,f=306,m=307,v=1e3,x=1001,y=1002,_=1003,M=1004,w=1005,S=1006,T=1008,E=1009,A=1012,R=1014,L=1015,C=1016,P=1020,D=1023,I=1026,N=1027,z=33776,O=33777,B=33778,U=33779,F=2300,H=2301,G=2302,V=2400,k=2401,W=2402,j=2500,X=3e3,J=3001,Y=7680,Z=35044,K=35048,Q="300 es",$=1035;class tt{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let i=0,e=n.length;i<e;i++)n[i].call(this,t);t.target=null}}}const et=[];for(let i=0;i<256;i++)et[i]=(i<16?"0":"")+i.toString(16);const nt=Math.PI/180,it=180/Math.PI;function st(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(et[255&t]+et[t>>8&255]+et[t>>16&255]+et[t>>24&255]+"-"+et[255&e]+et[e>>8&255]+"-"+et[e>>16&15|64]+et[e>>24&255]+"-"+et[63&n|128]+et[n>>8&255]+"-"+et[n>>16&255]+et[n>>24&255]+et[255&r]+et[r>>8&255]+et[r>>16&255]+et[r>>24&255]).toUpperCase()}function at(t,e,n){return Math.max(e,Math.min(n,t))}function ot(t,e){return(t%e+e)%e}function lt(t,e,n){return(1-n)*t+n*e}function ct(t){return 0==(t&t-1)&&0!==t}function ht(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}class ut{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(s){return this.x+=s,this.y+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(s){return this.x-=s,this.y-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*s+t.x,this.y=r*s+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ut.prototype.isVector2=!0;class pt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,o,l,c,h,d){const f=this.elements;return f[0]=t,f[1]=r,f[2]=c,f[3]=e,f[4]=o,f[5]=h,f[6]=n,f[7]=l,f[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,n=this.elements,r=t[0],o=t[3],l=t[6],c=t[1],h=t[4],d=t[7],f=t[2],m=t[5],v=t[8],x=e[0],y=e[3],_=e[6],M=e[1],w=e[4],S=e[7],T=e[2],E=e[5],A=e[8];return n[0]=r*x+o*M+l*T,n[3]=r*y+o*w+l*E,n[6]=r*_+o*S+l*A,n[1]=c*x+h*M+d*T,n[4]=c*y+h*w+d*E,n[7]=c*_+h*S+d*A,n[2]=f*x+m*M+v*T,n[5]=f*y+m*w+v*E,n[8]=f*_+m*S+v*A,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[3]*=s,t[6]*=s,t[1]*=s,t[4]*=s,t[7]*=s,t[2]*=s,t[5]*=s,t[8]*=s,this}determinant(){const t=this.elements,a=t[0],b=t[1],e=t[2],n=t[3],r=t[4],o=t[5],g=t[6],l=t[7],i=t[8];return a*r*i-a*o*l-b*n*i+b*o*g+e*n*l-e*r*g}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],o=t[3],l=t[4],c=t[5],h=t[6],d=t[7],f=t[8],m=f*l-c*d,v=c*h-f*o,x=d*o-l*h,y=e*m+n*v+r*x;if(0===y)return this.set(0,0,0,0,0,0,0,0,0);const _=1/y;return t[0]=m*_,t[1]=(r*d-f*n)*_,t[2]=(c*n-r*l)*_,t[3]=v*_,t[4]=(f*e-r*h)*_,t[5]=(r*o-c*e)*_,t[6]=x*_,t[7]=(n*h-d*e)*_,t[8]=(l*e-n*o)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,o,l,c){const h=Math.cos(o),s=Math.sin(o);return this.set(n*h,n*s,-n*(h*l+s*c)+l+t,-r*s,r*h,-r*(-s*l+h*c)+c+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),s=Math.sin(t),n=this.elements,r=n[0],o=n[3],l=n[6],c=n[1],h=n[4],d=n[7];return n[0]=e*r+s*c,n[3]=e*o+s*h,n[6]=e*l+s*d,n[1]=-s*r+e*c,n[4]=-s*o+e*h,n[7]=-s*l+e*d,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function ft(t){for(let i=t.length-1;i>=0;--i)if(t[i]>65535)return!0;return!1}pt.prototype.isMatrix3=!0;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function mt(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}const gt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vt={h:0,s:0,l:0},xt={h:0,s:0,l:0};function yt(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+6*(q-p)*(2/3-t):p}function _t(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Mt(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class bt{constructor(t,g,b){return void 0===g&&void 0===b?this.set(t):this.setRGB(t,g,b)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,g,b){return this.r=t,this.g=g,this.b=b,this}setHSL(t,s,e){if(t=ot(t,1),s=at(s,0,1),e=at(e,0,1),0===s)this.r=this.g=this.b=e;else{const p=e<=.5?e*(1+s):e+s-e*s,q=2*e-p;this.r=yt(q,p,t+1/3),this.g=yt(q,p,t),this.b=yt(q,p,t-1/3)}return this}setStyle(style){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}let e;if(e=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(style)){let n;const r=e[1],o=e[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,t(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,t(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const e=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,r=parseInt(n[3],10)/100;return t(n[4]),this.setHSL(e,s,r)}}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(style)){const t=e[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return style&&style.length>0?this.setColorName(style):this}setColorName(style){const t=gt[style.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+style),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=_t(t.r),this.g=_t(t.g),this.b=_t(t.b),this}copyLinearToSRGB(t){return this.r=Mt(t.r),this.g=Mt(t.g),this.b=Mt(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,g=this.g,b=this.b,n=Math.max(e,g,b),r=Math.min(e,g,b);let o,l;const c=(r+n)/2;if(r===n)o=0,l=0;else{const t=n-r;switch(l=c<=.5?t/(n+r):t/(2-n-r),n){case e:o=(g-b)/t+(g<b?6:0);break;case g:o=(b-e)/t+2;break;case b:o=(e-g)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,s,e){return this.getHSL(vt),vt.h+=t,vt.s+=s,vt.l+=e,this.setHSL(vt.h,vt.s,vt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(s){return this.r+=s,this.g+=s,this.b+=s,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(s){return this.r*=s,this.g*=s,this.b*=s,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(vt),t.getHSL(xt);const n=lt(vt.h,xt.h,e),s=lt(vt.s,xt.s,e),r=lt(vt.l,xt.l,e);return this.setHSL(n,s,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}let wt;bt.NAMES=gt,bt.prototype.isColor=!0,bt.prototype.r=1,bt.prototype.g=1,bt.prototype.b=1;class St{static getDataURL(image){if(/^data:/i.test(image.src))return image.src;if("undefined"==typeof HTMLCanvasElement)return image.src;let canvas;if(image instanceof HTMLCanvasElement)canvas=image;else{void 0===wt&&(wt=mt("canvas")),wt.width=image.width,wt.height=image.height;const t=wt.getContext("2d");image instanceof ImageData?t.putImageData(image,0,0):t.drawImage(image,0,0,image.width,image.height),canvas=wt}return canvas.width>2048||canvas.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",image),canvas.toDataURL("image/jpeg",.6)):canvas.toDataURL("image/png")}static sRGBToLinear(image){if("undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap){const canvas=mt("canvas");canvas.width=image.width,canvas.height=image.height;const t=canvas.getContext("2d");t.drawImage(image,0,0,image.width,image.height);const e=t.getImageData(0,0,image.width,image.height),data=e.data;for(let i=0;i<data.length;i++)data[i]=255*_t(data[i]/255);return t.putImageData(e,0,0),canvas}if(image.data){const data=image.data.slice(0);for(let i=0;i<data.length;i++)data instanceof Uint8Array||data instanceof Uint8ClampedArray?data[i]=Math.floor(255*_t(data[i]/255)):data[i]=_t(data[i]);return{data:data,width:image.width,height:image.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),image}}let Tt=0;class Et extends tt{constructor(image=Et.DEFAULT_IMAGE,t=Et.DEFAULT_MAPPING,e=1001,n=1001,r=1006,o=1008,l=1023,c=1009,h=1,d=3e3){super(),Object.defineProperty(this,"id",{value:Tt++}),this.uuid=st(),this.name="",this.image=image,this.mipmaps=[],this.mapping=t,this.wrapS=e,this.wrapT=n,this.magFilter=r,this.minFilter=o,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=c,this.offset=new ut(0,0),this.repeat=new ut(1,1),this.center=new ut(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(source){return this.name=source.name,this.image=source.image,this.mipmaps=source.mipmaps.slice(0),this.mapping=source.mapping,this.wrapS=source.wrapS,this.wrapT=source.wrapT,this.magFilter=source.magFilter,this.minFilter=source.minFilter,this.anisotropy=source.anisotropy,this.format=source.format,this.internalFormat=source.internalFormat,this.type=source.type,this.offset.copy(source.offset),this.repeat.copy(source.repeat),this.center.copy(source.center),this.rotation=source.rotation,this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrix.copy(source.matrix),this.generateMipmaps=source.generateMipmaps,this.premultiplyAlpha=source.premultiplyAlpha,this.flipY=source.flipY,this.unpackAlignment=source.unpackAlignment,this.encoding=source.encoding,this.userData=JSON.parse(JSON.stringify(source.userData)),this}toJSON(meta){const t=void 0===meta||"string"==typeof meta;if(!t&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];const output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const image=this.image;if(void 0===image.uuid&&(image.uuid=st()),!t&&void 0===meta.images[image.uuid]){let t;if(Array.isArray(image)){t=[];for(let i=0,e=image.length;i<e;i++)image[i].isDataTexture?t.push(At(image[i].image)):t.push(At(image[i]))}else t=At(image);meta.images[image.uuid]={uuid:image.uuid,url:t}}output.image=image.uuid}return"{}"!==JSON.stringify(this.userData)&&(output.userData=this.userData),t||(meta.textures[this.uuid]=output),output}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case v:t.x=t.x-Math.floor(t.x);break;case x:t.x=t.x<0?0:1;break;case y:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case v:t.y=t.y-Math.floor(t.y);break;case x:t.y=t.y<0?0:1;break;case y:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function At(image){return"undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap?St.getDataURL(image):image.data?{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Et.DEFAULT_IMAGE=void 0,Et.DEFAULT_MAPPING=300,Et.prototype.isTexture=!0;class Rt{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this.w+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this.w-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*r+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*r+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*r+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*r+l[15]*o,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(q){this.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this}setAxisAngleFromRotationMatrix(t){let e,n,r,o;const l=.01,c=.1,h=t.elements,d=h[0],f=h[4],m=h[8],v=h[1],x=h[5],y=h[9],_=h[2],M=h[6],w=h[10];if(Math.abs(f-v)<l&&Math.abs(m-_)<l&&Math.abs(y-M)<l){if(Math.abs(f+v)<c&&Math.abs(m+_)<c&&Math.abs(y+M)<c&&Math.abs(d+x+w-3)<c)return this.set(1,0,0,0),this;e=Math.PI;const t=(d+1)/2,h=(x+1)/2,S=(w+1)/2,T=(f+v)/4,E=(m+_)/4,A=(y+M)/4;return t>h&&t>S?t<l?(n=0,r=.707106781,o=.707106781):(n=Math.sqrt(t),r=T/n,o=E/n):h>S?h<l?(n=.707106781,r=0,o=.707106781):(r=Math.sqrt(h),n=T/r,o=A/r):S<l?(n=.707106781,r=.707106781,o=0):(o=Math.sqrt(S),n=E/o,r=A/o),this.set(n,r,o,e),this}let s=Math.sqrt((M-y)*(M-y)+(m-_)*(m-_)+(v-f)*(v-f));return Math.abs(s)<.001&&(s=1),this.x=(M-y)/s,this.y=(m-_)/s,this.z=(v-f)/s,this.w=Math.acos((d+x+w-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Rt.prototype.isVector4=!0;class Lt extends tt{constructor(t,e,n={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new Rt(0,0,t,e),this.scissorTest=!1,this.viewport=new Rt(0,0,t,e),this.texture=new Et(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:S,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(source){return this.width=source.width,this.height=source.height,this.depth=source.depth,this.viewport.copy(source.viewport),this.texture=source.texture.clone(),this.texture.image=Object.assign({},source.texture.image),this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,this.depthTexture=source.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Lt.prototype.isWebGLRenderTarget=!0;(class extends Lt{constructor(t,e,n){super(t,e);const r=this.texture;this.texture=[];for(let i=0;i<n;i++)this.texture[i]=r.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(source){this.dispose(),this.width=source.width,this.height=source.height,this.depth=source.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=source.depthBuffer,this.stencilBuffer=source.stencilBuffer,this.depthTexture=source.depthTexture,this.texture.length=0;for(let i=0,t=source.texture.length;i<t;i++)this.texture[i]=source.texture[i].clone();return this}}).prototype.isWebGLMultipleRenderTargets=!0;class Ct extends Lt{constructor(t,e,n={}){super(t,e,n),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===n.ignoreDepth||n.ignoreDepth,this.useRenderToTexture=void 0!==n.useRenderToTexture&&n.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(source){return super.copy.call(this,source),this.samples=source.samples,this.useRenderToTexture=source.useRenderToTexture,this.useRenderbuffer=source.useRenderbuffer,this}}Ct.prototype.isWebGLMultisampleRenderTarget=!0;class Pt{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,o,l,c){let h=n[r+0],d=n[r+1],f=n[r+2],m=n[r+3];const v=o[l+0],x=o[l+1],y=o[l+2],_=o[l+3];if(0===c)return t[e+0]=h,t[e+1]=d,t[e+2]=f,void(t[e+3]=m);if(1===c)return t[e+0]=v,t[e+1]=x,t[e+2]=y,void(t[e+3]=_);if(m!==_||h!==v||d!==x||f!==y){let s=1-c;const t=h*v+d*x+f*y+m*_,e=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const r=Math.sqrt(n),o=Math.atan2(r,t*e);s=Math.sin(s*o)/r,c=Math.sin(c*o)/r}const r=c*e;if(h=h*s+v*r,d=d*s+x*r,f=f*s+y*r,m=m*s+_*r,s===1-c){const t=1/Math.sqrt(h*h+d*d+f*f+m*m);h*=t,d*=t,f*=t,m*=t}}t[e]=h,t[e+1]=d,t[e+2]=f,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,r,o,l){const c=n[r],h=n[r+1],d=n[r+2],f=n[r+3],m=o[l],v=o[l+1],x=o[l+2],y=o[l+3];return t[e]=c*y+f*m+h*x-d*v,t[e+1]=h*y+f*v+d*m-c*x,t[e+2]=d*y+f*x+c*v-h*m,t[e+3]=f*y-c*m-h*v-d*x,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,d=c(n/2),f=c(r/2),m=c(o/2),v=h(n/2),x=h(r/2),y=h(o/2);switch(l){case"XYZ":this._x=v*f*m+d*x*y,this._y=d*x*m-v*f*y,this._z=d*f*y+v*x*m,this._w=d*f*m-v*x*y;break;case"YXZ":this._x=v*f*m+d*x*y,this._y=d*x*m-v*f*y,this._z=d*f*y-v*x*m,this._w=d*f*m+v*x*y;break;case"ZXY":this._x=v*f*m-d*x*y,this._y=d*x*m+v*f*y,this._z=d*f*y+v*x*m,this._w=d*f*m-v*x*y;break;case"ZYX":this._x=v*f*m-d*x*y,this._y=d*x*m+v*f*y,this._z=d*f*y-v*x*m,this._w=d*f*m+v*x*y;break;case"YZX":this._x=v*f*m+d*x*y,this._y=d*x*m+v*f*y,this._z=d*f*y-v*x*m,this._w=d*f*m-v*x*y;break;case"XZY":this._x=v*f*m-d*x*y,this._y=d*x*m-v*f*y,this._z=d*f*y+v*x*m,this._w=d*f*m+v*x*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],o=e[8],l=e[1],c=e[5],h=e[9],d=e[2],f=e[6],m=e[10],v=n+c+m;if(v>0){const s=.5/Math.sqrt(v+1);this._w=.25/s,this._x=(f-h)*s,this._y=(o-d)*s,this._z=(l-r)*s}else if(n>c&&n>m){const s=2*Math.sqrt(1+n-c-m);this._w=(f-h)/s,this._x=.25*s,this._y=(r+l)/s,this._z=(o+d)/s}else if(c>m){const s=2*Math.sqrt(1+c-n-m);this._w=(o-d)/s,this._x=(r+l)/s,this._y=.25*s,this._z=(h+f)/s}else{const s=2*Math.sqrt(1+m-n-c);this._w=(l-r)/s,this._x=(o+d)/s,this._y=(h+f)/s,this._z=.25*s}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(q){return 2*Math.acos(Math.abs(at(this.dot(q),-1,1)))}rotateTowards(q,t){const e=this.angleTo(q);if(0===e)return this;const n=Math.min(1,t/e);return this.slerp(q,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(q,p){return void 0!==p?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)}premultiply(q){return this.multiplyQuaternions(q,this)}multiplyQuaternions(a,b){const t=a._x,e=a._y,n=a._z,r=a._w,o=b._x,l=b._y,c=b._z,h=b._w;return this._x=t*h+r*o+e*c-n*l,this._y=e*h+r*l+n*o-t*c,this._z=n*h+r*c+t*l-e*o,this._w=r*h-t*o-e*l-n*c,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+r*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=r,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const s=1-e;return this._w=s*l+e*this._w,this._x=s*n+e*this._x,this._y=s*r+e*this._y,this._z=s*o+e*this._z,this.normalize(),this._onChangeCallback(),this}const d=Math.sqrt(h),f=Math.atan2(d,c),m=Math.sin((1-e)*f)/d,v=Math.sin(e*f)/d;return this._w=l*m+this._w*v,this._x=n*m+this._x*v,this._y=r*m+this._y*v,this._z=o*m+this._z*v,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),r=2*Math.PI*Math.random(),o=2*Math.PI*Math.random();return this.set(e*Math.cos(r),n*Math.sin(o),n*Math.cos(o),e*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Pt.prototype.isQuaternion=!0;class Dt{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(s){return this.x+=s,this.y+=s,this.z+=s,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(s){return this.x-=s,this.y-=s,this.z-=s,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Nt.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Nt.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*r,this.y=o[1]*e+o[4]*n+o[7]*r,this.z=o[2]*e+o[5]*n+o[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*r+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*r+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*r+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*r+o[14])*l,this}applyQuaternion(q){const t=this.x,e=this.y,n=this.z,r=q.x,o=q.y,l=q.z,c=q.w,h=c*t+o*n-l*e,d=c*e+l*t-r*n,f=c*n+r*e-o*t,m=-r*t-o*e-l*n;return this.x=h*c+m*-r+d*-l-f*-o,this.y=d*c+m*-o+f*-r-h*-l,this.z=f*c+m*-l+h*-o-d*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*r,this.y=o[1]*e+o[5]*n+o[9]*r,this.z=o[2]*e+o[6]*n+o[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(a,b){const t=a.x,e=a.y,n=a.z,r=b.x,o=b.y,l=b.z;return this.x=e*l-n*o,this.y=n*r-t*l,this.z=t*o-e*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return It.copy(this).projectOnVector(t),this.sub(It)}reflect(t){return this.sub(It.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(at(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const u=2*(Math.random()-.5),t=Math.random()*Math.PI*2,e=Math.sqrt(1-u**2);return this.x=e*Math.cos(t),this.y=e*Math.sin(t),this.z=u,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}Dt.prototype.isVector3=!0;const It=new Dt,Nt=new Pt;class zt{constructor(t=new Dt(1/0,1/0,1/0),e=new Dt(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,o=-1/0,l=-1/0,c=-1/0;for(let i=0,h=t.length;i<h;i+=3){const h=t[i],d=t[i+1],f=t[i+2];h<e&&(e=h),d<n&&(n=d),f<r&&(r=f),h>o&&(o=h),d>l&&(l=d),f>c&&(c=f)}return this.min.set(e,n,r),this.max.set(o,l,c),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,o=-1/0,l=-1/0,c=-1/0;for(let i=0,h=t.count;i<h;i++){const h=t.getX(i),d=t.getY(i),f=t.getZ(i);h<e&&(e=h),d<n&&(n=d),f<r&&(r=f),h>o&&(o=h),d>l&&(l=d),f>c&&(c=f)}return this.min.set(e,n,r),this.max.set(o,l,c),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,e){const n=Bt.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(object,t=!1){return this.makeEmpty(),this.expandByObject(object,t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(object,t=!1){object.updateWorldMatrix(!1,!1);const e=object.geometry;if(void 0!==e)if(t&&null!=e.attributes&&void 0!==e.attributes.position){const t=e.attributes.position;for(let i=0,e=t.count;i<e;i++)Bt.fromBufferAttribute(t,i).applyMatrix4(object.matrixWorld),this.expandByPoint(Bt)}else null===e.boundingBox&&e.computeBoundingBox(),Ut.copy(e.boundingBox),Ut.applyMatrix4(object.matrixWorld),this.union(Ut);const n=object.children;for(let i=0,e=n.length;i<e;i++)this.expandByObject(n[i],t);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Bt),Bt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(jt),qt.subVectors(this.max,jt),Ft.subVectors(t.a,jt),Ht.subVectors(t.b,jt),Gt.subVectors(t.c,jt),Vt.subVectors(Ht,Ft),kt.subVectors(Gt,Ht),Wt.subVectors(Ft,Gt);let e=[0,-Vt.z,Vt.y,0,-kt.z,kt.y,0,-Wt.z,Wt.y,Vt.z,0,-Vt.x,kt.z,0,-kt.x,Wt.z,0,-Wt.x,-Vt.y,Vt.x,0,-kt.y,kt.x,0,-Wt.y,Wt.x,0];return!!Yt(e,Ft,Ht,Gt,qt)&&(e=[1,0,0,0,1,0,0,0,1],!!Yt(e,Ft,Ht,Gt,qt)&&(Xt.crossVectors(Vt,kt),e=[Xt.x,Xt.y,Xt.z],Yt(e,Ft,Ht,Gt,qt)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Bt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(Bt).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ot[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ot[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ot[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ot[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ot[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ot[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ot[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ot[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ot)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}zt.prototype.isBox3=!0;const Ot=[new Dt,new Dt,new Dt,new Dt,new Dt,new Dt,new Dt,new Dt],Bt=new Dt,Ut=new zt,Ft=new Dt,Ht=new Dt,Gt=new Dt,Vt=new Dt,kt=new Dt,Wt=new Dt,jt=new Dt,qt=new Dt,Xt=new Dt,Jt=new Dt;function Yt(t,e,n,r,o){for(let i=0,l=t.length-3;i<=l;i+=3){Jt.fromArray(t,i);const l=o.x*Math.abs(Jt.x)+o.y*Math.abs(Jt.y)+o.z*Math.abs(Jt.z),c=e.dot(Jt),h=n.dot(Jt),d=r.dot(Jt);if(Math.max(-Math.max(c,h,d),Math.min(c,h,d))>l)return!1}return!0}const Zt=new zt,Kt=new Dt,Qt=new Dt,$t=new Dt;class te{constructor(t=new Dt,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Zt.setFromPoints(t).getCenter(n);let r=0;for(let i=0,e=t.length;i<e;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){$t.subVectors(t,this.center);const e=$t.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add($t.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return!0===this.center.equals(t.center)?Qt.set(0,0,1).multiplyScalar(t.radius):Qt.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Kt.copy(t.center).add(Qt)),this.expandByPoint(Kt.copy(t.center).sub(Qt)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ee=new Dt,ne=new Dt,ie=new Dt,re=new Dt,se=new Dt,ae=new Dt,oe=new Dt;class le{constructor(t=new Dt,e=new Dt(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ee)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ee.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ee.copy(this.direction).multiplyScalar(e).add(this.origin),ee.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){ne.copy(t).add(e).multiplyScalar(.5),ie.copy(e).sub(t).normalize(),re.copy(this.origin).sub(ne);const o=.5*t.distanceTo(e),l=-this.direction.dot(ie),c=re.dot(this.direction),h=-re.dot(ie),d=re.lengthSq(),f=Math.abs(1-l*l);let m,v,x,y;if(f>0)if(m=l*h-c,v=l*c-h,y=o*f,m>=0)if(v>=-y)if(v<=y){const t=1/f;m*=t,v*=t,x=m*(m+l*v+2*c)+v*(l*m+v+2*h)+d}else v=o,m=Math.max(0,-(l*v+c)),x=-m*m+v*(v+2*h)+d;else v=-o,m=Math.max(0,-(l*v+c)),x=-m*m+v*(v+2*h)+d;else v<=-y?(m=Math.max(0,-(-l*o+c)),v=m>0?-o:Math.min(Math.max(-o,-h),o),x=-m*m+v*(v+2*h)+d):v<=y?(m=0,v=Math.min(Math.max(-o,-h),o),x=v*(v+2*h)+d):(m=Math.max(0,-(l*o+c)),v=m>0?o:Math.min(Math.max(-o,-h),o),x=-m*m+v*(v+2*h)+d);else v=l>0?-o:o,m=Math.max(0,-(l*v+c)),x=-m*m+v*(v+2*h)+d;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),r&&r.copy(ie).multiplyScalar(v).add(ne),x}intersectSphere(t,e){ee.subVectors(t.center,this.origin);const n=ee.dot(this.direction),r=ee.dot(ee)-n*n,o=t.radius*t.radius;if(r>o)return null;const l=Math.sqrt(o-r),c=n-l,h=n+l;return c<0&&h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,o,l,c,h;const d=1/this.direction.x,f=1/this.direction.y,m=1/this.direction.z,v=this.origin;return d>=0?(n=(t.min.x-v.x)*d,r=(t.max.x-v.x)*d):(n=(t.max.x-v.x)*d,r=(t.min.x-v.x)*d),f>=0?(o=(t.min.y-v.y)*f,l=(t.max.y-v.y)*f):(o=(t.max.y-v.y)*f,l=(t.min.y-v.y)*f),n>l||o>r?null:((o>n||n!=n)&&(n=o),(l<r||r!=r)&&(r=l),m>=0?(c=(t.min.z-v.z)*m,h=(t.max.z-v.z)*m):(c=(t.max.z-v.z)*m,h=(t.min.z-v.z)*m),n>h||c>r?null:((c>n||n!=n)&&(n=c),(h<r||r!=r)&&(r=h),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,ee)}intersectTriangle(a,b,t,e,n){se.subVectors(b,a),ae.subVectors(t,a),oe.crossVectors(se,ae);let r,o=this.direction.dot(oe);if(o>0){if(e)return null;r=1}else{if(!(o<0))return null;r=-1,o=-o}re.subVectors(this.origin,a);const l=r*this.direction.dot(ae.crossVectors(re,ae));if(l<0)return null;const c=r*this.direction.dot(se.cross(re));if(c<0)return null;if(l+c>o)return null;const h=-r*re.dot(oe);return h<0?null:this.at(h/o,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ce{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,o,l,c,h,d,f,m,v,x,y,_,M){const w=this.elements;return w[0]=t,w[4]=e,w[8]=n,w[12]=r,w[1]=o,w[5]=l,w[9]=c,w[13]=h,w[2]=d,w[6]=f,w[10]=m,w[14]=v,w[3]=x,w[7]=y,w[11]=_,w[15]=M,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ce).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/he.setFromMatrixColumn(t,0).length(),o=1/he.setFromMatrixColumn(t,1).length(),l=1/he.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,o=t.z,a=Math.cos(n),b=Math.sin(n),l=Math.cos(r),c=Math.sin(r),h=Math.cos(o),d=Math.sin(o);if("XYZ"===t.order){const t=a*h,n=a*d,r=b*h,o=b*d;e[0]=l*h,e[4]=-l*d,e[8]=c,e[1]=n+r*c,e[5]=t-o*c,e[9]=-b*l,e[2]=o-t*c,e[6]=r+n*c,e[10]=a*l}else if("YXZ"===t.order){const t=l*h,n=l*d,r=c*h,o=c*d;e[0]=t+o*b,e[4]=r*b-n,e[8]=a*c,e[1]=a*d,e[5]=a*h,e[9]=-b,e[2]=n*b-r,e[6]=o+t*b,e[10]=a*l}else if("ZXY"===t.order){const t=l*h,n=l*d,r=c*h,o=c*d;e[0]=t-o*b,e[4]=-a*d,e[8]=r+n*b,e[1]=n+r*b,e[5]=a*h,e[9]=o-t*b,e[2]=-a*c,e[6]=b,e[10]=a*l}else if("ZYX"===t.order){const t=a*h,n=a*d,r=b*h,o=b*d;e[0]=l*h,e[4]=r*c-n,e[8]=t*c+o,e[1]=l*d,e[5]=o*c+t,e[9]=n*c-r,e[2]=-c,e[6]=b*l,e[10]=a*l}else if("YZX"===t.order){const t=a*l,n=a*c,r=b*l,o=b*c;e[0]=l*h,e[4]=o-t*d,e[8]=r*d+n,e[1]=d,e[5]=a*h,e[9]=-b*h,e[2]=-c*h,e[6]=n*d+r,e[10]=t-o*d}else if("XZY"===t.order){const t=a*l,n=a*c,r=b*l,o=b*c;e[0]=l*h,e[4]=-d,e[8]=c*h,e[1]=t*d+o,e[5]=a*h,e[9]=n*d-r,e[2]=r*d-n,e[6]=b*h,e[10]=o*d+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(q){return this.compose(de,q,pe)}lookAt(t,e,n){const r=this.elements;return ge.subVectors(t,e),0===ge.lengthSq()&&(ge.z=1),ge.normalize(),fe.crossVectors(n,ge),0===fe.lengthSq()&&(1===Math.abs(n.z)?ge.x+=1e-4:ge.z+=1e-4,ge.normalize(),fe.crossVectors(n,ge)),fe.normalize(),me.crossVectors(ge,fe),r[0]=fe.x,r[4]=me.x,r[8]=ge.x,r[1]=fe.y,r[5]=me.y,r[9]=ge.y,r[2]=fe.z,r[6]=me.z,r[10]=ge.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(a,b){const t=a.elements,e=b.elements,n=this.elements,r=t[0],o=t[4],l=t[8],c=t[12],h=t[1],d=t[5],f=t[9],m=t[13],v=t[2],x=t[6],y=t[10],_=t[14],M=t[3],w=t[7],S=t[11],T=t[15],E=e[0],A=e[4],R=e[8],L=e[12],C=e[1],P=e[5],D=e[9],I=e[13],N=e[2],z=e[6],O=e[10],B=e[14],U=e[3],F=e[7],H=e[11],G=e[15];return n[0]=r*E+o*C+l*N+c*U,n[4]=r*A+o*P+l*z+c*F,n[8]=r*R+o*D+l*O+c*H,n[12]=r*L+o*I+l*B+c*G,n[1]=h*E+d*C+f*N+m*U,n[5]=h*A+d*P+f*z+m*F,n[9]=h*R+d*D+f*O+m*H,n[13]=h*L+d*I+f*B+m*G,n[2]=v*E+x*C+y*N+_*U,n[6]=v*A+x*P+y*z+_*F,n[10]=v*R+x*D+y*O+_*H,n[14]=v*L+x*I+y*B+_*G,n[3]=M*E+w*C+S*N+T*U,n[7]=M*A+w*P+S*z+T*F,n[11]=M*R+w*D+S*O+T*H,n[15]=M*L+w*I+S*B+T*G,this}multiplyScalar(s){const t=this.elements;return t[0]*=s,t[4]*=s,t[8]*=s,t[12]*=s,t[1]*=s,t[5]*=s,t[9]*=s,t[13]*=s,t[2]*=s,t[6]*=s,t[10]*=s,t[14]*=s,t[3]*=s,t[7]*=s,t[11]*=s,t[15]*=s,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],o=t[12],l=t[1],c=t[5],h=t[9],d=t[13],f=t[2],m=t[6],v=t[10],x=t[14];return t[3]*(+o*h*m-r*d*m-o*c*v+n*d*v+r*c*x-n*h*x)+t[7]*(+e*h*x-e*d*v+o*l*v-r*l*x+r*d*f-o*h*f)+t[11]*(+e*d*m-e*c*x-o*l*m+n*l*x+o*c*f-n*d*f)+t[15]*(-r*c*f-e*h*m+e*c*v+r*l*m-n*l*v+n*h*f)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],o=t[3],l=t[4],c=t[5],h=t[6],d=t[7],f=t[8],m=t[9],v=t[10],x=t[11],y=t[12],_=t[13],M=t[14],w=t[15],S=m*M*d-_*v*d+_*h*x-c*M*x-m*h*w+c*v*w,T=y*v*d-f*M*d-y*h*x+l*M*x+f*h*w-l*v*w,E=f*_*d-y*m*d+y*c*x-l*_*x-f*c*w+l*m*w,A=y*m*h-f*_*h-y*c*v+l*_*v+f*c*M-l*m*M,R=e*S+n*T+r*E+o*A;if(0===R)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/R;return t[0]=S*L,t[1]=(_*v*o-m*M*o-_*r*x+n*M*x+m*r*w-n*v*w)*L,t[2]=(c*M*o-_*h*o+_*r*d-n*M*d-c*r*w+n*h*w)*L,t[3]=(m*h*o-c*v*o-m*r*d+n*v*d+c*r*x-n*h*x)*L,t[4]=T*L,t[5]=(f*M*o-y*v*o+y*r*x-e*M*x-f*r*w+e*v*w)*L,t[6]=(y*h*o-l*M*o-y*r*d+e*M*d+l*r*w-e*h*w)*L,t[7]=(l*v*o-f*h*o+f*r*d-e*v*d-l*r*x+e*h*x)*L,t[8]=E*L,t[9]=(y*m*o-f*_*o-y*n*x+e*_*x+f*n*w-e*m*w)*L,t[10]=(l*_*o-y*c*o+y*n*d-e*_*d-l*n*w+e*c*w)*L,t[11]=(f*c*o-l*m*o-f*n*d+e*m*d+l*n*x-e*c*x)*L,t[12]=A*L,t[13]=(f*_*r-y*m*r+y*n*v-e*_*v-f*n*M+e*m*M)*L,t[14]=(y*c*r-l*_*r-y*n*h+e*_*h+l*n*M-e*c*M)*L,t[15]=(l*m*r-f*c*r+f*n*h-e*m*h-l*n*v+e*c*v)*L,this}scale(t){const e=this.elements,n=t.x,r=t.y,o=t.z;return e[0]*=n,e[4]*=r,e[8]*=o,e[1]*=n,e[5]*=r,e[9]*=o,e[2]*=n,e[6]*=r,e[10]*=o,e[3]*=n,e[7]*=r,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,o=t.x,l=t.y,c=t.z,h=r*o,d=r*l;return this.set(h*o+n,h*l-s*c,h*c+s*l,0,h*l+s*c,d*l+n,d*c-s*o,0,h*c-s*l,d*c+s*o,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,o,l){return this.set(1,n,o,0,t,1,l,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,d=o+o,f=l+l,m=c+c,v=o*d,x=o*f,y=o*m,_=l*f,M=l*m,w=c*m,S=h*d,T=h*f,E=h*m,A=n.x,R=n.y,L=n.z;return r[0]=(1-(_+w))*A,r[1]=(x+E)*A,r[2]=(y-T)*A,r[3]=0,r[4]=(x-E)*R,r[5]=(1-(v+w))*R,r[6]=(M+S)*R,r[7]=0,r[8]=(y+T)*L,r[9]=(M-S)*L,r[10]=(1-(v+_))*L,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let o=he.set(r[0],r[1],r[2]).length();const l=he.set(r[4],r[5],r[6]).length(),c=he.set(r[8],r[9],r[10]).length();this.determinant()<0&&(o=-o),t.x=r[12],t.y=r[13],t.z=r[14],ue.copy(this);const h=1/o,d=1/l,f=1/c;return ue.elements[0]*=h,ue.elements[1]*=h,ue.elements[2]*=h,ue.elements[4]*=d,ue.elements[5]*=d,ue.elements[6]*=d,ue.elements[8]*=f,ue.elements[9]*=f,ue.elements[10]*=f,e.setFromRotationMatrix(ue),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,r,o,l){void 0===l&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const c=this.elements,h=2*o/(e-t),d=2*o/(n-r),a=(e+t)/(e-t),b=(n+r)/(n-r),f=-(l+o)/(l-o),m=-2*l*o/(l-o);return c[0]=h,c[4]=0,c[8]=a,c[12]=0,c[1]=0,c[5]=d,c[9]=b,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=m,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,r,o,l){const c=this.elements,h=1/(e-t),d=1/(n-r),p=1/(l-o),f=(e+t)*h,m=(n+r)*d,v=(l+o)*p;return c[0]=2*h,c[4]=0,c[8]=0,c[12]=-f,c[1]=0,c[5]=2*d,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=-2*p,c[14]=-v,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}ce.prototype.isMatrix4=!0;const he=new Dt,ue=new ce,de=new Dt(0,0,0),pe=new Dt(1,1,1),fe=new Dt,me=new Dt,ge=new Dt,ve=new ce,xe=new Pt;class ye{constructor(t=0,e=0,n=0,r=ye.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,o=r[0],l=r[4],c=r[8],h=r[1],d=r[5],f=r[9],m=r[2],v=r[6],x=r[10];switch(e){case"XYZ":this._y=Math.asin(at(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,x),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(v,d),this._z=0);break;case"YXZ":this._x=Math.asin(-at(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,x),this._z=Math.atan2(h,d)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(at(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(-m,x),this._z=Math.atan2(-l,d)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-at(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(v,x),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,d));break;case"YZX":this._z=Math.asin(at(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-f,d),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,x));break;case"XZY":this._z=Math.asin(-at(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(v,d),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-f,x),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(q,t,e){return ve.makeRotationFromQuaternion(q),this.setFromRotationMatrix(ve,t,e)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return xe.setFromEuler(this),this.setFromQuaternion(xe,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new Dt(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ye.prototype.isEuler=!0,ye.DefaultOrder="XYZ",ye.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class _e{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let Me=0;const be=new Dt,we=new Pt,Se=new ce,Te=new Dt,Ee=new Dt,Ae=new Dt,Re=new Pt,Le=new Dt(1,0,0),Ce=new Dt(0,1,0),Pe=new Dt(0,0,1),De={type:"added"},Ie={type:"removed"};class Ne extends tt{constructor(){super(),Object.defineProperty(this,"id",{value:Me++}),this.uuid=st(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ne.DefaultUp.clone();const t=new Dt,e=new ye,n=new Pt,r=new Dt(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new ce},normalMatrix:{value:new pt}}),this.matrix=new ce,this.matrixWorld=new ce,this.matrixAutoUpdate=Ne.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new _e,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(q){return this.quaternion.premultiply(q),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(q){this.quaternion.copy(q)}rotateOnAxis(t,e){return we.setFromAxisAngle(t,e),this.quaternion.multiply(we),this}rotateOnWorldAxis(t,e){return we.setFromAxisAngle(t,e),this.quaternion.premultiply(we),this}rotateX(t){return this.rotateOnAxis(Le,t)}rotateY(t){return this.rotateOnAxis(Ce,t)}rotateZ(t){return this.rotateOnAxis(Pe,t)}translateOnAxis(t,e){return be.copy(t).applyQuaternion(this.quaternion),this.position.add(be.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Le,t)}translateY(t){return this.translateOnAxis(Ce,t)}translateZ(t){return this.translateOnAxis(Pe,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Se.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Te.copy(t):Te.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Ee.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Se.lookAt(Ee,Te,this.up):Se.lookAt(Te,Ee,this.up),this.quaternion.setFromRotationMatrix(Se),r&&(Se.extractRotation(r.matrixWorld),we.setFromRotationMatrix(Se),this.quaternion.premultiply(we.invert()))}add(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return object===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this):(object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object),object.dispatchEvent(De)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object),this)}remove(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(object);return-1!==t&&(object.parent=null,this.children.splice(t,1),object.dispatchEvent(Ie)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null,object.dispatchEvent(Ie)}return this.children.length=0,this}attach(object){return this.updateWorldMatrix(!0,!1),Se.copy(this.matrixWorld).invert(),null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),Se.multiply(object.parent.matrixWorld)),object.applyMatrix4(Se),this.add(object),object.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const object=this.children[i].getObjectByProperty(t,e);if(void 0!==object)return object}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ee,t,Ae),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ee,Re,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let i=0,e=t.length;i<e;i++)t[i].updateWorldMatrix(!1,!0)}}toJSON(meta){const t=void 0===meta||"string"==typeof meta,output={};t&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const object={};function e(t,element){return void 0===t[element.uuid]&&(t[element.uuid]=element.toJSON(meta)),element.uuid}if(object.uuid=this.uuid,object.type=this.type,""!==this.name&&(object.name=this.name),!0===this.castShadow&&(object.castShadow=!0),!0===this.receiveShadow&&(object.receiveShadow=!0),!1===this.visible&&(object.visible=!1),!1===this.frustumCulled&&(object.frustumCulled=!1),0!==this.renderOrder&&(object.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(object.userData=this.userData),object.layers=this.layers.mask,object.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=!1),this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(object.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?object.background=this.background.toJSON():this.background.isTexture&&(object.background=this.background.toJSON(meta).uuid)),this.environment&&this.environment.isTexture&&(object.environment=this.environment.toJSON(meta).uuid);else if(this.isMesh||this.isLine||this.isPoints){object.geometry=e(meta.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let i=0,t=n.length;i<t;i++){const t=n[i];e(meta.shapes,t)}else e(meta.shapes,n)}}if(this.isSkinnedMesh&&(object.bindMode=this.bindMode,object.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(meta.skeletons,this.skeleton),object.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(e(meta.materials,this.material[i]));object.material=t}else object.material=e(meta.materials,this.material);if(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++)object.children.push(this.children[i].toJSON(meta).object)}if(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const t=this.animations[i];object.animations.push(e(meta.animations,t))}}if(t){const t=n(meta.geometries),e=n(meta.materials),r=n(meta.textures),o=n(meta.images),l=n(meta.shapes),c=n(meta.skeletons),h=n(meta.animations);t.length>0&&(output.geometries=t),e.length>0&&(output.materials=e),r.length>0&&(output.textures=r),o.length>0&&(output.images=o),l.length>0&&(output.shapes=l),c.length>0&&(output.skeletons=c),h.length>0&&(output.animations=h)}return output.object=object,output;function n(t){const e=[];for(const n in t){const data=t[n];delete data.metadata,e.push(data)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(source,t=!0){if(this.name=source.name,this.up.copy(source.up),this.position.copy(source.position),this.rotation.order=source.rotation.order,this.quaternion.copy(source.quaternion),this.scale.copy(source.scale),this.matrix.copy(source.matrix),this.matrixWorld.copy(source.matrixWorld),this.matrixAutoUpdate=source.matrixAutoUpdate,this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate,this.layers.mask=source.layers.mask,this.visible=source.visible,this.castShadow=source.castShadow,this.receiveShadow=source.receiveShadow,this.frustumCulled=source.frustumCulled,this.renderOrder=source.renderOrder,this.userData=JSON.parse(JSON.stringify(source.userData)),!0===t)for(let i=0;i<source.children.length;i++){const t=source.children[i];this.add(t.clone())}return this}}Ne.DefaultUp=new Dt(0,1,0),Ne.DefaultMatrixAutoUpdate=!0,Ne.prototype.isObject3D=!0;const ze=new Dt,Oe=new Dt,Be=new Dt,Ue=new Dt,Fe=new Dt,He=new Dt,Ge=new Dt,Ve=new Dt,ke=new Dt,We=new Dt;class je{constructor(a=new Dt,b=new Dt,t=new Dt){this.a=a,this.b=b,this.c=t}static getNormal(a,b,t,e){e.subVectors(t,b),ze.subVectors(a,b),e.cross(ze);const n=e.lengthSq();return n>0?e.multiplyScalar(1/Math.sqrt(n)):e.set(0,0,0)}static getBarycoord(t,a,b,e,n){ze.subVectors(e,a),Oe.subVectors(b,a),Be.subVectors(t,a);const r=ze.dot(ze),o=ze.dot(Oe),l=ze.dot(Be),c=Oe.dot(Oe),h=Oe.dot(Be),d=r*c-o*o;if(0===d)return n.set(-2,-1,-1);const f=1/d,u=(c*l-o*h)*f,m=(r*h-o*l)*f;return n.set(1-u-m,m,u)}static containsPoint(t,a,b,e){return this.getBarycoord(t,a,b,e,Ue),Ue.x>=0&&Ue.y>=0&&Ue.x+Ue.y<=1}static getUV(t,e,n,r,o,l,c,h){return this.getBarycoord(t,e,n,r,Ue),h.set(0,0),h.addScaledVector(o,Ue.x),h.addScaledVector(l,Ue.y),h.addScaledVector(c,Ue.z),h}static isFrontFacing(a,b,t,e){return ze.subVectors(t,b),Oe.subVectors(a,b),ze.cross(Oe).dot(e)<0}set(a,b,t){return this.a.copy(a),this.b.copy(b),this.c.copy(t),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,n,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ze.subVectors(this.c,this.b),Oe.subVectors(this.a,this.b),.5*ze.cross(Oe).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return je.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return je.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,o){return je.getUV(t,this.a,this.b,this.c,e,n,r,o)}containsPoint(t){return je.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return je.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(p,t){const a=this.a,b=this.b,e=this.c;let n,r;Fe.subVectors(b,a),He.subVectors(e,a),Ve.subVectors(p,a);const o=Fe.dot(Ve),l=He.dot(Ve);if(o<=0&&l<=0)return t.copy(a);ke.subVectors(p,b);const c=Fe.dot(ke),h=He.dot(ke);if(c>=0&&h<=c)return t.copy(b);const d=o*h-c*l;if(d<=0&&o>=0&&c<=0)return n=o/(o-c),t.copy(a).addScaledVector(Fe,n);We.subVectors(p,e);const f=Fe.dot(We),m=He.dot(We);if(m>=0&&f<=m)return t.copy(e);const v=f*l-o*m;if(v<=0&&l>=0&&m<=0)return r=l/(l-m),t.copy(a).addScaledVector(He,r);const x=c*m-f*h;if(x<=0&&h-c>=0&&f-m>=0)return Ge.subVectors(e,b),r=(h-c)/(h-c+(f-m)),t.copy(b).addScaledVector(Ge,r);const y=1/(x+v+d);return n=v*y,r=d*y,t.copy(a).addScaledVector(Fe,n).addScaledVector(He,r)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let qe=0;class Xe extends tt{constructor(){super(),Object.defineProperty(this,"id",{value:qe++}),this.uuid=st(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=o,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Y,this.stencilZFail=Y,this.stencilZPass=Y,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(meta){const t=void 0===meta||"string"==typeof meta;t&&(meta={textures:{},images:{}});const data={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function e(t){const e=[];for(const n in t){const data=t[n];delete data.metadata,e.push(data)}return e}if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),this.color&&this.color.isColor&&(data.color=this.color.getHex()),void 0!==this.roughness&&(data.roughness=this.roughness),void 0!==this.metalness&&(data.metalness=this.metalness),void 0!==this.sheen&&(data.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(data.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(data.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(data.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(data.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(data.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(data.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(data.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(data.shininess=this.shininess),void 0!==this.clearcoat&&(data.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(data.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(data.map=this.map.toJSON(meta).uuid),this.matcap&&this.matcap.isTexture&&(data.matcap=this.matcap.toJSON(meta).uuid),this.alphaMap&&this.alphaMap.isTexture&&(data.alphaMap=this.alphaMap.toJSON(meta).uuid),this.lightMap&&this.lightMap.isTexture&&(data.lightMap=this.lightMap.toJSON(meta).uuid,data.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(data.aoMap=this.aoMap.toJSON(meta).uuid,data.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(data.bumpMap=this.bumpMap.toJSON(meta).uuid,data.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(data.normalMap=this.normalMap.toJSON(meta).uuid,data.normalMapType=this.normalMapType,data.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(data.displacementMap=this.displacementMap.toJSON(meta).uuid,data.displacementScale=this.displacementScale,data.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(data.roughnessMap=this.roughnessMap.toJSON(meta).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(data.metalnessMap=this.metalnessMap.toJSON(meta).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(data.emissiveMap=this.emissiveMap.toJSON(meta).uuid),this.specularMap&&this.specularMap.isTexture&&(data.specularMap=this.specularMap.toJSON(meta).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(data.specularIntensityMap=this.specularIntensityMap.toJSON(meta).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(data.specularColorMap=this.specularColorMap.toJSON(meta).uuid),this.envMap&&this.envMap.isTexture&&(data.envMap=this.envMap.toJSON(meta).uuid,void 0!==this.combine&&(data.combine=this.combine)),void 0!==this.envMapIntensity&&(data.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(data.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(data.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(data.gradientMap=this.gradientMap.toJSON(meta).uuid),void 0!==this.transmission&&(data.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(data.transmissionMap=this.transmissionMap.toJSON(meta).uuid),void 0!==this.thickness&&(data.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(data.thicknessMap=this.thicknessMap.toJSON(meta).uuid),void 0!==this.attenuationDistance&&(data.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(data.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(data.size=this.size),null!==this.shadowSide&&(data.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(data.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(data.blending=this.blending),0!==this.side&&(data.side=this.side),this.vertexColors&&(data.vertexColors=!0),this.opacity<1&&(data.opacity=this.opacity),!0===this.transparent&&(data.transparent=this.transparent),data.depthFunc=this.depthFunc,data.depthTest=this.depthTest,data.depthWrite=this.depthWrite,data.colorWrite=this.colorWrite,data.stencilWrite=this.stencilWrite,data.stencilWriteMask=this.stencilWriteMask,data.stencilFunc=this.stencilFunc,data.stencilRef=this.stencilRef,data.stencilFuncMask=this.stencilFuncMask,data.stencilFail=this.stencilFail,data.stencilZFail=this.stencilZFail,data.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(data.rotation=this.rotation),!0===this.polygonOffset&&(data.polygonOffset=!0),0!==this.polygonOffsetFactor&&(data.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(data.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(data.linewidth=this.linewidth),void 0!==this.dashSize&&(data.dashSize=this.dashSize),void 0!==this.gapSize&&(data.gapSize=this.gapSize),void 0!==this.scale&&(data.scale=this.scale),!0===this.dithering&&(data.dithering=!0),this.alphaTest>0&&(data.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(data.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(data.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(data.wireframe=this.wireframe),this.wireframeLinewidth>1&&(data.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(data.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(data.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(data.flatShading=this.flatShading),!1===this.visible&&(data.visible=!1),!1===this.toneMapped&&(data.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(data.userData=this.userData),t){const t=e(meta.textures),n=e(meta.images);t.length>0&&(data.textures=t),n.length>0&&(data.images=n)}return data}clone(){return(new this.constructor).copy(this)}copy(source){this.name=source.name,this.fog=source.fog,this.blending=source.blending,this.side=source.side,this.vertexColors=source.vertexColors,this.opacity=source.opacity,this.transparent=source.transparent,this.blendSrc=source.blendSrc,this.blendDst=source.blendDst,this.blendEquation=source.blendEquation,this.blendSrcAlpha=source.blendSrcAlpha,this.blendDstAlpha=source.blendDstAlpha,this.blendEquationAlpha=source.blendEquationAlpha,this.depthFunc=source.depthFunc,this.depthTest=source.depthTest,this.depthWrite=source.depthWrite,this.stencilWriteMask=source.stencilWriteMask,this.stencilFunc=source.stencilFunc,this.stencilRef=source.stencilRef,this.stencilFuncMask=source.stencilFuncMask,this.stencilFail=source.stencilFail,this.stencilZFail=source.stencilZFail,this.stencilZPass=source.stencilZPass,this.stencilWrite=source.stencilWrite;const t=source.clippingPlanes;let e=null;if(null!==t){const n=t.length;e=new Array(n);for(let i=0;i!==n;++i)e[i]=t[i].clone()}return this.clippingPlanes=e,this.clipIntersection=source.clipIntersection,this.clipShadows=source.clipShadows,this.shadowSide=source.shadowSide,this.colorWrite=source.colorWrite,this.precision=source.precision,this.polygonOffset=source.polygonOffset,this.polygonOffsetFactor=source.polygonOffsetFactor,this.polygonOffsetUnits=source.polygonOffsetUnits,this.dithering=source.dithering,this.alphaTest=source.alphaTest,this.alphaToCoverage=source.alphaToCoverage,this.premultipliedAlpha=source.premultipliedAlpha,this.visible=source.visible,this.toneMapped=source.toneMapped,this.userData=JSON.parse(JSON.stringify(source.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}Xe.prototype.isMaterial=!0;class Je extends Xe{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new bt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this}}Je.prototype.isMeshBasicMaterial=!0;const Ye=new Dt,Ze=new ut;class Ke{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=Z,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(source){return this.name=source.name,this.array=new source.array.constructor(source.array),this.itemSize=source.itemSize,this.count=source.count,this.normalized=source.normalized,this.usage=source.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new bt),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new ut),e[n++]=r.x,e[n++]=r.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new Dt),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new Rt),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let i=0,e=this.count;i<e;i++)Ze.fromBufferAttribute(this,i),Ze.applyMatrix3(t),this.setXY(i,Ze.x,Ze.y);else if(3===this.itemSize)for(let i=0,e=this.count;i<e;i++)Ye.fromBufferAttribute(this,i),Ye.applyMatrix3(t),this.setXYZ(i,Ye.x,Ye.y,Ye.z);return this}applyMatrix4(t){for(let i=0,e=this.count;i<e;i++)Ye.x=this.getX(i),Ye.y=this.getY(i),Ye.z=this.getZ(i),Ye.applyMatrix4(t),this.setXYZ(i,Ye.x,Ye.y,Ye.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)Ye.x=this.getX(i),Ye.y=this.getY(i),Ye.z=this.getZ(i),Ye.applyNormalMatrix(t),this.setXYZ(i,Ye.x,Ye.y,Ye.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)Ye.x=this.getX(i),Ye.y=this.getY(i),Ye.z=this.getZ(i),Ye.transformDirection(t),this.setXYZ(i,Ye.x,Ye.y,Ye.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,o){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(data.name=this.name),this.usage!==Z&&(data.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(data.updateRange=this.updateRange),data}}Ke.prototype.isBufferAttribute=!0;class Qe extends Ke{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class $e extends Ke{constructor(t,e,n){super(new Uint32Array(t),e,n)}}(class extends Ke{constructor(t,e,n){super(new Uint16Array(t),e,n)}}).prototype.isFloat16BufferAttribute=!0;class tn extends Ke{constructor(t,e,n){super(new Float32Array(t),e,n)}}let en=0;const nn=new ce,rn=new Ne,sn=new Dt,an=new zt,on=new zt,ln=new Dt;class cn extends tt{constructor(){super(),Object.defineProperty(this,"id",{value:en++}),this.uuid=st(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ft(t)?$e:Qe)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new pt).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(q){return nn.makeRotationFromQuaternion(q),this.applyMatrix4(nn),this}rotateX(t){return nn.makeRotationX(t),this.applyMatrix4(nn),this}rotateY(t){return nn.makeRotationY(t),this.applyMatrix4(nn),this}rotateZ(t){return nn.makeRotationZ(t),this.applyMatrix4(nn),this}translate(t,e,n){return nn.makeTranslation(t,e,n),this.applyMatrix4(nn),this}scale(t,e,n){return nn.makeScale(t,e,n),this.applyMatrix4(nn),this}lookAt(t){return rn.lookAt(t),rn.updateMatrix(),this.applyMatrix4(rn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(sn).negate(),this.translate(sn.x,sn.y,sn.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new tn(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new zt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Dt(-1/0,-1/0,-1/0),new Dt(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,t=e.length;i<t;i++){const t=e[i];an.setFromBufferAttribute(t),this.morphTargetsRelative?(ln.addVectors(this.boundingBox.min,an.min),this.boundingBox.expandByPoint(ln),ln.addVectors(this.boundingBox.max,an.max),this.boundingBox.expandByPoint(ln)):(this.boundingBox.expandByPoint(an.min),this.boundingBox.expandByPoint(an.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new te);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Dt,1/0);if(t){const n=this.boundingSphere.center;if(an.setFromBufferAttribute(t),e)for(let i=0,t=e.length;i<t;i++){const t=e[i];on.setFromBufferAttribute(t),this.morphTargetsRelative?(ln.addVectors(an.min,on.min),an.expandByPoint(ln),ln.addVectors(an.max,on.max),an.expandByPoint(ln)):(an.expandByPoint(on.min),an.expandByPoint(on.max))}an.getCenter(n);let r=0;for(let i=0,e=t.count;i<e;i++)ln.fromBufferAttribute(t,i),r=Math.max(r,n.distanceToSquared(ln));if(e)for(let i=0,o=e.length;i<o;i++){const o=e[i],l=this.morphTargetsRelative;for(let e=0,c=o.count;e<c;e++)ln.fromBufferAttribute(o,e),l&&(sn.fromBufferAttribute(t,e),ln.add(sn)),r=Math.max(r,n.distanceToSquared(ln))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,o=e.normal.array,l=e.uv.array,c=r.length/3;void 0===e.tangent&&this.setAttribute("tangent",new Ke(new Float32Array(4*c),4));const h=e.tangent.array,d=[],f=[];for(let i=0;i<c;i++)d[i]=new Dt,f[i]=new Dt;const m=new Dt,v=new Dt,x=new Dt,y=new ut,_=new ut,M=new ut,w=new Dt,S=new Dt;function T(a,b,t){m.fromArray(r,3*a),v.fromArray(r,3*b),x.fromArray(r,3*t),y.fromArray(l,2*a),_.fromArray(l,2*b),M.fromArray(l,2*t),v.sub(m),x.sub(m),_.sub(y),M.sub(y);const e=1/(_.x*M.y-M.x*_.y);isFinite(e)&&(w.copy(v).multiplyScalar(M.y).addScaledVector(x,-_.y).multiplyScalar(e),S.copy(x).multiplyScalar(_.x).addScaledVector(v,-M.x).multiplyScalar(e),d[a].add(w),d[b].add(w),d[t].add(w),f[a].add(S),f[b].add(S),f[t].add(S))}let E=this.groups;0===E.length&&(E=[{start:0,count:n.length}]);for(let i=0,t=E.length;i<t;++i){const t=E[i],e=t.start;for(let r=e,o=e+t.count;r<o;r+=3)T(n[r+0],n[r+1],n[r+2])}const A=new Dt,R=new Dt,L=new Dt,C=new Dt;function P(t){L.fromArray(o,3*t),C.copy(L);const e=d[t];A.copy(e),A.sub(L.multiplyScalar(L.dot(e))).normalize(),R.crossVectors(C,e);const n=R.dot(f[t])<0?-1:1;h[4*t]=A.x,h[4*t+1]=A.y,h[4*t+2]=A.z,h[4*t+3]=n}for(let i=0,t=E.length;i<t;++i){const t=E[i],e=t.start;for(let r=e,o=e+t.count;r<o;r+=3)P(n[r+0]),P(n[r+1]),P(n[r+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Ke(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let i=0,t=n.count;i<t;i++)n.setXYZ(i,0,0,0);const r=new Dt,o=new Dt,l=new Dt,c=new Dt,h=new Dt,d=new Dt,f=new Dt,m=new Dt;if(t)for(let i=0,v=t.count;i<v;i+=3){const v=t.getX(i+0),x=t.getX(i+1),y=t.getX(i+2);r.fromBufferAttribute(e,v),o.fromBufferAttribute(e,x),l.fromBufferAttribute(e,y),f.subVectors(l,o),m.subVectors(r,o),f.cross(m),c.fromBufferAttribute(n,v),h.fromBufferAttribute(n,x),d.fromBufferAttribute(n,y),c.add(f),h.add(f),d.add(f),n.setXYZ(v,c.x,c.y,c.z),n.setXYZ(x,h.x,h.y,h.z),n.setXYZ(y,d.x,d.y,d.z)}else for(let i=0,t=e.count;i<t;i+=3)r.fromBufferAttribute(e,i+0),o.fromBufferAttribute(e,i+1),l.fromBufferAttribute(e,i+2),f.subVectors(l,o),m.subVectors(r,o),f.cross(m),n.setXYZ(i+0,f.x,f.y,f.z),n.setXYZ(i+1,f.x,f.y,f.z),n.setXYZ(i+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const o=n[r].array,l=t.attributes[r],c=l.array,h=l.itemSize*e,d=Math.min(c.length,o.length-h);for(let i=0,t=h;i<d;i++,t++)o[t]=c[i]}return this}normalizeNormals(){const t=this.attributes.normal;for(let i=0,e=t.count;i<e;i++)ln.fromBufferAttribute(t,i),ln.normalize(),t.setXYZ(i,ln.x,ln.y,ln.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,o=t.normalized,l=new n.constructor(e.length*r);let c=0,h=0;for(let i=0,o=e.length;i<o;i++){c=t.isInterleavedBufferAttribute?e[i]*t.data.stride+t.offset:e[i]*r;for(let t=0;t<r;t++)l[h++]=n[c++]}return new Ke(l,r,o)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new cn,n=this.index.array,r=this.attributes;for(const o in r){const l=t(r[o],n);e.setAttribute(o,l)}const o=this.morphAttributes;for(const r in o){const l=[],c=o[r];for(let i=0,e=c.length;i<e;i++){const e=t(c[i],n);l.push(e)}e.morphAttributes[r]=l}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let i=0,t=l.length;i<t;i++){const t=l[i];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const data={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(data.uuid=this.uuid,data.type=this.type,""!==this.name&&(data.name=this.name),Object.keys(this.userData).length>0&&(data.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const e in t)void 0!==t[e]&&(data[e]=t[e]);return data}data.data={attributes:{}};const t=this.index;null!==t&&(data.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const e=this.attributes;for(const t in e){const n=e[t];data.data.attributes[t]=n.toJSON(data.data)}const n={};let r=!1;for(const t in this.morphAttributes){const e=this.morphAttributes[t],o=[];for(let i=0,t=e.length;i<t;i++){const t=e[i];o.push(t.toJSON(data.data))}o.length>0&&(n[t]=o,r=!0)}r&&(data.data.morphAttributes=n,data.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(data.data.groups=JSON.parse(JSON.stringify(o)));const l=this.boundingSphere;return null!==l&&(data.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),data}clone(){return(new this.constructor).copy(this)}copy(source){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const data={};this.name=source.name;const t=source.index;null!==t&&this.setIndex(t.clone(data));const e=source.attributes;for(const t in e){const n=e[t];this.setAttribute(t,n.clone(data))}const n=source.morphAttributes;for(const t in n){const e=[],r=n[t];for(let i=0,t=r.length;i<t;i++)e.push(r[i].clone(data));this.morphAttributes[t]=e}this.morphTargetsRelative=source.morphTargetsRelative;const r=source.groups;for(let i=0,t=r.length;i<t;i++){const t=r[i];this.addGroup(t.start,t.count,t.materialIndex)}const o=source.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=source.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=source.drawRange.start,this.drawRange.count=source.drawRange.count,this.userData=source.userData,void 0!==source.parameters&&(this.parameters=Object.assign({},source.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}cn.prototype.isBufferGeometry=!0;const hn=new ce,un=new le,dn=new te,pn=new Dt,fn=new Dt,mn=new Dt,gn=new Dt,vn=new Dt,xn=new Dt,yn=new Dt,_n=new Dt,Mn=new Dt,bn=new ut,wn=new ut,Sn=new ut,Tn=new Dt,En=new Dt;class An extends Ne{constructor(t=new cn,e=new Je){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(source){return super.copy(source),void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice()),void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary)),this.material=source.material,this.geometry=source.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,o=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),dn.copy(n.boundingSphere),dn.applyMatrix4(o),!1===t.ray.intersectsSphere(dn))return;if(hn.copy(o).invert(),un.copy(t.ray).applyMatrix4(hn),null!==n.boundingBox&&!1===un.intersectsBox(n.boundingBox))return;let l;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position,h=n.morphAttributes.position,d=n.morphTargetsRelative,f=n.attributes.uv,m=n.attributes.uv2,v=n.groups,x=n.drawRange;if(null!==o)if(Array.isArray(r))for(let i=0,n=v.length;i<n;i++){const n=v[i],y=r[n.materialIndex];for(let r=Math.max(n.start,x.start),v=Math.min(o.count,Math.min(n.start+n.count,x.start+x.count));r<v;r+=3){const a=o.getX(r),b=o.getX(r+1),v=o.getX(r+2);l=Rn(this,y,t,un,c,h,d,f,m,a,b,v),l&&(l.faceIndex=Math.floor(r/3),l.face.materialIndex=n.materialIndex,e.push(l))}}else{for(let i=Math.max(0,x.start),n=Math.min(o.count,x.start+x.count);i<n;i+=3){const a=o.getX(i),b=o.getX(i+1),n=o.getX(i+2);l=Rn(this,r,t,un,c,h,d,f,m,a,b,n),l&&(l.faceIndex=Math.floor(i/3),e.push(l))}}else if(void 0!==c)if(Array.isArray(r))for(let i=0,n=v.length;i<n;i++){const n=v[i],o=r[n.materialIndex];for(let r=Math.max(n.start,x.start),v=Math.min(c.count,Math.min(n.start+n.count,x.start+x.count));r<v;r+=3){l=Rn(this,o,t,un,c,h,d,f,m,r,r+1,r+2),l&&(l.faceIndex=Math.floor(r/3),l.face.materialIndex=n.materialIndex,e.push(l))}}else{for(let i=Math.max(0,x.start),n=Math.min(c.count,x.start+x.count);i<n;i+=3){l=Rn(this,r,t,un,c,h,d,f,m,i,i+1,i+2),l&&(l.faceIndex=Math.floor(i/3),e.push(l))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Rn(object,t,e,n,r,o,l,c,h,a,b,d){pn.fromBufferAttribute(r,a),fn.fromBufferAttribute(r,b),mn.fromBufferAttribute(r,d);const f=object.morphTargetInfluences;if(o&&f){yn.set(0,0,0),_n.set(0,0,0),Mn.set(0,0,0);for(let i=0,t=o.length;i<t;i++){const t=f[i],e=o[i];0!==t&&(gn.fromBufferAttribute(e,a),vn.fromBufferAttribute(e,b),xn.fromBufferAttribute(e,d),l?(yn.addScaledVector(gn,t),_n.addScaledVector(vn,t),Mn.addScaledVector(xn,t)):(yn.addScaledVector(gn.sub(pn),t),_n.addScaledVector(vn.sub(fn),t),Mn.addScaledVector(xn.sub(mn),t)))}pn.add(yn),fn.add(_n),mn.add(Mn)}object.isSkinnedMesh&&(object.boneTransform(a,pn),object.boneTransform(b,fn),object.boneTransform(d,mn));const m=function(object,t,e,n,r,o,l,c){let h;if(h=1===t.side?n.intersectTriangle(l,o,r,!0,c):n.intersectTriangle(r,o,l,2!==t.side,c),null===h)return null;En.copy(c),En.applyMatrix4(object.matrixWorld);const d=e.ray.origin.distanceTo(En);return d<e.near||d>e.far?null:{distance:d,point:En.clone(),object:object}}(object,t,e,n,pn,fn,mn,Tn);if(m){c&&(bn.fromBufferAttribute(c,a),wn.fromBufferAttribute(c,b),Sn.fromBufferAttribute(c,d),m.uv=je.getUV(Tn,pn,fn,mn,bn,wn,Sn,new ut)),h&&(bn.fromBufferAttribute(h,a),wn.fromBufferAttribute(h,b),Sn.fromBufferAttribute(h,d),m.uv2=je.getUV(Tn,pn,fn,mn,bn,wn,Sn,new ut));const t={a:a,b:b,c:d,normal:new Dt,materialIndex:0};je.getNormal(pn,fn,mn,t.normal),m.face=t}return m}An.prototype.isMesh=!0;class Ln extends cn{constructor(t=1,e=1,n=1,r=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:o,depthSegments:l};const c=this;r=Math.floor(r),o=Math.floor(o),l=Math.floor(l);const h=[],d=[],f=[],m=[];let v=0,x=0;function y(u,t,e,n,r,o,l,y,_,M,w){const S=o/_,T=l/M,E=o/2,A=l/2,R=y/2,L=_+1,C=M+1;let P=0,D=0;const I=new Dt;for(let o=0;o<C;o++){const l=o*T-A;for(let c=0;c<L;c++){const h=c*S-E;I[u]=h*n,I[t]=l*r,I[e]=R,d.push(I.x,I.y,I.z),I[u]=0,I[t]=0,I[e]=y>0?1:-1,f.push(I.x,I.y,I.z),m.push(c/_),m.push(1-o/M),P+=1}}for(let t=0;t<M;t++)for(let e=0;e<_;e++){const a=v+e+L*t,b=v+e+L*(t+1),n=v+(e+1)+L*(t+1),r=v+(e+1)+L*t;h.push(a,b,r),h.push(b,n,r),D+=6}c.addGroup(x,D,w),x+=D,v+=P}y("z","y","x",-1,-1,n,e,t,l,o,0),y("z","y","x",1,-1,n,e,-t,l,o,1),y("x","z","y",1,1,t,n,e,r,l,2),y("x","z","y",1,-1,t,n,-e,r,l,3),y("x","y","z",1,-1,t,e,n,r,o,4),y("x","y","z",-1,-1,t,e,-n,r,o,5),this.setIndex(h),this.setAttribute("position",new tn(d,3)),this.setAttribute("normal",new tn(f,3)),this.setAttribute("uv",new tn(m,2))}static fromJSON(data){return new Ln(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments)}}function Cn(t){const e={};for(const u in t){e[u]={};for(const p in t[u]){const n=t[u][p];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?e[u][p]=n.clone():Array.isArray(n)?e[u][p]=n.slice():e[u][p]=n}}return e}function Pn(t){const e={};for(let u=0;u<t.length;u++){const n=Cn(t[u]);for(const p in n)e[p]=n[p]}return e}const Dn={clone:Cn,merge:Pn};class In extends Xe{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(source){return super.copy(source),this.fragmentShader=source.fragmentShader,this.vertexShader=source.vertexShader,this.uniforms=Cn(source.uniforms),this.defines=Object.assign({},source.defines),this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.lights=source.lights,this.clipping=source.clipping,this.extensions=Object.assign({},source.extensions),this.glslVersion=source.glslVersion,this}toJSON(meta){const data=super.toJSON(meta);data.glslVersion=this.glslVersion,data.uniforms={};for(const t in this.uniforms){const e=this.uniforms[t].value;e&&e.isTexture?data.uniforms[t]={type:"t",value:e.toJSON(meta).uuid}:e&&e.isColor?data.uniforms[t]={type:"c",value:e.getHex()}:e&&e.isVector2?data.uniforms[t]={type:"v2",value:e.toArray()}:e&&e.isVector3?data.uniforms[t]={type:"v3",value:e.toArray()}:e&&e.isVector4?data.uniforms[t]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?data.uniforms[t]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?data.uniforms[t]={type:"m4",value:e.toArray()}:data.uniforms[t]={value:e}}Object.keys(this.defines).length>0&&(data.defines=this.defines),data.vertexShader=this.vertexShader,data.fragmentShader=this.fragmentShader;const t={};for(const e in this.extensions)!0===this.extensions[e]&&(t[e]=!0);return Object.keys(t).length>0&&(data.extensions=t),data}}In.prototype.isShaderMaterial=!0;class Nn extends Ne{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ce,this.projectionMatrix=new ce,this.projectionMatrixInverse=new ce}copy(source,t){return super.copy(source,t),this.matrixWorldInverse.copy(source.matrixWorldInverse),this.projectionMatrix.copy(source.projectionMatrix),this.projectionMatrixInverse.copy(source.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Nn.prototype.isCamera=!0;class zn extends Nn{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(source,t){return super.copy(source,t),this.fov=source.fov,this.zoom=source.zoom,this.near=source.near,this.far=source.far,this.focus=source.focus,this.aspect=source.aspect,this.view=null===source.view?null:Object.assign({},source.view),this.filmGauge=source.filmGauge,this.filmOffset=source.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*it*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*nt*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*it*Math.atan(Math.tan(.5*nt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,o,l){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*nt*this.fov)/this.zoom,n=2*e,r=this.aspect*n,o=-.5*r;const view=this.view;if(null!==this.view&&this.view.enabled){const t=view.fullWidth,l=view.fullHeight;o+=view.offsetX*r/t,e-=view.offsetY*n/l,r*=view.width/t,n*=view.height/l}const l=this.filmOffset;0!==l&&(o+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){const data=super.toJSON(meta);return data.object.fov=this.fov,data.object.zoom=this.zoom,data.object.near=this.near,data.object.far=this.far,data.object.focus=this.focus,data.object.aspect=this.aspect,null!==this.view&&(data.object.view=Object.assign({},this.view)),data.object.filmGauge=this.filmGauge,data.object.filmOffset=this.filmOffset,data}}zn.prototype.isPerspectiveCamera=!0;const On=90;class Bn extends Ne{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new zn(On,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Dt(1,0,0)),this.add(r);const o=new zn(On,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new Dt(-1,0,0)),this.add(o);const l=new zn(On,1,t,e);l.layers=this.layers,l.up.set(0,0,1),l.lookAt(new Dt(0,1,0)),this.add(l);const c=new zn(On,1,t,e);c.layers=this.layers,c.up.set(0,0,-1),c.lookAt(new Dt(0,-1,0)),this.add(c);const h=new zn(On,1,t,e);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new Dt(0,0,1)),this.add(h);const d=new zn(On,1,t,e);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new Dt(0,0,-1)),this.add(d)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,o,l,c,h,d]=this.children,f=t.xr.enabled,m=t.getRenderTarget();t.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,o),t.setRenderTarget(n,2),t.render(e,l),t.setRenderTarget(n,3),t.render(e,c),t.setRenderTarget(n,4),t.render(e,h),n.texture.generateMipmaps=v,t.setRenderTarget(n,5),t.render(e,d),t.setRenderTarget(m),t.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class Un extends Et{constructor(t,e,n,r,o,c,h,d,f,m){super(t=void 0!==t?t:[],e=void 0!==e?e:l,n,r,o,c,h,d,f,m),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Un.prototype.isCubeTexture=!0;class Fn extends Lt{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Un(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:S}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=D,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new Ln(5,5,5),o=new In({name:"CubemapFromEquirect",uniforms:Cn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});o.uniforms.tEquirect.value=e;const l=new An(r,o),c=e.minFilter;e.minFilter===T&&(e.minFilter=S);return new Bn(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,r){const o=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(o)}}Fn.prototype.isWebGLCubeRenderTarget=!0;const Hn=new Dt,Gn=new Dt,Vn=new pt;class kn{constructor(t=new Dt(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(a,b,t){const e=Hn.subVectors(t,b).cross(Gn.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(e,a),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(line,t){const e=line.delta(Hn),n=this.normal.dot(e);if(0===n)return 0===this.distanceToPoint(line.start)?t.copy(line.start):null;const r=-(line.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e).multiplyScalar(r).add(line.start)}intersectsLine(line){const t=this.distanceToPoint(line.start),e=this.distanceToPoint(line.end);return t<0&&e>0||e<0&&t>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Vn.getNormalMatrix(t),r=this.coplanarPoint(Hn).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}kn.prototype.isPlane=!0;const Wn=new te,jn=new Dt;class qn{constructor(t=new kn,e=new kn,n=new kn,r=new kn,o=new kn,l=new kn){this.planes=[t,e,n,r,o,l]}set(t,e,n,r,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(r),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],o=n[1],l=n[2],c=n[3],h=n[4],d=n[5],f=n[6],m=n[7],v=n[8],x=n[9],y=n[10],_=n[11],M=n[12],w=n[13],S=n[14],T=n[15];return e[0].setComponents(c-r,m-h,_-v,T-M).normalize(),e[1].setComponents(c+r,m+h,_+v,T+M).normalize(),e[2].setComponents(c+o,m+d,_+x,T+w).normalize(),e[3].setComponents(c-o,m-d,_-x,T-w).normalize(),e[4].setComponents(c-l,m-f,_-y,T-S).normalize(),e[5].setComponents(c+l,m+f,_+y,T+S).normalize(),this}intersectsObject(object){const t=object.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Wn.copy(t.boundingSphere).applyMatrix4(object.matrixWorld),this.intersectsSphere(Wn)}intersectsSprite(t){return Wn.center.set(0,0,0),Wn.radius=.7071067811865476,Wn.applyMatrix4(t.matrixWorld),this.intersectsSphere(Wn)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let i=0;i<6;i++){if(e[i].distanceToPoint(n)<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(jn.x=n.normal.x>0?t.max.x:t.min.x,jn.y=n.normal.y>0?t.max.y:t.min.y,jn.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(jn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Xn(){let t=null,e=!1,n=null,r=null;function o(time,e){n(time,e),r=t.requestAnimationFrame(o)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(o),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Jn(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const data=r.get(e);data&&(t.deleteBuffer(data.buffer),r.delete(e))},update:function(e,o){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const data=r.get(e);void 0===data?r.set(e,function(e,r){const o=e.array,l=e.usage,c=t.createBuffer();t.bindBuffer(r,c),t.bufferData(r,o,l),e.onUploadCallback();let h=5126;return o instanceof Float32Array?h=5126:o instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):o instanceof Uint16Array?e.isFloat16BufferAttribute?n?h=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):h=5123:o instanceof Int16Array?h=5122:o instanceof Uint32Array?h=5125:o instanceof Int32Array?h=5124:o instanceof Int8Array?h=5120:(o instanceof Uint8Array||o instanceof Uint8ClampedArray)&&(h=5121),{buffer:c,type:h,bytesPerElement:o.BYTES_PER_ELEMENT,version:e.version}}(e,o)):data.version<e.version&&(!function(e,r,o){const l=r.array,c=r.updateRange;t.bindBuffer(o,e),-1===c.count?t.bufferSubData(o,0,l):(n?t.bufferSubData(o,c.offset*l.BYTES_PER_ELEMENT,l,c.offset,c.count):t.bufferSubData(o,c.offset*l.BYTES_PER_ELEMENT,l.subarray(c.offset,c.offset+c.count)),c.count=-1)}(data.buffer,e,o),data.version=e.version)}}}class Yn extends cn{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(r),d=c+1,f=h+1,m=t/c,v=e/h,x=[],y=[],_=[],M=[];for(let t=0;t<f;t++){const e=t*v-l;for(let n=0;n<d;n++){const r=n*m-o;y.push(r,-e,0),_.push(0,0,1),M.push(n/c),M.push(1-t/h)}}for(let t=0;t<h;t++)for(let e=0;e<c;e++){const a=e+d*t,b=e+d*(t+1),n=e+1+d*(t+1),r=e+1+d*t;x.push(a,b,r),x.push(b,n,r)}this.setIndex(x),this.setAttribute("position",new tn(y,3)),this.setAttribute("normal",new tn(_,3)),this.setAttribute("uv",new tn(M,2))}static fromJSON(data){return new Yn(data.width,data.height,data.widthSegments,data.heightSegments)}}const Zn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\treturn texture2D( envMap, uv ).rgb;\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Kn={common:{diffuse:{value:new bt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new pt},uv2Transform:{value:new pt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ut(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new bt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new bt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new pt}},sprite:{diffuse:{value:new bt(16777215)},opacity:{value:1},center:{value:new ut(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new pt}}},Qn={basic:{uniforms:Pn([Kn.common,Kn.specularmap,Kn.envmap,Kn.aomap,Kn.lightmap,Kn.fog]),vertexShader:Zn.meshbasic_vert,fragmentShader:Zn.meshbasic_frag},lambert:{uniforms:Pn([Kn.common,Kn.specularmap,Kn.envmap,Kn.aomap,Kn.lightmap,Kn.emissivemap,Kn.fog,Kn.lights,{emissive:{value:new bt(0)}}]),vertexShader:Zn.meshlambert_vert,fragmentShader:Zn.meshlambert_frag},phong:{uniforms:Pn([Kn.common,Kn.specularmap,Kn.envmap,Kn.aomap,Kn.lightmap,Kn.emissivemap,Kn.bumpmap,Kn.normalmap,Kn.displacementmap,Kn.fog,Kn.lights,{emissive:{value:new bt(0)},specular:{value:new bt(1118481)},shininess:{value:30}}]),vertexShader:Zn.meshphong_vert,fragmentShader:Zn.meshphong_frag},standard:{uniforms:Pn([Kn.common,Kn.envmap,Kn.aomap,Kn.lightmap,Kn.emissivemap,Kn.bumpmap,Kn.normalmap,Kn.displacementmap,Kn.roughnessmap,Kn.metalnessmap,Kn.fog,Kn.lights,{emissive:{value:new bt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Zn.meshphysical_vert,fragmentShader:Zn.meshphysical_frag},toon:{uniforms:Pn([Kn.common,Kn.aomap,Kn.lightmap,Kn.emissivemap,Kn.bumpmap,Kn.normalmap,Kn.displacementmap,Kn.gradientmap,Kn.fog,Kn.lights,{emissive:{value:new bt(0)}}]),vertexShader:Zn.meshtoon_vert,fragmentShader:Zn.meshtoon_frag},matcap:{uniforms:Pn([Kn.common,Kn.bumpmap,Kn.normalmap,Kn.displacementmap,Kn.fog,{matcap:{value:null}}]),vertexShader:Zn.meshmatcap_vert,fragmentShader:Zn.meshmatcap_frag},points:{uniforms:Pn([Kn.points,Kn.fog]),vertexShader:Zn.points_vert,fragmentShader:Zn.points_frag},dashed:{uniforms:Pn([Kn.common,Kn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Zn.linedashed_vert,fragmentShader:Zn.linedashed_frag},depth:{uniforms:Pn([Kn.common,Kn.displacementmap]),vertexShader:Zn.depth_vert,fragmentShader:Zn.depth_frag},normal:{uniforms:Pn([Kn.common,Kn.bumpmap,Kn.normalmap,Kn.displacementmap,{opacity:{value:1}}]),vertexShader:Zn.meshnormal_vert,fragmentShader:Zn.meshnormal_frag},sprite:{uniforms:Pn([Kn.sprite,Kn.fog]),vertexShader:Zn.sprite_vert,fragmentShader:Zn.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null}},vertexShader:Zn.background_vert,fragmentShader:Zn.background_frag},cube:{uniforms:Pn([Kn.envmap,{opacity:{value:1}}]),vertexShader:Zn.cube_vert,fragmentShader:Zn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Zn.equirect_vert,fragmentShader:Zn.equirect_frag},distanceRGBA:{uniforms:Pn([Kn.common,Kn.displacementmap,{referencePosition:{value:new Dt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Zn.distanceRGBA_vert,fragmentShader:Zn.distanceRGBA_frag},shadow:{uniforms:Pn([Kn.lights,Kn.fog,{color:{value:new bt(0)},opacity:{value:1}}]),vertexShader:Zn.shadow_vert,fragmentShader:Zn.shadow_frag}};function $n(t,e,n,r,o,l){const c=new bt(0);let h,d,m=!0===o?0:1,v=null,x=0,y=null;function _(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,l)}return{getClearColor:function(){return c},setClearColor:function(t,e=1){c.set(t),m=e,_(c,m)},getClearAlpha:function(){return m},setClearAlpha:function(t){m=t,_(c,m)},render:function(n,o){let l=!1,M=!0===o.isScene?o.background:null;M&&M.isTexture&&(M=e.get(M));const w=t.xr,S=w.getSession&&w.getSession();S&&"additive"===S.environmentBlendMode&&(M=null),null===M?_(c,m):M&&M.isColor&&(_(M,1),l=!0),(t.autoClear||l)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),M&&(M.isCubeTexture||M.mapping===f)?(void 0===d&&(d=new An(new Ln(1,1,1),new In({name:"BackgroundCubeMaterial",uniforms:Cn(Qn.cube.uniforms),vertexShader:Qn.cube.vertexShader,fragmentShader:Qn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(d)),d.material.uniforms.envMap.value=M,d.material.uniforms.flipEnvMap.value=M.isCubeTexture&&!1===M.isRenderTargetTexture?-1:1,v===M&&x===M.version&&y===t.toneMapping||(d.material.needsUpdate=!0,v=M,x=M.version,y=t.toneMapping),n.unshift(d,d.geometry,d.material,0,0,null)):M&&M.isTexture&&(void 0===h&&(h=new An(new Yn(2,2),new In({name:"BackgroundMaterial",uniforms:Cn(Qn.background.uniforms),vertexShader:Qn.background.vertexShader,fragmentShader:Qn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(h)),h.material.uniforms.t2D.value=M,!0===M.matrixAutoUpdate&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),v===M&&x===M.version&&y===t.toneMapping||(h.material.needsUpdate=!0,v=M,x=M.version,y=t.toneMapping),n.unshift(h,h.geometry,h.material,0,0,null))}}}function ti(t,e,n,r){const o=t.getParameter(34921),l=r.isWebGL2?null:e.get("OES_vertex_array_object"),c=r.isWebGL2||null!==l,h={},d=x(null);let f=d;function m(e){return r.isWebGL2?t.bindVertexArray(e):l.bindVertexArrayOES(e)}function v(e){return r.isWebGL2?t.deleteVertexArray(e):l.deleteVertexArrayOES(e)}function x(t){const e=[],n=[],r=[];for(let i=0;i<o;i++)e[i]=0,n[i]=0,r[i]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function y(){const t=f.newAttributes;for(let i=0,e=t.length;i<e;i++)t[i]=0}function _(t){M(t,0)}function M(n,o){const l=f.newAttributes,c=f.enabledAttributes,h=f.attributeDivisors;if(l[n]=1,0===c[n]&&(t.enableVertexAttribArray(n),c[n]=1),h[n]!==o){(r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,o),h[n]=o}}function w(){const e=f.newAttributes,n=f.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function S(e,n,o,l,c,h){!0!==r.isWebGL2||5124!==o&&5125!==o?t.vertexAttribPointer(e,n,o,l,c,h):t.vertexAttribIPointer(e,n,o,c,h)}function T(){E(),f!==d&&(f=d,m(f.object))}function E(){d.geometry=null,d.program=null,d.wireframe=!1}return{setup:function(object,o,d,v,T){let E=!1;if(c){const e=function(e,n,o){const c=!0===o.wireframe;let d=h[e.id];void 0===d&&(d={},h[e.id]=d);let f=d[n.id];void 0===f&&(f={},d[n.id]=f);let m=f[c];void 0===m&&(m=x(r.isWebGL2?t.createVertexArray():l.createVertexArrayOES()),f[c]=m);return m}(v,d,o);f!==e&&(f=e,m(f.object)),E=function(t,e){const n=f.attributes,r=t.attributes;let o=0;for(const t in r){const e=n[t],l=r[t];if(void 0===e)return!0;if(e.attribute!==l)return!0;if(e.data!==l.data)return!0;o++}return f.attributesNum!==o||f.index!==e}(v,T),E&&function(t,e){const n={},r=t.attributes;let o=0;for(const t in r){const e=r[t],data={};data.attribute=e,e.data&&(data.data=e.data),n[t]=data,o++}f.attributes=n,f.attributesNum=o,f.index=e}(v,T)}else{const t=!0===o.wireframe;f.geometry===v.id&&f.program===d.id&&f.wireframe===t||(f.geometry=v.id,f.program=d.id,f.wireframe=t,E=!0)}!0===object.isInstancedMesh&&(E=!0),null!==T&&n.update(T,34963),E&&(!function(object,o,l,c){if(!1===r.isWebGL2&&(object.isInstancedMesh||c.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;y();const h=c.attributes,d=l.getAttributes(),f=o.defaultAttributeValues;for(const e in d){const r=d[e];if(r.location>=0){let o=h[e];if(void 0===o&&("instanceMatrix"===e&&object.instanceMatrix&&(o=object.instanceMatrix),"instanceColor"===e&&object.instanceColor&&(o=object.instanceColor)),void 0!==o){const e=o.normalized,l=o.itemSize,h=n.get(o);if(void 0===h)continue;const d=h.buffer,f=h.type,m=h.bytesPerElement;if(o.isInterleavedBufferAttribute){const data=o.data,n=data.stride,h=o.offset;if(data&&data.isInstancedInterleavedBuffer){for(let i=0;i<r.locationSize;i++)M(r.location+i,data.meshPerAttribute);!0!==object.isInstancedMesh&&void 0===c._maxInstanceCount&&(c._maxInstanceCount=data.meshPerAttribute*data.count)}else for(let i=0;i<r.locationSize;i++)_(r.location+i);t.bindBuffer(34962,d);for(let i=0;i<r.locationSize;i++)S(r.location+i,l/r.locationSize,f,e,n*m,(h+l/r.locationSize*i)*m)}else{if(o.isInstancedBufferAttribute){for(let i=0;i<r.locationSize;i++)M(r.location+i,o.meshPerAttribute);!0!==object.isInstancedMesh&&void 0===c._maxInstanceCount&&(c._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let i=0;i<r.locationSize;i++)_(r.location+i);t.bindBuffer(34962,d);for(let i=0;i<r.locationSize;i++)S(r.location+i,l/r.locationSize,f,e,l*m,l/r.locationSize*i*m)}}else if(void 0!==f){const n=f[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r.location,n);break;case 3:t.vertexAttrib3fv(r.location,n);break;case 4:t.vertexAttrib4fv(r.location,n);break;default:t.vertexAttrib1fv(r.location,n)}}}}w()}(object,o,d,v),null!==T&&t.bindBuffer(34963,n.get(T).buffer))},reset:T,resetDefaultState:E,dispose:function(){T();for(const t in h){const e=h[t];for(const t in e){const n=e[t];for(const t in n)v(n[t].object),delete n[t];delete e[t]}delete h[t]}},releaseStatesOfGeometry:function(t){if(void 0===h[t.id])return;const e=h[t.id];for(const t in e){const n=e[t];for(const t in n)v(n[t].object),delete n[t];delete e[t]}delete h[t.id]},releaseStatesOfProgram:function(t){for(const e in h){const n=h[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)v(r[t].object),delete r[t];delete n[t.id]}},initAttributes:y,enableAttribute:_,disableUnusedAttributes:w}}function ei(t,e,n,r){const o=r.isWebGL2;let l;this.setMode=function(t){l=t},this.render=function(e,r){t.drawArrays(l,e,r),n.update(r,l,1)},this.renderInstances=function(r,c,h){if(0===h)return;let d,f;if(o)d=t,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[f](l,r,c,h),n.update(c,l,h)}}function ni(t,e,n){let r;function o(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const l="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let c=void 0!==n.precision?n.precision:"highp";const h=o(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const d=l||e.has("WEBGL_draw_buffers"),f=!0===n.logarithmicDepthBuffer,m=t.getParameter(34930),v=t.getParameter(35660),x=t.getParameter(3379),y=t.getParameter(34076),_=t.getParameter(34921),M=t.getParameter(36347),w=t.getParameter(36348),S=t.getParameter(36349),T=v>0,E=l||e.has("OES_texture_float");return{isWebGL2:l,drawBuffers:d,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:o,precision:c,logarithmicDepthBuffer:f,maxTextures:m,maxVertexTextures:v,maxTextureSize:x,maxCubemapSize:y,maxAttributes:_,maxVertexUniforms:M,maxVaryings:w,maxFragmentUniforms:S,vertexTextures:T,floatFragmentTextures:E,floatVertexTextures:T&&E,maxSamples:l?t.getParameter(36183):0}}function ii(t){const e=this;let n=null,r=0,o=!1,l=!1;const c=new kn,h=new pt,d={value:null,needsUpdate:!1};function f(){d.value!==n&&(d.value=n,d.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function m(t,n,r,o){const l=null!==t?t.length:0;let f=null;if(0!==l){if(f=d.value,!0!==o||null===f){const e=r+4*l,o=n.matrixWorldInverse;h.getNormalMatrix(o),(null===f||f.length<e)&&(f=new Float32Array(e));for(let i=0,e=r;i!==l;++i,e+=4)c.copy(t[i]).applyMatrix4(o,h),c.normal.toArray(f,e),f[e+3]=c.constant}d.value=f,d.needsUpdate=!0}return e.numPlanes=l,e.numIntersection=0,f}this.uniform=d,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,l){const c=0!==t.length||e||0!==r||o;return o=e,n=m(t,l,0),r=t.length,c},this.beginShadows=function(){l=!0,m(null)},this.endShadows=function(){l=!1,f()},this.setState=function(e,c,h){const v=e.clippingPlanes,x=e.clipIntersection,y=e.clipShadows,_=t.get(e);if(!o||null===v||0===v.length||l&&!y)l?m(null):f();else{const t=l?0:r,e=4*t;let o=_.clippingState||null;d.value=o,o=m(v,c,e,h);for(let i=0;i!==e;++i)o[i]=n[i];_.clippingState=o,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=t}}}function ri(t){let e=new WeakMap;function n(t,e){return e===h?t.mapping=l:e===d&&(t.mapping=c),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const o=e.get(n);void 0!==o&&(e.delete(n),o.dispose())}return{get:function(o){if(o&&o.isTexture&&!1===o.isRenderTargetTexture){const l=o.mapping;if(l===h||l===d){if(e.has(o)){return n(e.get(o).texture,o.mapping)}{const image=o.image;if(image&&image.height>0){const l=new Fn(image.height/2);return l.fromEquirectangularTexture(t,o),e.set(o,l),o.addEventListener("dispose",r),n(l.texture,o.mapping)}return null}}}return o},dispose:function(){e=new WeakMap}}}Qn.physical={uniforms:Pn([Qn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ut(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new bt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ut},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new bt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new bt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Zn.meshphysical_vert,fragmentShader:Zn.meshphysical_frag};class si extends Nn{constructor(t=-1,e=1,n=1,r=-1,o=.1,l=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(source,t){return super.copy(source,t),this.left=source.left,this.right=source.right,this.top=source.top,this.bottom=source.bottom,this.near=source.near,this.far=source.far,this.zoom=source.zoom,this.view=null===source.view?null:Object.assign({},source.view),this}setViewOffset(t,e,n,r,o,l){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=r+e,h=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=t*this.view.offsetX,l=o+t*this.view.width,c-=e*this.view.offsetY,h=c-e*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){const data=super.toJSON(meta);return data.object.zoom=this.zoom,data.object.left=this.left,data.object.right=this.right,data.object.top=this.top,data.object.bottom=this.bottom,data.object.near=this.near,data.object.far=this.far,null!==this.view&&(data.object.view=Object.assign({},this.view)),data}}si.prototype.isOrthographicCamera=!0;class ai extends In{constructor(t){super(t),this.type="RawShaderMaterial"}}ai.prototype.isRawShaderMaterial=!0;const oi=Math.pow(2,8),ci=[.125,.215,.35,.446,.526,.582],hi=5+ci.length,ui=20,di=new si,{_lodPlanes:pi,_sizeLods:fi,_sigmas:mi}=bi(),gi=new bt;let vi=null;const xi=(1+Math.sqrt(5))/2,yi=1/xi,_i=[new Dt(1,1,1),new Dt(-1,1,1),new Dt(1,1,-1),new Dt(-1,1,-1),new Dt(0,xi,yi),new Dt(0,xi,-yi),new Dt(yi,0,xi),new Dt(-yi,0,xi),new Dt(xi,yi,0),new Dt(-xi,yi,0)];class Mi{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(t),n=new Dt(0,1,0);return new ai({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Ai(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(ui),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){vi=this._renderer.getRenderTarget();const o=this._allocateTargets();return this._sceneToCubeUV(t,n,r,o),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Ei(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Ti(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let i=0;i<pi.length;i++)pi[i].dispose()}_cleanup(t){this._renderer.setRenderTarget(vi),t.scissorTest=!1,Si(t,0,0,t.width,t.height)}_fromTexture(t,e){vi=this._renderer.getRenderTarget();const n=e||this._allocateTargets(t);return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(t){const e={magFilter:S,minFilter:S,generateMipmaps:!1,type:C,format:D,encoding:X,depthBuffer:!1},n=wi(e);return n.depthBuffer=!t,null===this._pingPongRenderTarget&&(this._pingPongRenderTarget=wi(e)),n}_compileMaterial(t){const e=new An(pi[0],t);this._renderer.compile(e,di)}_sceneToCubeUV(t,e,n,r){const o=new zn(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(gi),h.toneMapping=0,h.autoClear=!1;const m=new Je({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),v=new An(new Ln,m);let x=!1;const y=t.background;y?y.isColor&&(m.color.copy(y),t.background=null,x=!0):(m.color.copy(gi),x=!0);for(let i=0;i<6;i++){const col=i%3;0===col?(o.up.set(0,l[i],0),o.lookAt(c[i],0,0)):1===col?(o.up.set(0,0,l[i]),o.lookAt(0,c[i],0)):(o.up.set(0,l[i],0),o.lookAt(0,0,c[i])),Si(r,col*oi,i>2?oi:0,oi,oi),h.setRenderTarget(r),x&&h.render(v,o),h.render(t,o)}v.geometry.dispose(),v.material.dispose(),h.toneMapping=f,h.autoClear=d,t.background=y}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===l||t.mapping===c;r?(null===this._cubemapShader&&(this._cubemapShader=Ei()),this._cubemapShader.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectShader&&(this._equirectShader=Ti());const o=r?this._cubemapShader:this._equirectShader,h=new An(pi[0],o),d=o.uniforms;d.envMap.value=t,r||d.texelSize.value.set(1/t.image.width,1/t.image.height),Si(e,0,0,3*oi,2*oi),n.setRenderTarget(e),n.render(h,di)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<hi;i++){const e=Math.sqrt(mi[i]*mi[i]-mi[i-1]*mi[i-1]),n=_i[(i-1)%_i.length];this._blur(t,i-1,i,e,n)}e.autoClear=n}_blur(t,e,n,r,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,r,"latitudinal",o),this._halfBlur(l,t,n,n,r,"longitudinal",o)}_halfBlur(t,e,n,r,o,l,c){const h=this._renderer,d=this._blurMaterial;"latitudinal"!==l&&"longitudinal"!==l&&console.error("blur direction must be either latitudinal or longitudinal!");const f=new An(pi[r],d),m=d.uniforms,v=fi[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/39,y=o/x,_=isFinite(o)?1+Math.floor(3*y):ui;_>ui&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${_} samples when the maximum is set to 20`);const M=[];let w=0;for(let i=0;i<ui;++i){const t=i/y,e=Math.exp(-t*t/2);M.push(e),0===i?w+=e:i<_&&(w+=2*e)}for(let i=0;i<M.length;i++)M[i]=M[i]/w;m.envMap.value=t.texture,m.samples.value=_,m.weights.value=M,m.latitudinal.value="latitudinal"===l,c&&(m.poleAxis.value=c),m.dTheta.value=x,m.mipInt.value=8-n;const S=fi[r];Si(e,3*Math.max(0,oi-2*S),(0===r?0:2*oi)+2*S*(r>4?r-8+4:0),3*S,2*S),h.setRenderTarget(e),h.render(f,di)}}function bi(){const t=[],e=[],n=[];let r=8;for(let i=0;i<hi;i++){const o=Math.pow(2,r);e.push(o);let l=1/o;i>4?l=ci[i-8+4-1]:0===i&&(l=0),n.push(l);const c=1/(o-1),h=-c/2,d=1+c/2,f=[h,h,d,h,d,d,h,h,d,d,h,d],m=6,v=6,x=3,y=2,_=1,M=new Float32Array(x*v*m),w=new Float32Array(y*v*m),S=new Float32Array(_*v*m);for(let t=0;t<m;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];M.set(r,x*v*t),w.set(f,y*v*t);const o=[t,t,t,t,t,t];S.set(o,_*v*t)}const T=new cn;T.setAttribute("position",new Ke(M,x)),T.setAttribute("uv",new Ke(w,y)),T.setAttribute("faceIndex",new Ke(S,_)),t.push(T),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function wi(t){const e=new Lt(3*oi,3*oi,t);return e.texture.mapping=f,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Si(t,e,n,r,o){t.viewport.set(e,n,r,o),t.scissor.set(e,n,r,o)}function Ti(){const t=new ut(1,1);return new ai({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t}},vertexShader:Ai(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = texture2D ( envMap, uv ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = texture2D ( envMap, uv ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = texture2D ( envMap, uv ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = texture2D ( envMap, uv ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Ei(){return new ai({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ai(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Ai(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Ri(t){let e=new WeakMap,n=null;function r(t){const n=t.target;n.removeEventListener("dispose",r);const o=e.get(n);void 0!==o&&(e.delete(n),o.dispose())}return{get:function(o){if(o&&o.isTexture){const f=o.mapping,m=f===h||f===d,v=f===l||f===c;if(m||v){if(o.isRenderTargetTexture&&!0===o.needsPMREMUpdate){o.needsPMREMUpdate=!1;let r=e.get(o);return null===n&&(n=new Mi(t)),r=m?n.fromEquirectangular(o,r):n.fromCubemap(o,r),e.set(o,r),r.texture}if(e.has(o))return e.get(o).texture;{const image=o.image;if(m&&image&&image.height>0||v&&image&&function(image){let t=0;const e=6;for(let i=0;i<e;i++)void 0!==image[i]&&t++;return t===e}(image)){null===n&&(n=new Mi(t));const l=m?n.fromEquirectangular(o):n.fromCubemap(o);return e.set(o,l),o.addEventListener("dispose",r),l.texture}return null}}}return o},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Li(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Ci(t,e,n,r){const o={},l=new WeakMap;function c(t){const h=t.target;null!==h.index&&e.remove(h.index);for(const t in h.attributes)e.remove(h.attributes[t]);h.removeEventListener("dispose",c),delete o[h.id];const d=l.get(h);d&&(e.remove(d),l.delete(h)),r.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,n.memory.geometries--}function h(t){const n=[],r=t.index,o=t.attributes.position;let c=0;if(null!==r){const t=r.array;c=r.version;for(let i=0,e=t.length;i<e;i+=3){const a=t[i+0],b=t[i+1],e=t[i+2];n.push(a,b,b,e,e,a)}}else{const t=o.array;c=o.version;for(let i=0,e=t.length/3-1;i<e;i+=3){const a=i+0,b=i+1,t=i+2;n.push(a,b,b,t,t,a)}}const h=new(ft(n)?$e:Qe)(n,1);h.version=c;const d=l.get(t);d&&e.remove(d),l.set(t,h)}return{get:function(object,t){return!0===o[t.id]||(t.addEventListener("dispose",c),o[t.id]=!0,n.memory.geometries++),t},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const r=t.morphAttributes;for(const t in r){const n=r[t];for(let i=0,t=n.length;i<t;i++)e.update(n[i],34962)}},getWireframeAttribute:function(t){const e=l.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&h(t)}else h(t);return l.get(t)}}}function Pi(t,e,n,r){const o=r.isWebGL2;let l,c,h;this.setMode=function(t){l=t},this.setIndex=function(t){c=t.type,h=t.bytesPerElement},this.render=function(e,r){t.drawElements(l,r,c,e*h),n.update(r,l,1)},this.renderInstances=function(r,d,f){if(0===f)return;let m,v;if(o)m=t,v="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",null===m)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");m[v](l,d,c,r*h,f),n.update(d,l,f)}}function Di(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}class Ii extends Et{constructor(data=null,t=1,e=1,n=1){super(null),this.image={data:data,width:t,height:e,depth:n},this.magFilter=_,this.minFilter=_,this.wrapR=x,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}function Ni(a,b){return a[0]-b[0]}function zi(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Oi(t,e){let n=1;const r=e.isInterleavedBufferAttribute?e.data.array:e.array;r instanceof Int8Array?n=127:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),t.divideScalar(n)}function Bi(t,e,n){const r={},o=new Float32Array(8),l=new WeakMap,c=new Dt,h=[];for(let i=0;i<8;i++)h[i]=[i,0];return{update:function(object,d,f,m){const v=object.morphTargetInfluences;if(!0===e.isWebGL2){const r=d.morphAttributes.position.length;let o=l.get(d);if(void 0===o||o.count!==r){void 0!==o&&o.texture.dispose();const t=void 0!==d.morphAttributes.normal,n=d.morphAttributes.position,h=d.morphAttributes.normal||[],f=!0===t?2:1;let m=d.attributes.position.count*f,v=1;m>e.maxTextureSize&&(v=Math.ceil(m/e.maxTextureSize),m=e.maxTextureSize);const x=new Float32Array(m*v*4*r),y=new Ii(x,m,v,r);y.format=D,y.type=L,y.needsUpdate=!0;const _=4*f;for(let i=0;i<r;i++){const e=n[i],r=h[i],o=m*v*4*i;for(let n=0;n<e.count;n++){c.fromBufferAttribute(e,n),!0===e.normalized&&Oi(c,e);const l=n*_;x[o+l+0]=c.x,x[o+l+1]=c.y,x[o+l+2]=c.z,x[o+l+3]=0,!0===t&&(c.fromBufferAttribute(r,n),!0===r.normalized&&Oi(c,r),x[o+l+4]=c.x,x[o+l+5]=c.y,x[o+l+6]=c.z,x[o+l+7]=0)}}function M(){y.dispose(),l.delete(d),d.removeEventListener("dispose",M)}o={count:r,texture:y,size:new ut(m,v)},l.set(d,o),d.addEventListener("dispose",M)}let h=0;for(let i=0;i<v.length;i++)h+=v[i];const f=d.morphTargetsRelative?1:1-h;m.getUniforms().setValue(t,"morphTargetBaseInfluence",f),m.getUniforms().setValue(t,"morphTargetInfluences",v),m.getUniforms().setValue(t,"morphTargetsTexture",o.texture,n),m.getUniforms().setValue(t,"morphTargetsTextureSize",o.size)}else{const e=void 0===v?0:v.length;let n=r[d.id];if(void 0===n||n.length!==e){n=[];for(let i=0;i<e;i++)n[i]=[i,0];r[d.id]=n}for(let i=0;i<e;i++){const t=n[i];t[0]=i,t[1]=v[i]}n.sort(zi);for(let i=0;i<8;i++)i<e&&n[i][1]?(h[i][0]=n[i][0],h[i][1]=n[i][1]):(h[i][0]=Number.MAX_SAFE_INTEGER,h[i][1]=0);h.sort(Ni);const l=d.morphAttributes.position,c=d.morphAttributes.normal;let f=0;for(let i=0;i<8;i++){const t=h[i],e=t[0],n=t[1];e!==Number.MAX_SAFE_INTEGER&&n?(l&&d.getAttribute("morphTarget"+i)!==l[e]&&d.setAttribute("morphTarget"+i,l[e]),c&&d.getAttribute("morphNormal"+i)!==c[e]&&d.setAttribute("morphNormal"+i,c[e]),o[i]=n,f+=n):(l&&!0===d.hasAttribute("morphTarget"+i)&&d.deleteAttribute("morphTarget"+i),c&&!0===d.hasAttribute("morphNormal"+i)&&d.deleteAttribute("morphNormal"+i),o[i]=0)}const x=d.morphTargetsRelative?1:1-f;m.getUniforms().setValue(t,"morphTargetBaseInfluence",x),m.getUniforms().setValue(t,"morphTargetInfluences",o)}}}}function Ui(t,e,n,r){let o=new WeakMap;function l(t){const e=t.target;e.removeEventListener("dispose",l),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(object){const t=r.render.frame,c=object.geometry,h=e.get(object,c);return o.get(h)!==t&&(e.update(h),o.set(h,t)),object.isInstancedMesh&&(!1===object.hasEventListener("dispose",l)&&object.addEventListener("dispose",l),n.update(object.instanceMatrix,34962),null!==object.instanceColor&&n.update(object.instanceColor,34962)),h},dispose:function(){o=new WeakMap}}}Ii.prototype.isDataTexture2DArray=!0;class Fi extends Et{constructor(data=null,t=1,e=1,n=1){super(null),this.image={data:data,width:t,height:e,depth:n},this.magFilter=_,this.minFilter=_,this.wrapR=x,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Fi.prototype.isDataTexture3D=!0;const Hi=new Et,Gi=new Ii,Vi=new Fi,ki=new Un,Wi=[],ji=[],qi=new Float32Array(16),Xi=new Float32Array(9),Ji=new Float32Array(4);function Yi(t,e,n){const r=t[0];if(r<=0||r>0)return t;const o=e*n;let l=Wi[o];if(void 0===l&&(l=new Float32Array(o),Wi[o]=l),0!==e){r.toArray(l,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(l,r)}return l}function Zi(a,b){if(a.length!==b.length)return!1;for(let i=0,t=a.length;i<t;i++)if(a[i]!==b[i])return!1;return!0}function Ki(a,b){for(let i=0,t=b.length;i<t;i++)a[i]=b[i]}function Qi(t,e){let n=ji[e];void 0===n&&(n=new Int32Array(e),ji[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function $i(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function er(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Zi(n,e))return;t.uniform2fv(this.addr,e),Ki(n,e)}}function nr(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Zi(n,e))return;t.uniform3fv(this.addr,e),Ki(n,e)}}function ir(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Zi(n,e))return;t.uniform4fv(this.addr,e),Ki(n,e)}}function rr(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Zi(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Ki(n,e)}else{if(Zi(n,r))return;Ji.set(r),t.uniformMatrix2fv(this.addr,!1,Ji),Ki(n,r)}}function sr(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Zi(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Ki(n,e)}else{if(Zi(n,r))return;Xi.set(r),t.uniformMatrix3fv(this.addr,!1,Xi),Ki(n,r)}}function ar(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Zi(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Ki(n,e)}else{if(Zi(n,r))return;qi.set(r),t.uniformMatrix4fv(this.addr,!1,qi),Ki(n,r)}}function or(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function lr(t,e){const n=this.cache;Zi(n,e)||(t.uniform2iv(this.addr,e),Ki(n,e))}function cr(t,e){const n=this.cache;Zi(n,e)||(t.uniform3iv(this.addr,e),Ki(n,e))}function ur(t,e){const n=this.cache;Zi(n,e)||(t.uniform4iv(this.addr,e),Ki(n,e))}function dr(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function pr(t,e){const n=this.cache;Zi(n,e)||(t.uniform2uiv(this.addr,e),Ki(n,e))}function fr(t,e){const n=this.cache;Zi(n,e)||(t.uniform3uiv(this.addr,e),Ki(n,e))}function mr(t,e){const n=this.cache;Zi(n,e)||(t.uniform4uiv(this.addr,e),Ki(n,e))}function gr(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.safeSetTexture2D(e||Hi,o)}function vr(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.setTexture3D(e||Vi,o)}function xr(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.safeSetTextureCube(e||ki,o)}function yr(t,e,n){const r=this.cache,o=n.allocateTextureUnit();r[0]!==o&&(t.uniform1i(this.addr,o),r[0]=o),n.setTexture2DArray(e||Gi,o)}function _r(t,e){t.uniform1fv(this.addr,e)}function Mr(t,e){const data=Yi(e,this.size,2);t.uniform2fv(this.addr,data)}function wr(t,e){const data=Yi(e,this.size,3);t.uniform3fv(this.addr,data)}function Sr(t,e){const data=Yi(e,this.size,4);t.uniform4fv(this.addr,data)}function Tr(t,e){const data=Yi(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,data)}function Er(t,e){const data=Yi(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,data)}function Ar(t,e){const data=Yi(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,data)}function Rr(t,e){t.uniform1iv(this.addr,e)}function Lr(t,e){t.uniform2iv(this.addr,e)}function Cr(t,e){t.uniform3iv(this.addr,e)}function Pr(t,e){t.uniform4iv(this.addr,e)}function Dr(t,e){t.uniform1uiv(this.addr,e)}function Ir(t,e){t.uniform2uiv(this.addr,e)}function Nr(t,e){t.uniform3uiv(this.addr,e)}function zr(t,e){t.uniform4uiv(this.addr,e)}function Or(t,e,n){const r=e.length,o=Qi(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.safeSetTexture2D(e[i]||Hi,o[i])}function Br(t,e,n){const r=e.length,o=Qi(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.setTexture3D(e[i]||Vi,o[i])}function Ur(t,e,n){const r=e.length,o=Qi(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.safeSetTextureCube(e[i]||ki,o[i])}function Fr(t,e,n){const r=e.length,o=Qi(n,r);t.uniform1iv(this.addr,o);for(let i=0;i!==r;++i)n.setTexture2DArray(e[i]||Gi,o[i])}function Hr(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return $i;case 35664:return er;case 35665:return nr;case 35666:return ir;case 35674:return rr;case 35675:return sr;case 35676:return ar;case 5124:case 35670:return or;case 35667:case 35671:return lr;case 35668:case 35672:return cr;case 35669:case 35673:return ur;case 5125:return dr;case 36294:return pr;case 36295:return fr;case 36296:return mr;case 35678:case 36198:case 36298:case 36306:case 35682:return gr;case 35679:case 36299:case 36307:return vr;case 35680:case 36300:case 36308:case 36293:return xr;case 36289:case 36303:case 36311:case 36292:return yr}}(e.type)}function Gr(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return _r;case 35664:return Mr;case 35665:return wr;case 35666:return Sr;case 35674:return Tr;case 35675:return Er;case 35676:return Ar;case 5124:case 35670:return Rr;case 35667:case 35671:return Lr;case 35668:case 35672:return Cr;case 35669:case 35673:return Pr;case 5125:return Dr;case 36294:return Ir;case 36295:return Nr;case 36296:return zr;case 35678:case 36198:case 36298:case 36306:case 35682:return Or;case 35679:case 36299:case 36307:return Br;case 35680:case 36300:case 36308:case 36293:return Ur;case 36289:case 36303:case 36311:case 36292:return Fr}}(e.type)}function Vr(t){this.id=t,this.seq=[],this.map={}}Gr.prototype.updateCache=function(data){const t=this.cache;data instanceof Float32Array&&t.length!==data.length&&(this.cache=new Float32Array(data.length)),Ki(t,data)},Vr.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,o=r.length;i!==o;++i){const u=r[i];u.setValue(t,e[u.id],n)}};const kr=/(\w+)(\])?(\[|\.)?/g;function Wr(t,e){t.seq.push(e),t.map[e.id]=e}function jr(t,e,n){const path=t.name,r=path.length;for(kr.lastIndex=0;;){const o=kr.exec(path),l=kr.lastIndex;let c=o[1];const h="]"===o[2],d=o[3];if(h&&(c|=0),void 0===d||"["===d&&l+2===r){Wr(n,void 0===d?new Hr(c,t,e):new Gr(c,t,e));break}{let t=n.map[c];void 0===t&&(t=new Vr(c),Wr(n,t)),n=t}}}function qr(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);jr(n,t.getUniformLocation(e,n.name),this)}}function Xr(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}qr.prototype.setValue=function(t,e,n,r){const u=this.map[e];void 0!==u&&u.setValue(t,n,r)},qr.prototype.setOptional=function(t,object,e){const n=object[e];void 0!==n&&this.setValue(t,e,n)},qr.upload=function(t,e,n,r){for(let i=0,o=e.length;i!==o;++i){const u=e[i],o=n[u.id];!1!==o.needsUpdate&&u.setValue(t,o.value,r)}},qr.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const u=t[i];u.id in e&&n.push(u)}return n};let Jr=0;function Yr(t,e,n){const r=t.getShaderParameter(e,35713),o=t.getShaderInfoLog(e).trim();return r&&""===o?"":n.toUpperCase()+"\n\n"+o+"\n\n"+function(t){const e=t.split("\n");for(let i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}(t.getShaderSource(e))}function Zr(t,e){const n=function(t){switch(t){case X:return["Linear","( value )"];case J:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Kr(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Qr(t){return""!==t}function $r(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ts(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const es=/^[ \t]*#include +<([\w\d./]+)>/gm;function ns(t){return t.replace(es,is)}function is(t,e){const n=Zn[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return ns(n)}const rs=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ss=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function as(t){return t.replace(ss,ls).replace(rs,os)}function os(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ls(t,e,n,r)}function ls(t,e,n,r){let o="";for(let i=parseInt(e);i<parseInt(n);i++)o+=r.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return o}function cs(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function hs(t,e,n,r){const o=t.getContext(),h=n.defines;let d=n.vertexShader,v=n.fragmentShader;const x=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),y=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case l:case c:e="ENVMAP_TYPE_CUBE";break;case f:case m:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),_=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case c:case m:e="ENVMAP_MODE_REFRACTION"}return e}(n),M=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),w=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Qr).join("\n")}(n),S=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(h),T=o.createProgram();let E,A,R=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(E=[S].filter(Qr).join("\n"),E.length>0&&(E+="\n"),A=[w,S].filter(Qr).join("\n"),A.length>0&&(A+="\n")):(E=[cs(n),"#define SHADER_NAME "+n.shaderName,S,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+_:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+x:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Qr).join("\n"),A=[w,cs(n),"#define SHADER_NAME "+n.shaderName,S,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+y:"",n.envMap?"#define "+_:"",n.envMap?"#define "+M:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+x:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Zn.tonemapping_pars_fragment:"",0!==n.toneMapping?Kr("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.transparent?"":"#define OPAQUE",Zn.encodings_pars_fragment,Zr("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Qr).join("\n")),d=ns(d),d=$r(d,n),d=ts(d,n),v=ns(v),v=$r(v,n),v=ts(v,n),d=as(d),v=as(v),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(R="#version 300 es\n",E=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+E,A=["#define varying in",n.glslVersion===Q?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Q?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+A);const L=R+A+v,C=Xr(o,35633,R+E+d),P=Xr(o,35632,L);if(o.attachShader(T,C),o.attachShader(T,P),void 0!==n.index0AttributeName?o.bindAttribLocation(T,0,n.index0AttributeName):!0===n.morphTargets&&o.bindAttribLocation(T,0,"position"),o.linkProgram(T),t.debug.checkShaderErrors){const t=o.getProgramInfoLog(T).trim(),e=o.getShaderInfoLog(C).trim(),n=o.getShaderInfoLog(P).trim();let r=!0,l=!0;if(!1===o.getProgramParameter(T,35714)){r=!1;const e=Yr(o,C,"vertex"),n=Yr(o,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(T,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(l=!1);l&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:E},fragmentShader:{log:n,prefix:A}})}let D,I;return o.deleteShader(C),o.deleteShader(P),this.getUniforms=function(){return void 0===D&&(D=new qr(o,T)),D},this.getAttributes=function(){return void 0===I&&(I=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i),o=r.name;let l=1;35674===r.type&&(l=2),35675===r.type&&(l=3),35676===r.type&&(l=4),n[o]={type:r.type,location:t.getAttribLocation(e,o),locationSize:l}}return n}(o,T)),I},this.destroy=function(){r.releaseStatesOfProgram(this),o.deleteProgram(T),this.program=void 0},this.name=n.shaderName,this.id=Jr++,this.cacheKey=e,this.usedTimes=1,this.program=T,this.vertexShader=C,this.fragmentShader=P,this}let us=0;class ds{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,r=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return!1===l.has(r)&&(l.add(r),r.usedTimes++),!1===l.has(o)&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(code){const t=this.shaderCache;if(!1===t.has(code)){const e=new ps;t.set(code,e)}return t.get(code)}}class ps{constructor(){this.id=us++,this.usedTimes=0}}function fs(t,e,n,r,o,l,c){const h=new _e,d=new ds,v=[],x=o.isWebGL2,y=o.logarithmicDepthBuffer,_=o.floatVertexTextures,M=o.maxVertexUniforms,w=o.vertexTextures;let S=o.precision;const T={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(l,h,v,E,object){const A=E.fog,R=l.isMeshStandardMaterial?E.environment:null,L=(l.isMeshStandardMaterial?n:e).get(l.envMap||R),C=T[l.type],P=object.isSkinnedMesh?function(object){const t=object.skeleton.bones;if(_)return 1024;{const e=M,n=Math.floor((e-20)/4),r=Math.min(n,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}}(object):0;let D,I,N,z;if(null!==l.precision&&(S=o.getMaxPrecision(l.precision),S!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",S,"instead.")),C){const t=Qn[C];D=t.vertexShader,I=t.fragmentShader}else D=l.vertexShader,I=l.fragmentShader,d.update(l),N=d.getVertexShaderID(l),z=d.getFragmentShaderID(l);const O=t.getRenderTarget(),B=l.alphaTest>0,U=l.clearcoat>0;return{isWebGL2:x,shaderID:C,shaderName:l.type,vertexShader:D,fragmentShader:I,defines:l.defines,customVertexShaderID:N,customFragmentShaderID:z,isRawShaderMaterial:!0===l.isRawShaderMaterial,glslVersion:l.glslVersion,precision:S,instancing:!0===object.isInstancedMesh,instancingColor:!0===object.isInstancedMesh&&null!==object.instanceColor,supportsVertexTextures:w,outputEncoding:null===O?t.outputEncoding:!0===O.isXRRenderTarget?O.texture.encoding:X,map:!!l.map,matcap:!!l.matcap,envMap:!!L,envMapMode:L&&L.mapping,envMapCubeUV:!!L&&(L.mapping===f||L.mapping===m),lightMap:!!l.lightMap,aoMap:!!l.aoMap,emissiveMap:!!l.emissiveMap,bumpMap:!!l.bumpMap,normalMap:!!l.normalMap,objectSpaceNormalMap:1===l.normalMapType,tangentSpaceNormalMap:0===l.normalMapType,decodeVideoTexture:!!l.map&&!0===l.map.isVideoTexture&&l.map.encoding===J,clearcoat:U,clearcoatMap:U&&!!l.clearcoatMap,clearcoatRoughnessMap:U&&!!l.clearcoatRoughnessMap,clearcoatNormalMap:U&&!!l.clearcoatNormalMap,displacementMap:!!l.displacementMap,roughnessMap:!!l.roughnessMap,metalnessMap:!!l.metalnessMap,specularMap:!!l.specularMap,specularIntensityMap:!!l.specularIntensityMap,specularColorMap:!!l.specularColorMap,transparent:l.transparent,alphaMap:!!l.alphaMap,alphaTest:B,gradientMap:!!l.gradientMap,sheen:l.sheen>0,sheenColorMap:!!l.sheenColorMap,sheenRoughnessMap:!!l.sheenRoughnessMap,transmission:l.transmission>0,transmissionMap:!!l.transmissionMap,thicknessMap:!!l.thicknessMap,combine:l.combine,vertexTangents:!!l.normalMap&&!!object.geometry&&!!object.geometry.attributes.tangent,vertexColors:l.vertexColors,vertexAlphas:!0===l.vertexColors&&!!object.geometry&&!!object.geometry.attributes.color&&4===object.geometry.attributes.color.itemSize,vertexUvs:!!(l.map||l.bumpMap||l.normalMap||l.specularMap||l.alphaMap||l.emissiveMap||l.roughnessMap||l.metalnessMap||l.clearcoatMap||l.clearcoatRoughnessMap||l.clearcoatNormalMap||l.displacementMap||l.transmissionMap||l.thicknessMap||l.specularIntensityMap||l.specularColorMap||l.sheenColorMap||l.sheenRoughnessMap),uvsVertexOnly:!(l.map||l.bumpMap||l.normalMap||l.specularMap||l.alphaMap||l.emissiveMap||l.roughnessMap||l.metalnessMap||l.clearcoatNormalMap||l.transmission>0||l.transmissionMap||l.thicknessMap||l.specularIntensityMap||l.specularColorMap||l.sheen>0||l.sheenColorMap||l.sheenRoughnessMap||!l.displacementMap),fog:!!A,useFog:l.fog,fogExp2:A&&A.isFogExp2,flatShading:!!l.flatShading,sizeAttenuation:l.sizeAttenuation,logarithmicDepthBuffer:y,skinning:!0===object.isSkinnedMesh&&P>0,maxBones:P,useVertexTexture:_,morphTargets:!!object.geometry&&!!object.geometry.morphAttributes.position,morphNormals:!!object.geometry&&!!object.geometry.morphAttributes.normal,morphTargetsCount:object.geometry&&object.geometry.morphAttributes.position?object.geometry.morphAttributes.position.length:0,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numClippingPlanes:c.numPlanes,numClipIntersection:c.numIntersection,dithering:l.dithering,shadowMapEnabled:t.shadowMap.enabled&&v.length>0,shadowMapType:t.shadowMap.type,toneMapping:l.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:l.premultipliedAlpha,doubleSided:2===l.side,flipSided:1===l.side,depthPacking:void 0!==l.depthPacking&&l.depthPacking,index0AttributeName:l.index0AttributeName,extensionDerivatives:l.extensions&&l.extensions.derivatives,extensionFragDepth:l.extensions&&l.extensions.fragDepth,extensionDrawBuffers:l.extensions&&l.extensions.drawBuffers,extensionShaderTextureLOD:l.extensions&&l.extensions.shaderTextureLOD,rendererExtensionFragDepth:x||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:x||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:x||r.has("EXT_shader_texture_lod"),customProgramCacheKey:l.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.maxBones),t.push(e.morphTargetsCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection)}(n,e),function(t,e){h.disableAll(),e.isWebGL2&&h.enable(0);e.supportsVertexTextures&&h.enable(1);e.instancing&&h.enable(2);e.instancingColor&&h.enable(3);e.map&&h.enable(4);e.matcap&&h.enable(5);e.envMap&&h.enable(6);e.envMapCubeUV&&h.enable(7);e.lightMap&&h.enable(8);e.aoMap&&h.enable(9);e.emissiveMap&&h.enable(10);e.bumpMap&&h.enable(11);e.normalMap&&h.enable(12);e.objectSpaceNormalMap&&h.enable(13);e.tangentSpaceNormalMap&&h.enable(14);e.clearcoat&&h.enable(15);e.clearcoatMap&&h.enable(16);e.clearcoatRoughnessMap&&h.enable(17);e.clearcoatNormalMap&&h.enable(18);e.displacementMap&&h.enable(19);e.specularMap&&h.enable(20);e.roughnessMap&&h.enable(21);e.metalnessMap&&h.enable(22);e.gradientMap&&h.enable(23);e.alphaMap&&h.enable(24);e.alphaTest&&h.enable(25);e.vertexColors&&h.enable(26);e.vertexAlphas&&h.enable(27);e.vertexUvs&&h.enable(28);e.vertexTangents&&h.enable(29);e.uvsVertexOnly&&h.enable(30);e.fog&&h.enable(31);t.push(h.mask),h.disableAll(),e.useFog&&h.enable(0);e.flatShading&&h.enable(1);e.logarithmicDepthBuffer&&h.enable(2);e.skinning&&h.enable(3);e.useVertexTexture&&h.enable(4);e.morphTargets&&h.enable(5);e.morphNormals&&h.enable(6);e.premultipliedAlpha&&h.enable(7);e.shadowMapEnabled&&h.enable(8);e.physicallyCorrectLights&&h.enable(9);e.doubleSided&&h.enable(10);e.flipSided&&h.enable(11);e.depthPacking&&h.enable(12);e.dithering&&h.enable(13);e.specularIntensityMap&&h.enable(14);e.specularColorMap&&h.enable(15);e.transmission&&h.enable(16);e.transmissionMap&&h.enable(17);e.thicknessMap&&h.enable(18);e.sheen&&h.enable(19);e.sheenColorMap&&h.enable(20);e.sheenRoughnessMap&&h.enable(21);e.decodeVideoTexture&&h.enable(22);e.transparent&&h.enable(23);t.push(h.mask)}(n,e),n.push(t.outputEncoding)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=T[t.type];let n;if(e){const t=Qn[e];n=Dn.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let p=0,t=v.length;p<t;p++){const t=v[p];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new hs(t,n,e,l),v.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const i=v.indexOf(t);v[i]=v[v.length-1],v.pop(),t.destroy()}},releaseShaderCache:function(t){d.remove(t)},programs:v,dispose:function(){d.dispose()}}}function ms(){let t=new WeakMap;return{get:function(object){let map=t.get(object);return void 0===map&&(map={},t.set(object,map)),map},remove:function(object){t.delete(object)},update:function(object,e,n){t.get(object)[e]=n},dispose:function(){t=new WeakMap}}}function gs(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function vs(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function xs(){const t=[];let e=0;const n=[],r=[],o=[];function l(object,n,r,o,l,c){let h=t[e];return void 0===h?(h={id:object.id,object:object,geometry:n,material:r,groupOrder:o,renderOrder:object.renderOrder,z:l,group:c},t[e]=h):(h.id=object.id,h.object=object,h.geometry=n,h.material=r,h.groupOrder=o,h.renderOrder=object.renderOrder,h.z=l,h.group=c),e++,h}return{opaque:n,transmissive:r,transparent:o,init:function(){e=0,n.length=0,r.length=0,o.length=0},push:function(object,t,e,c,h,d){const f=l(object,t,e,c,h,d);e.transmission>0?r.push(f):!0===e.transparent?o.push(f):n.push(f)},unshift:function(object,t,e,c,h,d){const f=l(object,t,e,c,h,d);e.transmission>0?r.unshift(f):!0===e.transparent?o.unshift(f):n.unshift(f)},finish:function(){for(let i=e,n=t.length;i<n;i++){const e=t[i];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||gs),r.length>1&&r.sort(e||vs),o.length>1&&o.sort(e||vs)}}}function ys(){let t=new WeakMap;return{get:function(e,n){let r;return!1===t.has(e)?(r=new xs,t.set(e,[r])):n>=t.get(e).length?(r=new xs,t.get(e).push(r)):r=t.get(e)[n],r},dispose:function(){t=new WeakMap}}}function _s(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Dt,color:new bt};break;case"SpotLight":n={position:new Dt,direction:new Dt,color:new bt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Dt,color:new bt,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Dt,skyColor:new bt,groundColor:new bt};break;case"RectAreaLight":n={color:new bt,position:new Dt,halfWidth:new Dt,halfHeight:new Dt}}return t[e.id]=n,n}}}let Ms=0;function bs(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function ws(t,e){const n=new _s,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),o={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let i=0;i<9;i++)o.probe.push(new Dt);const l=new Dt,c=new ce,h=new ce;return{setup:function(l,c){let h=0,g=0,b=0;for(let i=0;i<9;i++)o.probe[i].set(0,0,0);let d=0,f=0,m=0,v=0,x=0,y=0,_=0,M=0;l.sort(bs);const w=!0!==c?Math.PI:1;for(let i=0,t=l.length;i<t;i++){const t=l[i],e=t.color,c=t.intensity,S=t.distance,T=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)h+=e.r*c*w,g+=e.g*c*w,b+=e.b*c*w;else if(t.isLightProbe)for(let e=0;e<9;e++)o.probe[e].addScaledVector(t.sh.coefficients[e],c);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*w),t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,o.directionalShadow[d]=e,o.directionalShadowMap[d]=T,o.directionalShadowMatrix[d]=t.shadow.matrix,y++}o.directional[d]=e,d++}else if(t.isSpotLight){const l=n.get(t);if(l.position.setFromMatrixPosition(t.matrixWorld),l.color.copy(e).multiplyScalar(c*w),l.distance=S,l.coneCos=Math.cos(t.angle),l.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),l.decay=t.decay,t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,o.spotShadow[m]=e,o.spotShadowMap[m]=T,o.spotShadowMatrix[m]=t.shadow.matrix,M++}o.spot[m]=l,m++}else if(t.isRectAreaLight){const r=n.get(t);r.color.copy(e).multiplyScalar(c),r.halfWidth.set(.5*t.width,0,0),r.halfHeight.set(0,.5*t.height,0),o.rectArea[v]=r,v++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*w),e.distance=t.distance,e.decay=t.decay,t.castShadow){const shadow=t.shadow,e=r.get(t);e.shadowBias=shadow.bias,e.shadowNormalBias=shadow.normalBias,e.shadowRadius=shadow.radius,e.shadowMapSize=shadow.mapSize,e.shadowCameraNear=shadow.camera.near,e.shadowCameraFar=shadow.camera.far,o.pointShadow[f]=e,o.pointShadowMap[f]=T,o.pointShadowMatrix[f]=t.shadow.matrix,_++}o.point[f]=e,f++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(c*w),e.groundColor.copy(t.groundColor).multiplyScalar(c*w),o.hemi[x]=e,x++}}v>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(o.rectAreaLTC1=Kn.LTC_FLOAT_1,o.rectAreaLTC2=Kn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(o.rectAreaLTC1=Kn.LTC_HALF_1,o.rectAreaLTC2=Kn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),o.ambient[0]=h,o.ambient[1]=g,o.ambient[2]=b;const S=o.hash;S.directionalLength===d&&S.pointLength===f&&S.spotLength===m&&S.rectAreaLength===v&&S.hemiLength===x&&S.numDirectionalShadows===y&&S.numPointShadows===_&&S.numSpotShadows===M||(o.directional.length=d,o.spot.length=m,o.rectArea.length=v,o.point.length=f,o.hemi.length=x,o.directionalShadow.length=y,o.directionalShadowMap.length=y,o.pointShadow.length=_,o.pointShadowMap.length=_,o.spotShadow.length=M,o.spotShadowMap.length=M,o.directionalShadowMatrix.length=y,o.pointShadowMatrix.length=_,o.spotShadowMatrix.length=M,S.directionalLength=d,S.pointLength=f,S.spotLength=m,S.rectAreaLength=v,S.hemiLength=x,S.numDirectionalShadows=y,S.numPointShadows=_,S.numSpotShadows=M,o.version=Ms++)},setupView:function(t,e){let n=0,r=0,d=0,f=0,m=0;const v=e.matrixWorldInverse;for(let i=0,e=t.length;i<e;i++){const e=t[i];if(e.isDirectionalLight){const t=o.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),l.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(l),t.direction.transformDirection(v),n++}else if(e.isSpotLight){const t=o.spot[d];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(v),t.direction.setFromMatrixPosition(e.matrixWorld),l.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(l),t.direction.transformDirection(v),d++}else if(e.isRectAreaLight){const t=o.rectArea[f];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(v),h.identity(),c.copy(e.matrixWorld),c.premultiply(v),h.extractRotation(c),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(h),t.halfHeight.applyMatrix4(h),f++}else if(e.isPointLight){const t=o.point[r];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(v),r++}else if(e.isHemisphereLight){const t=o.hemi[m];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(v),t.direction.normalize(),m++}}},state:o}}function Ss(t,e){const n=new ws(t,e),r=[],o=[];return{init:function(){r.length=0,o.length=0},state:{lightsArray:r,shadowsArray:o,lights:n},setupLights:function(t){n.setup(r,t)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){o.push(t)}}}function Ts(t,e){let n=new WeakMap;return{get:function(r,o=0){let l;return!1===n.has(r)?(l=new Ss(t,e),n.set(r,[l])):o>=n.get(r).length?(l=new Ss(t,e),n.get(r).push(l)):l=n.get(r)[o],l},dispose:function(){n=new WeakMap}}}class Es extends Xe{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(source){return super.copy(source),this.depthPacking=source.depthPacking,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this}}Es.prototype.isMeshDepthMaterial=!0;class As extends Xe{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Dt,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(source){return super.copy(source),this.referencePosition.copy(source.referencePosition),this.nearDistance=source.nearDistance,this.farDistance=source.farDistance,this.map=source.map,this.alphaMap=source.alphaMap,this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this}}As.prototype.isMeshDistanceMaterial=!0;function Rs(t,e,n){let r=new qn;const o=new ut,l=new ut,c=new Rt,h=new Es({depthPacking:3201}),d=new As,f={},m=n.maxTextureSize,v={0:1,1:0,2:2},x=new In({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ut},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),y=x.clone();y.defines.HORIZONTAL_PASS=1;const M=new cn;M.setAttribute("position",new Ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new An(M,x),T=this;function E(shadow,n){const r=e.update(w);x.defines.VSM_SAMPLES!==shadow.blurSamples&&(x.defines.VSM_SAMPLES=shadow.blurSamples,y.defines.VSM_SAMPLES=shadow.blurSamples,x.needsUpdate=!0,y.needsUpdate=!0),x.uniforms.shadow_pass.value=shadow.map.texture,x.uniforms.resolution.value=shadow.mapSize,x.uniforms.radius.value=shadow.radius,t.setRenderTarget(shadow.mapPass),t.clear(),t.renderBufferDirect(n,null,r,x,w,null),y.uniforms.shadow_pass.value=shadow.mapPass.texture,y.uniforms.resolution.value=shadow.mapSize,y.uniforms.radius.value=shadow.radius,t.setRenderTarget(shadow.map),t.clear(),t.renderBufferDirect(n,null,r,y,w,null)}function A(object,e,n,r,o,l,c){let m=null;const x=!0===r.isPointLight?object.customDistanceMaterial:object.customDepthMaterial;if(m=void 0!==x?x:!0===r.isPointLight?d:h,t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){const t=m.uuid,e=n.uuid;let r=f[t];void 0===r&&(r={},f[t]=r);let o=r[e];void 0===o&&(o=m.clone(),r[e]=o),m=o}return m.visible=n.visible,m.wireframe=n.wireframe,m.side=3===c?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:v[n.side],m.alphaMap=n.alphaMap,m.alphaTest=n.alphaTest,m.clipShadows=n.clipShadows,m.clippingPlanes=n.clippingPlanes,m.clipIntersection=n.clipIntersection,m.displacementMap=n.displacementMap,m.displacementScale=n.displacementScale,m.displacementBias=n.displacementBias,m.wireframeLinewidth=n.wireframeLinewidth,m.linewidth=n.linewidth,!0===r.isPointLight&&!0===m.isMeshDistanceMaterial&&(m.referencePosition.setFromMatrixPosition(r.matrixWorld),m.nearDistance=o,m.farDistance=l),m}function R(object,n,o,l,c){if(!1===object.visible)return;if(object.layers.test(n.layers)&&(object.isMesh||object.isLine||object.isPoints)&&(object.castShadow||object.receiveShadow&&3===c)&&(!object.frustumCulled||r.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,object.matrixWorld);const n=e.update(object),r=object.material;if(Array.isArray(r)){const e=n.groups;for(let h=0,d=e.length;h<d;h++){const d=e[h],f=r[d.materialIndex];if(f&&f.visible){const e=A(object,0,f,l,o.near,o.far,c);t.renderBufferDirect(o,null,n,e,object,d)}}}else if(r.visible){const e=A(object,0,r,l,o.near,o.far,c);t.renderBufferDirect(o,null,n,e,object,null)}}const h=object.children;for(let i=0,t=h.length;i<t;i++)R(h[i],n,o,l,c)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,n,h){if(!1===T.enabled)return;if(!1===T.autoUpdate&&!1===T.needsUpdate)return;if(0===e.length)return;const d=t.getRenderTarget(),f=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.state;x.setBlending(0),x.buffers.color.setClear(1,1,1,1),x.buffers.depth.setTest(!0),x.setScissorTest(!1);for(let i=0,d=e.length;i<d;i++){const d=e[i],shadow=d.shadow;if(void 0===shadow){console.warn("THREE.WebGLShadowMap:",d,"has no shadow.");continue}if(!1===shadow.autoUpdate&&!1===shadow.needsUpdate)continue;o.copy(shadow.mapSize);const f=shadow.getFrameExtents();if(o.multiply(f),l.copy(shadow.mapSize),(o.x>m||o.y>m)&&(o.x>m&&(l.x=Math.floor(m/f.x),o.x=l.x*f.x,shadow.mapSize.x=l.x),o.y>m&&(l.y=Math.floor(m/f.y),o.y=l.y*f.y,shadow.mapSize.y=l.y)),null===shadow.map&&!shadow.isPointLightShadow&&3===this.type){const t={minFilter:S,magFilter:S,format:D};shadow.map=new Lt(o.x,o.y,t),shadow.map.texture.name=d.name+".shadowMap",shadow.mapPass=new Lt(o.x,o.y,t),shadow.camera.updateProjectionMatrix()}if(null===shadow.map){const t={minFilter:_,magFilter:_,format:D};shadow.map=new Lt(o.x,o.y,t),shadow.map.texture.name=d.name+".shadowMap",shadow.camera.updateProjectionMatrix()}t.setRenderTarget(shadow.map),t.clear();const v=shadow.getViewportCount();for(let t=0;t<v;t++){const e=shadow.getViewport(t);c.set(l.x*e.x,l.y*e.y,l.x*e.z,l.y*e.w),x.viewport(c),shadow.updateMatrices(d,t),r=shadow.getFrustum(),R(n,h,shadow.camera,d,this.type)}shadow.isPointLightShadow||3!==this.type||E(shadow,h),shadow.needsUpdate=!1}T.needsUpdate=!1,t.setRenderTarget(d,f,v)}}function Ls(t,e,n){const r=n.isWebGL2;const l=new function(){let e=!1;const n=new Rt;let r=null;const o=new Rt(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,g,b,a,r){!0===r&&(e*=a,g*=a,b*=a),n.set(e,g,b,a),!1===o.equals(n)&&(t.clearColor(e,g,b,a),o.copy(n))},reset:function(){e=!1,r=null,o.set(-1,0,0,0)}}},c=new function(){let e=!1,n=null,r=null,o=null;return{setTest:function(t){t?X(2929):J(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:default:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){o!==e&&(t.clearDepth(e),o=e)},reset:function(){e=!1,n=null,r=null,o=null}}},h=new function(){let e=!1,n=null,r=null,o=null,l=null,c=null,h=null,d=null,f=null;return{setTest:function(t){e||(t?X(2960):J(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,c){r===e&&o===n&&l===c||(t.stencilFunc(e,n,c),r=e,o=n,l=c)},setOp:function(e,n,r){c===e&&h===n&&d===r||(t.stencilOp(e,n,r),c=e,h=n,d=r)},setLocked:function(t){e=t},setClear:function(e){f!==e&&(t.clearStencil(e),f=e)},reset:function(){e=!1,n=null,r=null,o=null,l=null,c=null,h=null,d=null,f=null}}};let d={},f={},m=new WeakMap,v=[],x=null,y=!1,_=null,M=null,w=null,S=null,T=null,E=null,A=null,R=!1,L=null,C=null,P=null,D=null,I=null;const N=t.getParameter(35661);let z=!1,O=0;const B=t.getParameter(7938);-1!==B.indexOf("WebGL")?(O=parseFloat(/^WebGL (\d)/.exec(B)[1]),z=O>=1):-1!==B.indexOf("OpenGL ES")&&(O=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),z=O>=2);let U=null,F={};const H=t.getParameter(3088),G=t.getParameter(2978),V=(new Rt).fromArray(H),k=(new Rt).fromArray(G);function W(e,n,r){const data=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let i=0;i<r;i++)t.texImage2D(n+i,0,6408,1,1,0,6408,5121,data);return o}const j={};function X(e){!0!==d[e]&&(t.enable(e),d[e]=!0)}function J(e){!1!==d[e]&&(t.disable(e),d[e]=!1)}j[3553]=W(3553,3553,1),j[34067]=W(34067,34069,6),l.setClear(0,0,0,1),c.setClear(1),h.setClear(0),X(2929),c.setFunc(3),Q(!1),$(1),X(2884),K(0);const Y={[o]:32774,101:32778,102:32779};if(r)Y[103]=32775,Y[104]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(Y[103]=t.MIN_EXT,Y[104]=t.MAX_EXT)}const Z={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function K(e,n,r,l,c,h,d,f){if(0!==e){if(!1===y&&(X(3042),y=!0),5===e)c=c||n,h=h||r,d=d||l,n===M&&c===T||(t.blendEquationSeparate(Y[n],Y[c]),M=n,T=c),r===w&&l===S&&h===E&&d===A||(t.blendFuncSeparate(Z[r],Z[l],Z[h],Z[d]),w=r,S=l,E=h,A=d),_=e,R=null;else if(e!==_||f!==R){if(M===o&&T===o||(t.blendEquation(32774),M=o,T=o),f)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}w=null,S=null,E=null,A=null,_=e,R=f}}else!0===y&&(J(3042),y=!1)}function Q(e){L!==e&&(e?t.frontFace(2304):t.frontFace(2305),L=e)}function $(e){0!==e?(X(2884),e!==C&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):J(2884),C=e}function tt(e,n,r){e?(X(32823),D===n&&I===r||(t.polygonOffset(n,r),D=n,I=r)):J(32823)}function et(e){void 0===e&&(e=33984+N-1),U!==e&&(t.activeTexture(e),U=e)}return{buffers:{color:l,depth:c,stencil:h},enable:X,disable:J,bindFramebuffer:function(e,n){return f[e]!==n&&(t.bindFramebuffer(e,n),f[e]=n,r&&(36009===e&&(f[36160]=n),36160===e&&(f[36009]=n)),!0)},drawBuffers:function(r,o){let l=v,c=!1;if(r)if(l=m.get(o),void 0===l&&(l=[],m.set(o,l)),r.isWebGLMultipleRenderTargets){const t=r.texture;if(l.length!==t.length||36064!==l[0]){for(let i=0,e=t.length;i<e;i++)l[i]=36064+i;l.length=t.length,c=!0}}else 36064!==l[0]&&(l[0]=36064,c=!0);else 1029!==l[0]&&(l[0]=1029,c=!0);c&&(n.isWebGL2?t.drawBuffers(l):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(l))},useProgram:function(e){return x!==e&&(t.useProgram(e),x=e,!0)},setBlending:K,setMaterial:function(t,e){2===t.side?J(2884):X(2884);let n=1===t.side;e&&(n=!n),Q(n),1===t.blending&&!1===t.transparent?K(0):K(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),c.setFunc(t.depthFunc),c.setTest(t.depthTest),c.setMask(t.depthWrite),l.setMask(t.colorWrite);const r=t.stencilWrite;h.setTest(r),r&&(h.setMask(t.stencilWriteMask),h.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),h.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),tt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?X(32926):J(32926)},setFlipSided:Q,setCullFace:$,setLineWidth:function(e){e!==P&&(z&&t.lineWidth(e),P=e)},setPolygonOffset:tt,setScissorTest:function(t){t?X(3089):J(3089)},activeTexture:et,bindTexture:function(e,n){null===U&&et();let r=F[U];void 0===r&&(r={type:void 0,texture:void 0},F[U]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||j[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=F[U];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===V.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),V.copy(e))},viewport:function(e){!1===k.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),k.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),d={},U=null,F={},f={},m=new WeakMap,v=[],x=null,y=!1,_=null,M=null,w=null,S=null,T=null,E=null,A=null,R=!1,L=null,C=null,P=null,D=null,I=null,V.set(0,0,t.canvas.width,t.canvas.height),k.set(0,0,t.canvas.width,t.canvas.height),l.reset(),c.reset(),h.reset()}}}function Cs(t,e,n,r,o,l,c){const h=o.isWebGL2,d=o.maxTextures,f=o.maxCubemapSize,m=o.maxTextureSize,z=o.maxSamples,O=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,B=new WeakMap;let U,F=!1;try{F="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function H(t,e){return F?new OffscreenCanvas(t,e):mt("canvas")}function G(image,t,e,n){let r=1;if((image.width>n||image.height>n)&&(r=n/Math.max(image.width,image.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&image instanceof ImageBitmap){const n=t?ht:Math.floor,o=n(r*image.width),l=n(r*image.height);void 0===U&&(U=H(o,l));const canvas=e?H(o,l):U;canvas.width=o,canvas.height=l;return canvas.getContext("2d").drawImage(image,0,0,o,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+image.width+"x"+image.height+") to ("+o+"x"+l+")."),canvas}return"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+image.width+"x"+image.height+")."),image}return image}function V(image){return ct(image.width)&&ct(image.height)}function k(t,e){return t.generateMipmaps&&e&&t.minFilter!==_&&t.minFilter!==S}function W(e){t.generateMipmap(e)}function j(n,r,o,l,c=!1){if(!1===h)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let d=r;return 6403===r&&(5126===o&&(d=33326),5131===o&&(d=33325),5121===o&&(d=33321)),33319===r&&(5126===o&&(d=33328),5131===o&&(d=33327),5121===o&&(d=33323)),6408===r&&(5126===o&&(d=34836),5131===o&&(d=34842),5121===o&&(d=l===J&&!1===c?35907:32856),32819===o&&(d=32854),32820===o&&(d=32855)),33325!==d&&33326!==d&&33327!==d&&33328!==d&&34842!==d&&34836!==d||e.get("EXT_color_buffer_float"),d}function Y(t,image,e){return!0===k(t,e)||t.isFramebufferTexture&&t.minFilter!==_&&t.minFilter!==S?Math.log2(Math.max(image.width,image.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?image.mipmaps.length:1}function Z(t){return t===_||t===M||t===w?9728:9729}function K(e){const n=e.target;n.removeEventListener("dispose",K),function(e){const n=r.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),r.remove(e)}(n),n.isVideoTexture&&B.delete(n),c.memory.textures--}function Q(e){const n=e.target;n.removeEventListener("dispose",Q),function(e){const n=e.texture,o=r.get(e),l=r.get(n);if(!e)return;void 0!==l.__webglTexture&&(t.deleteTexture(l.__webglTexture),c.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let i=0;i<6;i++)t.deleteFramebuffer(o.__webglFramebuffer[i]),o.__webglDepthbuffer&&t.deleteRenderbuffer(o.__webglDepthbuffer[i]);else t.deleteFramebuffer(o.__webglFramebuffer),o.__webglDepthbuffer&&t.deleteRenderbuffer(o.__webglDepthbuffer),o.__webglMultisampledFramebuffer&&t.deleteFramebuffer(o.__webglMultisampledFramebuffer),o.__webglColorRenderbuffer&&t.deleteRenderbuffer(o.__webglColorRenderbuffer),o.__webglDepthRenderbuffer&&t.deleteRenderbuffer(o.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let i=0,e=n.length;i<e;i++){const e=r.get(n[i]);e.__webglTexture&&(t.deleteTexture(e.__webglTexture),c.memory.textures--),r.remove(n[i])}r.remove(n),r.remove(e)}(n)}let tt=0;function et(t,slot){const e=r.get(t);if(t.isVideoTexture&&function(t){const e=c.render.frame;B.get(t)!==e&&(B.set(t,e),t.update())}(t),t.version>0&&e.__version!==t.version){const image=t.image;if(void 0===image)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==image.complete)return void lt(e,t,slot);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+slot),n.bindTexture(3553,e.__webglTexture)}function nt(e,slot){const o=r.get(e);e.version>0&&o.__version!==e.version?function(e,r,slot){if(6!==r.image.length)return;ot(e,r),n.activeTexture(33984+slot),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const o=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),c=r.image[0]&&r.image[0].isDataTexture,d=[];for(let i=0;i<6;i++)d[i]=o||c?c?r.image[i].image:r.image[i]:G(r.image[i],!1,!0,f),d[i]=vt(r,d[i]);const image=d[0],m=V(image)||h,v=l.convert(r.format,r.encoding),x=l.convert(r.type),y=j(r.internalFormat,v,x,r.encoding),_=h&&!0!==r.isVideoTexture,M=void 0===e.__version;let w,S=Y(r,image,m);if(at(34067,r,m),o){_&&M&&n.texStorage2D(34067,S,y,image.width,image.height);for(let i=0;i<6;i++){w=d[i].mipmaps;for(let t=0;t<w.length;t++){const e=w[t];r.format!==D?null!==v?_?n.compressedTexSubImage2D(34069+i,t,0,0,e.width,e.height,v,e.data):n.compressedTexImage2D(34069+i,t,y,e.width,e.height,0,e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_?n.texSubImage2D(34069+i,t,0,0,e.width,e.height,v,x,e.data):n.texImage2D(34069+i,t,y,e.width,e.height,0,v,x,e.data)}}}else{w=r.mipmaps,_&&M&&(w.length>0&&S++,n.texStorage2D(34067,S,y,d[0].width,d[0].height));for(let i=0;i<6;i++)if(c){_?n.texSubImage2D(34069+i,0,0,0,d[i].width,d[i].height,v,x,d[i].data):n.texImage2D(34069+i,0,y,d[i].width,d[i].height,0,v,x,d[i].data);for(let t=0;t<w.length;t++){const e=w[t].image[i].image;_?n.texSubImage2D(34069+i,t+1,0,0,e.width,e.height,v,x,e.data):n.texImage2D(34069+i,t+1,y,e.width,e.height,0,v,x,e.data)}}else{_?n.texSubImage2D(34069+i,0,0,0,v,x,d[i]):n.texImage2D(34069+i,0,y,v,x,d[i]);for(let t=0;t<w.length;t++){const e=w[t];_?n.texSubImage2D(34069+i,t+1,0,0,v,x,e.image[i]):n.texImage2D(34069+i,t+1,y,v,x,e.image[i])}}}k(r,m)&&W(34067);e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(o,e,slot):(n.activeTexture(33984+slot),n.bindTexture(34067,o.__webglTexture))}const it={[v]:10497,[x]:33071,[y]:33648},st={[_]:9728,[M]:9984,[w]:9986,[S]:9729,1007:9985,[T]:9987};function at(n,l,c){if(c?(t.texParameteri(n,10242,it[l.wrapS]),t.texParameteri(n,10243,it[l.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,it[l.wrapR]),t.texParameteri(n,10240,st[l.magFilter]),t.texParameteri(n,10241,st[l.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),l.wrapS===x&&l.wrapT===x||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,Z(l.magFilter)),t.texParameteri(n,10241,Z(l.minFilter)),l.minFilter!==_&&l.minFilter!==S&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const c=e.get("EXT_texture_filter_anisotropic");if(l.type===L&&!1===e.has("OES_texture_float_linear"))return;if(!1===h&&l.type===C&&!1===e.has("OES_texture_half_float_linear"))return;(l.anisotropy>1||r.get(l).__currentAnisotropy)&&(t.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(l.anisotropy,o.getMaxAnisotropy())),r.get(l).__currentAnisotropy=l.anisotropy)}}function ot(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",K),e.__webglTexture=t.createTexture(),c.memory.textures++)}function lt(e,r,slot){let o=3553;r.isDataTexture2DArray&&(o=35866),r.isDataTexture3D&&(o=32879),ot(e,r),n.activeTexture(33984+slot),n.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const c=function(t){return!h&&(t.wrapS!==x||t.wrapT!==x||t.minFilter!==_&&t.minFilter!==S)}(r)&&!1===V(r.image);let image=G(r.image,c,!1,m);image=vt(r,image);const d=V(image)||h,f=l.convert(r.format,r.encoding);let v,y=l.convert(r.type),M=j(r.internalFormat,f,y,r.encoding,r.isVideoTexture);at(o,r,d);const w=r.mipmaps,T=h&&!0!==r.isVideoTexture,E=void 0===e.__version,C=Y(r,image,d);if(r.isDepthTexture)M=6402,h?M=r.type===L?36012:r.type===R?33190:r.type===P?35056:33189:r.type===L&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===I&&6402===M&&r.type!==A&&r.type!==R&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=A,y=l.convert(r.type)),r.format===N&&6402===M&&(M=34041,r.type!==P&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=P,y=l.convert(r.type))),T&&E?n.texStorage2D(3553,1,M,image.width,image.height):n.texImage2D(3553,0,M,image.width,image.height,0,f,y,null);else if(r.isDataTexture)if(w.length>0&&d){T&&E&&n.texStorage2D(3553,C,M,w[0].width,w[0].height);for(let i=0,t=w.length;i<t;i++)v=w[i],T?n.texSubImage2D(3553,0,0,0,v.width,v.height,f,y,v.data):n.texImage2D(3553,i,M,v.width,v.height,0,f,y,v.data);r.generateMipmaps=!1}else T?(E&&n.texStorage2D(3553,C,M,image.width,image.height),n.texSubImage2D(3553,0,0,0,image.width,image.height,f,y,image.data)):n.texImage2D(3553,0,M,image.width,image.height,0,f,y,image.data);else if(r.isCompressedTexture){T&&E&&n.texStorage2D(3553,C,M,w[0].width,w[0].height);for(let i=0,t=w.length;i<t;i++)v=w[i],r.format!==D?null!==f?T?n.compressedTexSubImage2D(3553,i,0,0,v.width,v.height,f,v.data):n.compressedTexImage2D(3553,i,M,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):T?n.texSubImage2D(3553,i,0,0,v.width,v.height,f,y,v.data):n.texImage2D(3553,i,M,v.width,v.height,0,f,y,v.data)}else if(r.isDataTexture2DArray)T?(E&&n.texStorage3D(35866,C,M,image.width,image.height,image.depth),n.texSubImage3D(35866,0,0,0,0,image.width,image.height,image.depth,f,y,image.data)):n.texImage3D(35866,0,M,image.width,image.height,image.depth,0,f,y,image.data);else if(r.isDataTexture3D)T?(E&&n.texStorage3D(32879,C,M,image.width,image.height,image.depth),n.texSubImage3D(32879,0,0,0,0,image.width,image.height,image.depth,f,y,image.data)):n.texImage3D(32879,0,M,image.width,image.height,image.depth,0,f,y,image.data);else if(r.isFramebufferTexture)T&&E?n.texStorage2D(3553,C,M,image.width,image.height):n.texImage2D(3553,0,M,image.width,image.height,0,f,y,null);else if(w.length>0&&d){T&&E&&n.texStorage2D(3553,C,M,w[0].width,w[0].height);for(let i=0,t=w.length;i<t;i++)v=w[i],T?n.texSubImage2D(3553,i,0,0,f,y,v):n.texImage2D(3553,i,M,f,y,v);r.generateMipmaps=!1}else T?(E&&n.texStorage2D(3553,C,M,image.width,image.height),n.texSubImage2D(3553,0,0,0,f,y,image)):n.texImage2D(3553,0,M,f,y,image);k(r,d)&&W(o),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function ut(e,o,c,h,d){const f=l.convert(c.format,c.encoding),m=l.convert(c.type),v=j(c.internalFormat,f,m,c.encoding);r.get(o).__hasExternalTextures||(32879===d||35866===d?n.texImage3D(d,0,v,o.width,o.height,o.depth,0,f,m,null):n.texImage2D(d,0,v,o.width,o.height,0,f,m,null)),n.bindFramebuffer(36160,e),o.useRenderToTexture?O.framebufferTexture2DMultisampleEXT(36160,h,d,r.get(c).__webglTexture,0,gt(o)):t.framebufferTexture2D(36160,h,d,r.get(c).__webglTexture,0),n.bindFramebuffer(36160,null)}function pt(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let o=33189;if(r||n.useRenderToTexture){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===L?o=36012:e.type===R&&(o=33190));const r=gt(n);n.useRenderToTexture?O.renderbufferStorageMultisampleEXT(36161,r,o,n.width,n.height):t.renderbufferStorageMultisample(36161,r,o,n.width,n.height)}else t.renderbufferStorage(36161,o,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){const o=gt(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,o,35056,n.width,n.height):n.useRenderToTexture?O.renderbufferStorageMultisampleEXT(36161,o,35056,n.width,n.height):t.renderbufferStorage(36161,34041,n.width,n.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,o=l.convert(e.format,e.encoding),c=l.convert(e.type),h=j(e.internalFormat,o,c,e.encoding),d=gt(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,d,h,n.width,n.height):n.useRenderToTexture?O.renderbufferStorageMultisampleEXT(36161,d,h,n.width,n.height):t.renderbufferStorage(36161,h,n.width,n.height)}t.bindRenderbuffer(36161,null)}function ft(e){const o=r.get(e),l=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!o.__autoAllocateDepthBuffer){if(l)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,o){if(o&&o.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!o.depthTexture||!o.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(o.depthTexture).__webglTexture&&o.depthTexture.image.width===o.width&&o.depthTexture.image.height===o.height||(o.depthTexture.image.width=o.width,o.depthTexture.image.height=o.height,o.depthTexture.needsUpdate=!0),et(o.depthTexture,0);const l=r.get(o.depthTexture).__webglTexture,c=gt(o);if(o.depthTexture.format===I)o.useRenderToTexture?O.framebufferTexture2DMultisampleEXT(36160,36096,3553,l,0,c):t.framebufferTexture2D(36160,36096,3553,l,0);else{if(o.depthTexture.format!==N)throw new Error("Unknown depthTexture format");o.useRenderToTexture?O.framebufferTexture2DMultisampleEXT(36160,33306,3553,l,0,c):t.framebufferTexture2D(36160,33306,3553,l,0)}}(o.__webglFramebuffer,e)}else if(l){o.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,o.__webglFramebuffer[i]),o.__webglDepthbuffer[i]=t.createRenderbuffer(),pt(o.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(36160,o.__webglFramebuffer),o.__webglDepthbuffer=t.createRenderbuffer(),pt(o.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function gt(t){return h&&(t.useRenderbuffer||t.useRenderToTexture)?Math.min(z,t.samples):0}function vt(t,image){const n=t.encoding,r=t.format,o=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===$||n!==X&&(n===J?!1===h?!0===e.has("EXT_sRGB")&&r===D?(t.format=$,t.minFilter=S,t.generateMipmaps=!1):image=St.sRGBToLinear(image):r===D&&o===E||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",n)),image}let xt=!1,yt=!1;this.allocateTextureUnit=function(){const t=tt;return t>=d&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+d),tt+=1,t},this.resetTextureUnits=function(){tt=0},this.setTexture2D=et,this.setTexture2DArray=function(t,slot){const e=r.get(t);t.version>0&&e.__version!==t.version?lt(e,t,slot):(n.activeTexture(33984+slot),n.bindTexture(35866,e.__webglTexture))},this.setTexture3D=function(t,slot){const e=r.get(t);t.version>0&&e.__version!==t.version?lt(e,t,slot):(n.activeTexture(33984+slot),n.bindTexture(32879,e.__webglTexture))},this.setTextureCube=nt,this.rebindTextures=function(t,e,n){const o=r.get(t);void 0!==e&&ut(o.__webglFramebuffer,t,t.texture,36064,3553),void 0!==n&&ft(t)},this.setupRenderTarget=function(e){const d=e.texture,f=r.get(e),m=r.get(d);e.addEventListener("dispose",Q),!0!==e.isWebGLMultipleRenderTargets&&(void 0===m.__webglTexture&&(m.__webglTexture=t.createTexture()),m.__version=d.version,c.memory.textures++);const v=!0===e.isWebGLCubeRenderTarget,x=!0===e.isWebGLMultipleRenderTargets,y=d.isDataTexture3D||d.isDataTexture2DArray,_=V(e)||h;if(v){f.__webglFramebuffer=[];for(let i=0;i<6;i++)f.__webglFramebuffer[i]=t.createFramebuffer()}else if(f.__webglFramebuffer=t.createFramebuffer(),x)if(o.drawBuffers){const n=e.texture;for(let i=0,e=n.length;i<e;i++){const e=r.get(n[i]);void 0===e.__webglTexture&&(e.__webglTexture=t.createTexture(),c.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(e.useRenderbuffer)if(h){f.__webglMultisampledFramebuffer=t.createFramebuffer(),f.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,f.__webglColorRenderbuffer);const r=l.convert(d.format,d.encoding),o=l.convert(d.type),c=j(d.internalFormat,r,o,d.encoding),h=gt(e);t.renderbufferStorageMultisample(36161,h,c,e.width,e.height),n.bindFramebuffer(36160,f.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,f.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(f.__webglDepthRenderbuffer=t.createRenderbuffer(),pt(f.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(v){n.bindTexture(34067,m.__webglTexture),at(34067,d,_);for(let i=0;i<6;i++)ut(f.__webglFramebuffer[i],e,d,36064,34069+i);k(d,_)&&W(34067),n.unbindTexture()}else if(x){const t=e.texture;for(let i=0,o=t.length;i<o;i++){const o=t[i],l=r.get(o);n.bindTexture(3553,l.__webglTexture),at(3553,o,_),ut(f.__webglFramebuffer,e,o,36064+i,3553),k(o,_)&&W(3553)}n.unbindTexture()}else{let t=3553;if(y)if(h){t=d.isDataTexture3D?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(t,m.__webglTexture),at(t,d,_),ut(f.__webglFramebuffer,e,d,36064,t),k(d,_)&&W(t),n.unbindTexture()}e.depthBuffer&&ft(e)},this.updateRenderTargetMipmap=function(t){const e=V(t)||h,o=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let i=0,l=o.length;i<l;i++){const l=o[i];if(k(l,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,o=r.get(l).__webglTexture;n.bindTexture(e,o),W(e),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.useRenderbuffer)if(h){const o=e.width,l=e.height;let mask=16384;const c=[36064],h=e.stencilBuffer?33306:36096;e.depthBuffer&&c.push(h),e.ignoreDepthForMultisampleCopy||(e.depthBuffer&&(mask|=256),e.stencilBuffer&&(mask|=1024));const d=r.get(e);n.bindFramebuffer(36008,d.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,d.__webglFramebuffer),e.ignoreDepthForMultisampleCopy&&(t.invalidateFramebuffer(36008,[h]),t.invalidateFramebuffer(36009,[h])),t.blitFramebuffer(0,0,o,l,0,0,o,l,mask,9728),t.invalidateFramebuffer(36008,c),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,d.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.setupDepthRenderbuffer=ft,this.setupFrameBufferTexture=ut,this.safeSetTexture2D=function(t,slot){t&&t.isWebGLRenderTarget&&(!1===xt&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),xt=!0),t=t.texture),et(t,slot)},this.safeSetTextureCube=function(t,slot){t&&t.isWebGLCubeRenderTarget&&(!1===yt&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),yt=!0),t=t.texture),nt(t,slot)}}function Ps(t,e,n){const r=n.isWebGL2;return{convert:function(p,t=null){let n;if(p===E)return 5121;if(1017===p)return 32819;if(1018===p)return 32820;if(1010===p)return 5120;if(1011===p)return 5122;if(p===A)return 5123;if(1013===p)return 5124;if(p===R)return 5125;if(p===L)return 5126;if(p===C)return r?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===p)return 6406;if(p===D)return 6408;if(1024===p)return 6409;if(1025===p)return 6410;if(p===I)return 6402;if(p===N)return 34041;if(1028===p)return 6403;if(1022===p)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(p===$)return n=e.get("EXT_sRGB"),null!==n?n.SRGB_ALPHA_EXT:null;if(1029===p)return 36244;if(1030===p)return 33319;if(1031===p)return 33320;if(1033===p)return 36249;if(p===z||p===O||p===B||p===U)if(t===J){if(n=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===n)return null;if(p===z)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(p===O)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(p===B)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(p===U)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(p===z)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===O)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===B)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===U)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===p||35841===p||35842===p||35843===p){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===p)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===p)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===p)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===p)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===p)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===p||37496===p){if(n=e.get("WEBGL_compressed_texture_etc"),null===n)return null;if(37492===p)return t===J?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(37496===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}if(37808===p||37809===p||37810===p||37811===p||37812===p||37813===p||37814===p||37815===p||37816===p||37817===p||37818===p||37819===p||37820===p||37821===p){if(n=e.get("WEBGL_compressed_texture_astc"),null===n)return null;if(37808===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===p)return t===J?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===p){if(n=e.get("EXT_texture_compression_bptc"),null===n)return null;if(36492===p)return t===J?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT}return p===P?r?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Ds extends zn{constructor(t=[]){super(),this.cameras=t}}Ds.prototype.isArrayCamera=!0;class Is extends Ne{constructor(){super(),this.type="Group"}}Is.prototype.isGroup=!0;const Ns={type:"move"};class zs{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Is,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Is,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Dt,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Dt),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Is,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Dt,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Dt),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,o=null,l=null;const c=this._targetRay,h=this._grip,d=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==c&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(Ns))),d&&t.hand){l=!0;for(const r of t.hand.values()){const t=e.getJointPose(r,n);if(void 0===d.joints[r.jointName]){const t=new Is;t.matrixAutoUpdate=!1,t.visible=!1,d.joints[r.jointName]=t,d.add(t)}const o=d.joints[r.jointName];null!==t&&(o.matrix.fromArray(t.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.jointRadius=t.radius),o.visible=null!==t}const r=d.joints["index-finger-tip"],o=d.joints["thumb-tip"],c=r.position.distanceTo(o.position),h=.02,f=.005;d.inputState.pinching&&c>h+f?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!d.inputState.pinching&&c<=h-f&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==h&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),null!==o&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));return null!==c&&(c.visible=null!==r),null!==h&&(h.visible=null!==o),null!==d&&(d.visible=null!==l),this}}class Os extends Et{constructor(t,e,n,r,o,l,c,h,d,f){if((f=void 0!==f?f:I)!==I&&f!==N)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&f===I&&(n=A),void 0===n&&f===N&&(n=P),super(null,r,o,l,c,h,f,n,d),this.image={width:t,height:e},this.magFilter=void 0!==c?c:_,this.minFilter=void 0!==h?h:_,this.flipY=!1,this.generateMipmaps=!1}}Os.prototype.isDepthTexture=!0;class Bs extends tt{constructor(t,e){super();const n=this;let r=null,o=1,l=null,c="local-floor";const h=t.extensions.has("WEBGL_multisampled_render_to_texture");let d=null,f=null,m=null,v=null,x=!1,y=null;const _=e.getContextAttributes();let M=null,w=null;const S=[],T=new Map,R=new zn;R.layers.enable(1),R.viewport=new Rt;const L=new zn;L.layers.enable(2),L.viewport=new Rt;const C=[R,L],z=new Ds;z.layers.enable(1),z.layers.enable(2);let O=null,B=null;function U(t){const e=T.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function F(){T.forEach((function(t,e){t.disconnect(e)})),T.clear(),O=null,B=null,t.setRenderTarget(M),v=null,m=null,f=null,r=null,w=null,j.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function H(t){const e=r.inputSources;for(let i=0;i<S.length;i++)T.set(e[i],S[i]);for(let i=0;i<t.removed.length;i++){const e=t.removed[i],n=T.get(e);n&&(n.dispatchEvent({type:"disconnected",data:e}),T.delete(e))}for(let i=0;i<t.added.length;i++){const e=t.added[i],n=T.get(e);n&&n.dispatchEvent({type:"connected",data:e})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=S[t];return void 0===e&&(e=new zs,S[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=S[t];return void 0===e&&(e=new zs,S[t]=e),e.getGripSpace()},this.getHand=function(t){let e=S[t];return void 0===e&&(e=new zs,S[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){o=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){c=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l},this.getBaseLayer=function(){return null!==m?m:v},this.getBinding=function(){return f},this.getFrame=function(){return y},this.getSession=function(){return r},this.setSession=async function(d){if(r=d,null!==r){if(M=t.getRenderTarget(),r.addEventListener("select",U),r.addEventListener("selectstart",U),r.addEventListener("selectend",U),r.addEventListener("squeeze",U),r.addEventListener("squeezestart",U),r.addEventListener("squeezeend",U),r.addEventListener("end",F),r.addEventListener("inputsourceschange",H),!0!==_.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||_.antialias,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:v}),w=new Lt(v.framebufferWidth,v.framebufferHeight,{format:D,type:E,encoding:t.outputEncoding})}else{x=_.antialias;let n=null,l=null,c=null;_.depth&&(c=_.stencil?35056:33190,n=_.stencil?N:I,l=_.stencil?P:A);const d={colorFormat:t.outputEncoding===J?35907:32856,depthFormat:c,scaleFactor:o};f=new XRWebGLBinding(r,e),m=f.createProjectionLayer(d),r.updateRenderState({layers:[m]}),w=x?new Ct(m.textureWidth,m.textureHeight,{format:D,type:E,depthTexture:new Os(m.textureWidth,m.textureHeight,l,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:_.stencil,ignoreDepth:m.ignoreDepthValues,useRenderToTexture:h,encoding:t.outputEncoding}):new Lt(m.textureWidth,m.textureHeight,{format:D,type:E,depthTexture:new Os(m.textureWidth,m.textureHeight,l,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:_.stencil,ignoreDepth:m.ignoreDepthValues,encoding:t.outputEncoding})}w.isXRRenderTarget=!0,this.setFoveation(1),l=await r.requestReferenceSpace(c),j.setContext(r),j.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const G=new Dt,V=new Dt;function k(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;z.near=L.near=R.near=t.near,z.far=L.far=R.far=t.far,O===z.near&&B===z.far||(r.updateRenderState({depthNear:z.near,depthFar:z.far}),O=z.near,B=z.far);const e=t.parent,n=z.cameras;k(z,e);for(let i=0;i<n.length;i++)k(n[i],e);z.matrixWorld.decompose(z.position,z.quaternion,z.scale),t.position.copy(z.position),t.quaternion.copy(z.quaternion),t.scale.copy(z.scale),t.matrix.copy(z.matrix),t.matrixWorld.copy(z.matrixWorld);const o=t.children;for(let i=0,t=o.length;i<t;i++)o[i].updateMatrixWorld(!0);2===n.length?function(t,e,n){G.setFromMatrixPosition(e.matrixWorld),V.setFromMatrixPosition(n.matrixWorld);const r=G.distanceTo(V),o=e.projectionMatrix.elements,l=n.projectionMatrix.elements,c=o[14]/(o[10]-1),h=o[14]/(o[10]+1),d=(o[9]+1)/o[5],f=(o[9]-1)/o[5],m=(o[8]-1)/o[0],v=(l[8]+1)/l[0],x=c*m,y=c*v,_=r/(-m+v),M=_*-m;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(M),t.translateZ(_),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const w=c+_,S=h+_,T=x-M,E=y+(r-M),A=d*h/S*w,R=f*h/S*w;t.projectionMatrix.makePerspective(T,E,A,R,w,S)}(z,R,L):z.projectionMatrix.copy(R.projectionMatrix)},this.getCamera=function(){return z},this.getFoveation=function(){return null!==m?m.fixedFoveation:null!==v?v.fixedFoveation:void 0},this.setFoveation=function(t){null!==m&&(m.fixedFoveation=t),null!==v&&void 0!==v.fixedFoveation&&(v.fixedFoveation=t)};let W=null;const j=new Xn;j.setAnimationLoop((function(time,e){if(d=e.getViewerPose(l),y=e,null!==d){const e=d.views;null!==v&&(t.setRenderTargetFramebuffer(w,v.framebuffer),t.setRenderTarget(w));let n=!1;e.length!==z.cameras.length&&(z.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const view=e[i];let r=null;if(null!==v)r=v.getViewport(view);else{const e=f.getViewSubImage(m,view);r=e.viewport,0===i&&(t.setRenderTargetTextures(w,e.colorTexture,m.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(w))}const o=C[i];o.matrix.fromArray(view.transform.matrix),o.projectionMatrix.fromArray(view.projectionMatrix),o.viewport.set(r.x,r.y,r.width,r.height),0===i&&z.matrix.copy(o.matrix),!0===n&&z.cameras.push(o)}}const n=r.inputSources;for(let i=0;i<S.length;i++){const t=S[i],r=n[i];t.update(r,e,l)}W&&W(time,e),y=null})),this.setAnimationLoop=function(t){W=t},this.dispose=function(){}}}function Us(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);const r=t.get(n).envMap;let o,l;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio),n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?o=n.map:n.specularMap?o=n.specularMap:n.displacementMap?o=n.displacementMap:n.normalMap?o=n.normalMap:n.bumpMap?o=n.bumpMap:n.roughnessMap?o=n.roughnessMap:n.metalnessMap?o=n.metalnessMap:n.alphaMap?o=n.alphaMap:n.emissiveMap?o=n.emissiveMap:n.clearcoatMap?o=n.clearcoatMap:n.clearcoatNormalMap?o=n.clearcoatNormalMap:n.clearcoatRoughnessMap?o=n.clearcoatRoughnessMap:n.specularIntensityMap?o=n.specularIntensityMap:n.specularColorMap?o=n.specularColorMap:n.transmissionMap?o=n.transmissionMap:n.thicknessMap?o=n.thicknessMap:n.sheenColorMap?o=n.sheenColorMap:n.sheenRoughnessMap&&(o=n.sheenRoughnessMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uvTransform.value.copy(o.matrix)),n.aoMap?l=n.aoMap:n.lightMap&&(l=n.lightMap),void 0!==l&&(l.isWebGLRenderTarget&&(l=l.texture),!0===l.matrixAutoUpdate&&l.updateMatrix(),e.uv2Transform.value.copy(l.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,o,l,c){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e,r){n(t,e),t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=r.texture,t.transmissionSamplerSize.value.set(r.width,r.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap);e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,r,c):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let o;e.map?o=e.map:e.alphaMap&&(o=e.alphaMap);void 0!==o&&(!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uvTransform.value.copy(o.matrix))}(t,r,o,l):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Fs(t={}){const e=void 0!==t.canvas?t.canvas:function(){const canvas=mt("canvas");return canvas.style.display="block",canvas}(),n=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,o=void 0===t.depth||t.depth,l=void 0===t.stencil||t.stencil,c=void 0!==t.antialias&&t.antialias,h=void 0===t.premultipliedAlpha||t.premultipliedAlpha,d=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,f=void 0!==t.powerPreference?t.powerPreference:"default",m=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let v=null,y=null;const M=[],w=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=X,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const S=this;let A=!1,R=0,P=0,I=null,N=-1,z=null;const O=new Rt,B=new Rt;let U=null,F=e.width,H=e.height,G=1,V=null,k=null;const W=new Rt(0,0,F,H),j=new Rt(0,0,F,H);let J=!1;const Y=new qn;let Z=!1,K=!1,Q=null;const $=new ce,tt=new Dt,et={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function nt(){return null===I?G:1}let it,st,at,ot,lt,ct,ht,ut,pt,ft,gt,vt,xt,yt,_t,Mt,bt,wt,St,Tt,Et,At,Pt,It=n;function Nt(t,n){for(let i=0;i<t.length;i++){const r=t[i],o=e.getContext(r,n);if(null!==o)return o}return null}try{const t={alpha:!0,depth:o,stencil:l,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:d,powerPreference:f,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r137"),e.addEventListener("webglcontextlost",Bt,!1),e.addEventListener("webglcontextrestored",Ut,!1),null===It){const e=["webgl2","webgl","experimental-webgl"];if(!0===S.isWebGL1Renderer&&e.shift(),It=Nt(e,t),null===It)throw Nt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===It.getShaderPrecisionFormat&&(It.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function zt(){it=new Li(It),st=new ni(It,it,t),it.init(st),At=new Ps(It,it,st),at=new Ls(It,it,st),ot=new Di(It),lt=new ms,ct=new Cs(It,it,at,lt,st,At,ot),ht=new ri(S),ut=new Ri(S),pt=new Jn(It,st),Pt=new ti(It,it,pt,st),ft=new Ci(It,pt,ot,Pt),gt=new Ui(It,ft,pt,ot),St=new Bi(It,st,ct),Mt=new ii(lt),vt=new fs(S,ht,ut,it,st,Pt,Mt),xt=new Us(lt),yt=new ys,_t=new Ts(it,st),wt=new $n(S,ht,at,gt,r,h),bt=new Rs(S,gt,st),Tt=new ei(It,it,ot,st),Et=new Pi(It,it,ot,st),ot.programs=vt.programs,S.capabilities=st,S.extensions=it,S.properties=lt,S.renderLists=yt,S.shadowMap=bt,S.state=at,S.info=ot}zt();const Ot=new Bs(S,It);function Bt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function Ut(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const t=ot.autoReset,e=bt.enabled,n=bt.autoUpdate,r=bt.needsUpdate,o=bt.type;zt(),ot.autoReset=t,bt.enabled=e,bt.autoUpdate=n,bt.needsUpdate=r,bt.type=o}function Ft(t){const e=t.target;e.removeEventListener("dispose",Ft),function(t){(function(t){const e=lt.get(t).programs;void 0!==e&&(e.forEach((function(t){vt.releaseProgram(t)})),t.isShaderMaterial&&vt.releaseShaderCache(t))})(t),lt.remove(t)}(e)}this.xr=Ot,this.getContext=function(){return It},this.getContextAttributes=function(){return It.getContextAttributes()},this.forceContextLoss=function(){const t=it.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=it.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(t){void 0!==t&&(G=t,this.setSize(F,H,!1))},this.getSize=function(t){return t.set(F,H)},this.setSize=function(t,n,r){Ot.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(F=t,H=n,e.width=Math.floor(t*G),e.height=Math.floor(n*G),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(F*G,H*G).floor()},this.setDrawingBufferSize=function(t,n,r){F=t,H=n,G=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(O)},this.getViewport=function(t){return t.copy(W)},this.setViewport=function(t,e,n,r){t.isVector4?W.set(t.x,t.y,t.z,t.w):W.set(t,e,n,r),at.viewport(O.copy(W).multiplyScalar(G).floor())},this.getScissor=function(t){return t.copy(j)},this.setScissor=function(t,e,n,r){t.isVector4?j.set(t.x,t.y,t.z,t.w):j.set(t,e,n,r),at.scissor(B.copy(j).multiplyScalar(G).floor())},this.getScissorTest=function(){return J},this.setScissorTest=function(t){at.setScissorTest(J=t)},this.setOpaqueSort=function(t){V=t},this.setTransparentSort=function(t){k=t},this.getClearColor=function(t){return t.copy(wt.getClearColor())},this.setClearColor=function(){wt.setClearColor.apply(wt,arguments)},this.getClearAlpha=function(){return wt.getClearAlpha()},this.setClearAlpha=function(){wt.setClearAlpha.apply(wt,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),It.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Bt,!1),e.removeEventListener("webglcontextrestored",Ut,!1),yt.dispose(),_t.dispose(),lt.dispose(),ht.dispose(),ut.dispose(),gt.dispose(),Pt.dispose(),vt.dispose(),Ot.dispose(),Ot.removeEventListener("sessionstart",Gt),Ot.removeEventListener("sessionend",Vt),Q&&(Q.dispose(),Q=null),kt.stop()},this.renderBufferDirect=function(t,e,n,r,object,o){null===e&&(e=et);const l=object.isMesh&&object.matrixWorld.determinant()<0,c=function(t,e,n,r,object){!0!==e.isScene&&(e=et);ct.resetTextureUnits();const o=e.fog,l=r.isMeshStandardMaterial?e.environment:null,c=null===I?S.outputEncoding:!0===I.isXRRenderTarget?I.texture.encoding:X,h=(r.isMeshStandardMaterial?ut:ht).get(r.envMap||l),d=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,f=!!r.normalMap&&!!n.attributes.tangent,m=!!n.morphAttributes.position,v=!!n.morphAttributes.normal,x=n.morphAttributes.position?n.morphAttributes.position.length:0,_=r.toneMapped?S.toneMapping:0,M=lt.get(r),w=y.state.lights;if(!0===Z&&(!0===K||t!==z)){const e=t===z&&r.id===N;Mt.setState(r,t,e)}let T=!1;r.version===M.__version?M.needsLights&&M.lightsStateVersion!==w.state.version||M.outputEncoding!==c||object.isInstancedMesh&&!1===M.instancing?T=!0:object.isInstancedMesh||!0!==M.instancing?object.isSkinnedMesh&&!1===M.skinning?T=!0:object.isSkinnedMesh||!0!==M.skinning?M.envMap!==h||r.fog&&M.fog!==o?T=!0:void 0===M.numClippingPlanes||M.numClippingPlanes===Mt.numPlanes&&M.numIntersection===Mt.numIntersection?(M.vertexAlphas!==d||M.vertexTangents!==f||M.morphTargets!==m||M.morphNormals!==v||M.toneMapping!==_||!0===st.isWebGL2&&M.morphTargetsCount!==x)&&(T=!0):T=!0:T=!0:T=!0:(T=!0,M.__version=r.version);let E=M.currentProgram;!0===T&&(E=Jt(r,e,object));let A=!1,R=!1,L=!1;const C=E.getUniforms(),P=M.uniforms;at.useProgram(E.program)&&(A=!0,R=!0,L=!0);r.id!==N&&(N=r.id,R=!0);if(A||z!==t){if(C.setValue(It,"projectionMatrix",t.projectionMatrix),st.logarithmicDepthBuffer&&C.setValue(It,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),z!==t&&(z=t,R=!0,L=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const e=C.map.cameraPosition;void 0!==e&&e.setValue(It,tt.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&C.setValue(It,"isOrthographic",!0===t.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||object.isSkinnedMesh)&&C.setValue(It,"viewMatrix",t.matrixWorldInverse)}if(object.isSkinnedMesh){C.setOptional(It,object,"bindMatrix"),C.setOptional(It,object,"bindMatrixInverse");const t=object.skeleton;t&&(st.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),C.setValue(It,"boneTexture",t.boneTexture,ct),C.setValue(It,"boneTextureSize",t.boneTextureSize)):C.setOptional(It,t,"boneMatrices"))}!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||St.update(object,n,r,E);(R||M.receiveShadow!==object.receiveShadow)&&(M.receiveShadow=object.receiveShadow,C.setValue(It,"receiveShadow",object.receiveShadow));R&&(C.setValue(It,"toneMappingExposure",S.toneMappingExposure),M.needsLights&&(O=L,(D=P).ambientLightColor.needsUpdate=O,D.lightProbe.needsUpdate=O,D.directionalLights.needsUpdate=O,D.directionalLightShadows.needsUpdate=O,D.pointLights.needsUpdate=O,D.pointLightShadows.needsUpdate=O,D.spotLights.needsUpdate=O,D.spotLightShadows.needsUpdate=O,D.rectAreaLights.needsUpdate=O,D.hemisphereLights.needsUpdate=O),o&&r.fog&&xt.refreshFogUniforms(P,o),xt.refreshMaterialUniforms(P,r,G,H,Q),qr.upload(It,M.uniformsList,P,ct));var D,O;r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(qr.upload(It,M.uniformsList,P,ct),r.uniformsNeedUpdate=!1);r.isSpriteMaterial&&C.setValue(It,"center",object.center);return C.setValue(It,"modelViewMatrix",object.modelViewMatrix),C.setValue(It,"normalMatrix",object.normalMatrix),C.setValue(It,"modelMatrix",object.matrixWorld),E}(t,e,n,r,object);at.setMaterial(r,l);let h=n.index;const d=n.attributes.position;if(null===h){if(void 0===d||0===d.count)return}else if(0===h.count)return;let f,m=1;!0===r.wireframe&&(h=ft.getWireframeAttribute(n),m=2),Pt.setup(object,r,c,n,h);let v=Tt;null!==h&&(f=pt.get(h),v=Et,v.setIndex(f));const x=null!==h?h.count:d.count,_=n.drawRange.start*m,M=n.drawRange.count*m,w=null!==o?o.start*m:0,T=null!==o?o.count*m:1/0,E=Math.max(_,w),A=Math.min(x,_+M,w+T)-1,R=Math.max(0,A-E+1);if(0!==R){if(object.isMesh)!0===r.wireframe?(at.setLineWidth(r.wireframeLinewidth*nt()),v.setMode(1)):v.setMode(4);else if(object.isLine){let t=r.linewidth;void 0===t&&(t=1),at.setLineWidth(t*nt()),object.isLineSegments?v.setMode(1):object.isLineLoop?v.setMode(2):v.setMode(3)}else object.isPoints?v.setMode(0):object.isSprite&&v.setMode(4);if(object.isInstancedMesh)v.renderInstances(E,R,object.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);v.renderInstances(E,R,t)}else v.render(E,R)}},this.compile=function(t,e){y=_t.get(t),y.init(),w.push(y),t.traverseVisible((function(object){object.isLight&&object.layers.test(e.layers)&&(y.pushLight(object),object.castShadow&&y.pushShadow(object))})),y.setupLights(S.physicallyCorrectLights),t.traverse((function(object){const e=object.material;if(e)if(Array.isArray(e))for(let i=0;i<e.length;i++){Jt(e[i],t,object)}else Jt(e,t,object)})),w.pop(),y=null};let Ht=null;function Gt(){kt.stop()}function Vt(){kt.start()}const kt=new Xn;function Wt(object,t,e,n){if(!1===object.visible)return;if(object.layers.test(t.layers))if(object.isGroup)e=object.renderOrder;else if(object.isLOD)!0===object.autoUpdate&&object.update(t);else if(object.isLight)y.pushLight(object),object.castShadow&&y.pushShadow(object);else if(object.isSprite){if(!object.frustumCulled||Y.intersectsSprite(object)){n&&tt.setFromMatrixPosition(object.matrixWorld).applyMatrix4($);const t=gt.update(object),r=object.material;r.visible&&v.push(object,t,r,e,tt.z,null)}}else if((object.isMesh||object.isLine||object.isPoints)&&(object.isSkinnedMesh&&object.skeleton.frame!==ot.render.frame&&(object.skeleton.update(),object.skeleton.frame=ot.render.frame),!object.frustumCulled||Y.intersectsObject(object))){n&&tt.setFromMatrixPosition(object.matrixWorld).applyMatrix4($);const t=gt.update(object),r=object.material;if(Array.isArray(r)){const n=t.groups;for(let i=0,o=n.length;i<o;i++){const o=n[i],l=r[o.materialIndex];l&&l.visible&&v.push(object,t,l,e,tt.z,o)}}else r.visible&&v.push(object,t,r,e,tt.z,null)}const r=object.children;for(let i=0,o=r.length;i<o;i++)Wt(r[i],t,e,n)}function jt(t,e,n,r){const o=t.opaque,l=t.transmissive,h=t.transparent;y.setupLightsView(n),l.length>0&&function(t,e,n){if(null===Q){const t=!0===c&&!0===st.isWebGL2;Q=new(t?Ct:Lt)(1024,1024,{generateMipmaps:!0,type:null!==At.convert(C)?C:E,minFilter:T,magFilter:_,wrapS:x,wrapT:x,useRenderToTexture:it.has("WEBGL_multisampled_render_to_texture")})}const r=S.getRenderTarget();S.setRenderTarget(Q),S.clear();const o=S.toneMapping;S.toneMapping=0,qt(t,e,n),S.toneMapping=o,ct.updateMultisampleRenderTarget(Q),ct.updateRenderTargetMipmap(Q),S.setRenderTarget(r)}(o,e,n),r&&at.viewport(O.copy(r)),o.length>0&&qt(o,e,n),l.length>0&&qt(l,e,n),h.length>0&&qt(h,e,n)}function qt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,o=t.length;i<o;i++){const o=t[i],object=o.object,l=o.geometry,c=null===r?o.material:r,h=o.group;object.layers.test(n.layers)&&Xt(object,e,n,l,c,h)}}function Xt(object,t,e,n,r,o){object.onBeforeRender(S,t,e,n,r,o),object.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,object.matrixWorld),object.normalMatrix.getNormalMatrix(object.modelViewMatrix),r.onBeforeRender(S,t,e,n,object,o),!0===r.transparent&&2===r.side?(r.side=1,r.needsUpdate=!0,S.renderBufferDirect(e,t,n,r,object,o),r.side=0,r.needsUpdate=!0,S.renderBufferDirect(e,t,n,r,object,o),r.side=2):S.renderBufferDirect(e,t,n,r,object,o),object.onAfterRender(S,t,e,n,r,o)}function Jt(t,e,object){!0!==e.isScene&&(e=et);const n=lt.get(t),r=y.state.lights,o=y.state.shadowsArray,l=r.state.version,c=vt.getParameters(t,r.state,o,e,object),h=vt.getProgramCacheKey(c);let d=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=(t.isMeshStandardMaterial?ut:ht).get(t.envMap||n.environment),void 0===d&&(t.addEventListener("dispose",Ft),d=new Map,n.programs=d);let f=d.get(h);if(void 0!==f){if(n.currentProgram===f&&n.lightsStateVersion===l)return Yt(t,c),f}else c.uniforms=vt.getUniforms(t),t.onBuild(object,c,S),t.onBeforeCompile(c,S),f=vt.acquireProgram(c,h),d.set(h,f),n.uniforms=c.uniforms;const m=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(m.clippingPlanes=Mt.uniform),Yt(t,c),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=l,n.needsLights&&(m.ambientLightColor.value=r.state.ambient,m.lightProbe.value=r.state.probe,m.directionalLights.value=r.state.directional,m.directionalLightShadows.value=r.state.directionalShadow,m.spotLights.value=r.state.spot,m.spotLightShadows.value=r.state.spotShadow,m.rectAreaLights.value=r.state.rectArea,m.ltc_1.value=r.state.rectAreaLTC1,m.ltc_2.value=r.state.rectAreaLTC2,m.pointLights.value=r.state.point,m.pointLightShadows.value=r.state.pointShadow,m.hemisphereLights.value=r.state.hemi,m.directionalShadowMap.value=r.state.directionalShadowMap,m.directionalShadowMatrix.value=r.state.directionalShadowMatrix,m.spotShadowMap.value=r.state.spotShadowMap,m.spotShadowMatrix.value=r.state.spotShadowMatrix,m.pointShadowMap.value=r.state.pointShadowMap,m.pointShadowMatrix.value=r.state.pointShadowMatrix);const v=f.getUniforms(),x=qr.seqWithValue(v.seq,m);return n.currentProgram=f,n.uniformsList=x,f}function Yt(t,e){const n=lt.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}kt.setAnimationLoop((function(time){Ht&&Ht(time)})),"undefined"!=typeof window&&kt.setContext(window),this.setAnimationLoop=function(t){Ht=t,Ot.setAnimationLoop(t),null===t?kt.stop():kt.start()},Ot.addEventListener("sessionstart",Gt),Ot.addEventListener("sessionend",Vt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===A)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===Ot.enabled&&!0===Ot.isPresenting&&(!0===Ot.cameraAutoUpdate&&Ot.updateCamera(e),e=Ot.getCamera()),!0===t.isScene&&t.onBeforeRender(S,t,e,I),y=_t.get(t,w.length),y.init(),w.push(y),$.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),Y.setFromProjectionMatrix($),K=this.localClippingEnabled,Z=Mt.init(this.clippingPlanes,K,e),v=yt.get(t,M.length),v.init(),M.push(v),Wt(t,e,0,S.sortObjects),v.finish(),!0===S.sortObjects&&v.sort(V,k),!0===Z&&Mt.beginShadows();const n=y.state.shadowsArray;if(bt.render(n,t,e),!0===Z&&Mt.endShadows(),!0===this.info.autoReset&&this.info.reset(),wt.render(v,t),y.setupLights(S.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let i=0,e=n.length;i<e;i++){const e=n[i];jt(v,t,e,e.viewport)}}else jt(v,t,e);null!==I&&(ct.updateMultisampleRenderTarget(I),ct.updateRenderTargetMipmap(I)),!0===t.isScene&&t.onAfterRender(S,t,e),at.buffers.depth.setTest(!0),at.buffers.depth.setMask(!0),at.buffers.color.setMask(!0),at.setPolygonOffset(!1),Pt.resetDefaultState(),N=-1,z=null,w.pop(),y=w.length>0?w[w.length-1]:null,M.pop(),v=M.length>0?M[M.length-1]:null},this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(t,e,n){lt.get(t.texture).__webglTexture=e,lt.get(t.depthTexture).__webglTexture=n;const r=lt.get(t);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||t.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),t.useRenderToTexture=!1,t.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(t,e){const n=lt.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){I=t,R=e,P=n;let r=!0;if(t){const e=lt.get(t);void 0!==e.__useDefaultFramebuffer?(at.bindFramebuffer(36160,null),r=!1):void 0===e.__webglFramebuffer?ct.setupRenderTarget(t):e.__hasExternalTextures&&ct.rebindTextures(t,lt.get(t.texture).__webglTexture,lt.get(t.depthTexture).__webglTexture)}let o=null,l=!1,c=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(c=!0);const r=lt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(o=r[e],l=!0):o=t.useRenderbuffer?lt.get(t).__webglMultisampledFramebuffer:r,O.copy(t.viewport),B.copy(t.scissor),U=t.scissorTest}else O.copy(W).multiplyScalar(G).floor(),B.copy(j).multiplyScalar(G).floor(),U=J;if(at.bindFramebuffer(36160,o)&&st.drawBuffers&&r&&at.drawBuffers(t,o),at.viewport(O),at.scissor(B),at.setScissorTest(U),l){const r=lt.get(t.texture);It.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(c){const r=lt.get(t.texture),o=e||0;It.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,o)}N=-1},this.readRenderTargetPixels=function(t,e,n,r,o,l,c){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let h=lt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==c&&(h=h[c]),h){at.bindFramebuffer(36160,h);try{const c=t.texture,h=c.format,d=c.type;if(h!==D&&At.convert(h)!==It.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const f=d===C&&(it.has("EXT_color_buffer_half_float")||st.isWebGL2&&it.has("EXT_color_buffer_float"));if(!(d===E||At.convert(d)===It.getParameter(35738)||d===L&&(st.isWebGL2||it.has("OES_texture_float")||it.has("WEBGL_color_buffer_float"))||f))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===It.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-o&&It.readPixels(e,n,r,o,At.convert(h),At.convert(d),l):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==I?lt.get(I).__webglFramebuffer:null;at.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){if(!0!==e.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const r=Math.pow(2,-n),o=Math.floor(e.image.width*r),l=Math.floor(e.image.height*r);ct.setTexture2D(e,0),It.copyTexSubImage2D(3553,n,0,0,t.x,t.y,o,l),at.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const o=e.image.width,l=e.image.height,c=At.convert(n.format),h=At.convert(n.type);ct.setTexture2D(n,0),It.pixelStorei(37440,n.flipY),It.pixelStorei(37441,n.premultiplyAlpha),It.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?It.texSubImage2D(3553,r,t.x,t.y,o,l,c,h,e.image.data):e.isCompressedTexture?It.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,c,e.mipmaps[0].data):It.texSubImage2D(3553,r,t.x,t.y,c,h,e.image),0===r&&n.generateMipmaps&&It.generateMipmap(3553),at.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,o=0){if(S.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const l=t.max.x-t.min.x+1,c=t.max.y-t.min.y+1,h=t.max.z-t.min.z+1,d=At.convert(r.format),f=At.convert(r.type);let m;if(r.isDataTexture3D)ct.setTexture3D(r,0),m=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ct.setTexture2DArray(r,0),m=35866}It.pixelStorei(37440,r.flipY),It.pixelStorei(37441,r.premultiplyAlpha),It.pixelStorei(3317,r.unpackAlignment);const v=It.getParameter(3314),x=It.getParameter(32878),y=It.getParameter(3316),_=It.getParameter(3315),M=It.getParameter(32877),image=n.isCompressedTexture?n.mipmaps[0]:n.image;It.pixelStorei(3314,image.width),It.pixelStorei(32878,image.height),It.pixelStorei(3316,t.min.x),It.pixelStorei(3315,t.min.y),It.pixelStorei(32877,t.min.z),n.isDataTexture||n.isDataTexture3D?It.texSubImage3D(m,o,e.x,e.y,e.z,l,c,h,d,f,image.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),It.compressedTexSubImage3D(m,o,e.x,e.y,e.z,l,c,h,d,image.data)):It.texSubImage3D(m,o,e.x,e.y,e.z,l,c,h,d,f,image),It.pixelStorei(3314,v),It.pixelStorei(32878,x),It.pixelStorei(3316,y),It.pixelStorei(3315,_),It.pixelStorei(32877,M),0===o&&r.generateMipmaps&&It.generateMipmap(m),at.unbindTexture()},this.initTexture=function(t){ct.setTexture2D(t,0),at.unbindTexture()},this.resetState=function(){R=0,P=0,I=null,at.reset(),Pt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Fs.prototype.isWebGLRenderer=!0;(class extends Fs{}).prototype.isWebGL1Renderer=!0;class Hs{constructor(t,e=25e-5){this.name="",this.color=new bt(t),this.density=e}clone(){return new Hs(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Hs.prototype.isFogExp2=!0;class Gs{constructor(t,e=1,n=1e3){this.name="",this.color=new bt(t),this.near=e,this.far=n}clone(){return new Gs(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Gs.prototype.isFog=!0;class Vs extends Ne{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(source,t){return super.copy(source,t),null!==source.background&&(this.background=source.background.clone()),null!==source.environment&&(this.environment=source.environment.clone()),null!==source.fog&&(this.fog=source.fog.clone()),null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone()),this.autoUpdate=source.autoUpdate,this.matrixAutoUpdate=source.matrixAutoUpdate,this}toJSON(meta){const data=super.toJSON(meta);return null!==this.fog&&(data.object.fog=this.fog.toJSON()),data}}Vs.prototype.isScene=!0;class ks{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Z,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=st()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(source){return this.array=new source.array.constructor(source.array),this.count=source.count,this.stride=source.stride,this.usage=source.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(data){void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=st()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]),e=new this.constructor(t,this.stride);return e.setUsage(this.usage),e}onUpload(t){return this.onUploadCallback=t,this}toJSON(data){return void 0===data.arrayBuffers&&(data.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=st()),void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ks.prototype.isInterleavedBuffer=!0;const Ws=new Dt;class js{constructor(t,e,n,r=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let i=0,e=this.data.count;i<e;i++)Ws.x=this.getX(i),Ws.y=this.getY(i),Ws.z=this.getZ(i),Ws.applyMatrix4(t),this.setXYZ(i,Ws.x,Ws.y,Ws.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)Ws.x=this.getX(i),Ws.y=this.getY(i),Ws.z=this.getZ(i),Ws.applyNormalMatrix(t),this.setXYZ(i,Ws.x,Ws.y,Ws.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)Ws.x=this.getX(i),Ws.y=this.getY(i),Ws.z=this.getZ(i),Ws.transformDirection(t),this.setXYZ(i,Ws.x,Ws.y,Ws.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,o){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=o,this}clone(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[e+n])}return new Ke(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.clone(data)),new js(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const e=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[e+n])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===data.interleavedBuffers&&(data.interleavedBuffers={}),void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}js.prototype.isInterleavedBufferAttribute=!0;class qs extends Xe{constructor(t){super(),this.type="SpriteMaterial",this.color=new bt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.rotation=source.rotation,this.sizeAttenuation=source.sizeAttenuation,this}}let Xs;qs.prototype.isSpriteMaterial=!0;const Js=new Dt,Ys=new Dt,Zs=new Dt,Ks=new ut,Qs=new ut,$s=new ce,ta=new Dt,ea=new Dt,na=new Dt,ia=new ut,ra=new ut,sa=new ut;class aa extends Ne{constructor(t){if(super(),this.type="Sprite",void 0===Xs){Xs=new cn;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new ks(t,5);Xs.setIndex([0,1,2,0,2,3]),Xs.setAttribute("position",new js(e,3,0,!1)),Xs.setAttribute("uv",new js(e,2,3,!1))}this.geometry=Xs,this.material=void 0!==t?t:new qs,this.center=new ut(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ys.setFromMatrixScale(this.matrixWorld),$s.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Zs.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ys.multiplyScalar(-Zs.z);const n=this.material.rotation;let r,o;0!==n&&(o=Math.cos(n),r=Math.sin(n));const l=this.center;oa(ta.set(-.5,-.5,0),Zs,l,Ys,r,o),oa(ea.set(.5,-.5,0),Zs,l,Ys,r,o),oa(na.set(.5,.5,0),Zs,l,Ys,r,o),ia.set(0,0),ra.set(1,0),sa.set(1,1);let c=t.ray.intersectTriangle(ta,ea,na,!1,Js);if(null===c&&(oa(ea.set(-.5,.5,0),Zs,l,Ys,r,o),ra.set(0,1),c=t.ray.intersectTriangle(ta,na,ea,!1,Js),null===c))return;const h=t.ray.origin.distanceTo(Js);h<t.near||h>t.far||e.push({distance:h,point:Js.clone(),uv:je.getUV(Js,ta,ea,na,ia,ra,sa,new ut),face:null,object:this})}copy(source){return super.copy(source),void 0!==source.center&&this.center.copy(source.center),this.material=source.material,this}}function oa(t,e,n,r,o,l){Ks.subVectors(t,n).addScalar(.5).multiply(r),void 0!==o?(Qs.x=l*Ks.x-o*Ks.y,Qs.y=o*Ks.x+l*Ks.y):Qs.copy(Ks),t.copy(e),t.x+=Qs.x,t.y+=Qs.y,t.applyMatrix4($s)}aa.prototype.isSprite=!0;const la=new Dt,ca=new Rt,ha=new Rt,ua=new Dt,da=new ce;class pa extends An{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ce,this.bindMatrixInverse=new ce}copy(source){return super.copy(source),this.bindMode=source.bindMode,this.bindMatrix.copy(source.bindMatrix),this.bindMatrixInverse.copy(source.bindMatrixInverse),this.skeleton=source.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Rt,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;ca.fromBufferAttribute(r.attributes.skinIndex,t),ha.fromBufferAttribute(r.attributes.skinWeight,t),la.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let i=0;i<4;i++){const t=ha.getComponent(i);if(0!==t){const r=ca.getComponent(i);da.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(ua.copy(la).applyMatrix4(da),t)}}return e.applyMatrix4(this.bindMatrixInverse)}}pa.prototype.isSkinnedMesh=!0;class fa extends Ne{constructor(){super(),this.type="Bone"}}fa.prototype.isBone=!0;class ma extends Et{constructor(data=null,t=1,e=1,n,r,o,l,c,h=1003,d=1003,f,m){super(null,o,l,c,h,d,n,r,f,m),this.image={data:data,width:t,height:e},this.magFilter=h,this.minFilter=d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ma.prototype.isDataTexture=!0;class ga extends Ke{constructor(t,e,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r}copy(source){return super.copy(source),this.meshPerAttribute=source.meshPerAttribute,this}toJSON(){const data=super.toJSON();return data.meshPerAttribute=this.meshPerAttribute,data.isInstancedBufferAttribute=!0,data}}ga.prototype.isInstancedBufferAttribute=!0;const va=new ce,xa=new ce,ya=[],_a=new An;class Ma extends An{constructor(t,e,n){super(t,e),this.instanceMatrix=new ga(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(source){return super.copy(source),this.instanceMatrix.copy(source.instanceMatrix),null!==source.instanceColor&&(this.instanceColor=source.instanceColor.clone()),this.count=source.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(_a.geometry=this.geometry,_a.material=this.material,void 0!==_a.material)for(let o=0;o<r;o++){this.getMatrixAt(o,va),xa.multiplyMatrices(n,va),_a.matrixWorld=xa,_a.raycast(t,ya);for(let i=0,t=ya.length;i<t;i++){const t=ya[i];t.instanceId=o,t.object=this,e.push(t)}ya.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new ga(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Ma.prototype.isInstancedMesh=!0;class ba extends Xe{constructor(t){super(),this.type="LineBasicMaterial",this.color=new bt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.linewidth=source.linewidth,this.linecap=source.linecap,this.linejoin=source.linejoin,this}}ba.prototype.isLineBasicMaterial=!0;const wa=new Dt,Sa=new Dt,Ta=new ce,Ea=new le,Aa=new te;class Ra extends Ne{constructor(t=new cn,e=new ba){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(source){return super.copy(source),this.material=source.material,this.geometry=source.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let i=1,t=e.count;i<t;i++)wa.fromBufferAttribute(e,i-1),Sa.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=wa.distanceTo(Sa);t.setAttribute("lineDistance",new tn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Aa.copy(n.boundingSphere),Aa.applyMatrix4(r),Aa.radius+=o,!1===t.ray.intersectsSphere(Aa))return;Ta.copy(r).invert(),Ea.copy(t.ray).applyMatrix4(Ta);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,d=new Dt,f=new Dt,m=new Dt,v=new Dt,x=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,o=n.attributes.position;if(null!==r){for(let i=Math.max(0,l.start),n=Math.min(r.count,l.start+l.count)-1;i<n;i+=x){const a=r.getX(i),b=r.getX(i+1);d.fromBufferAttribute(o,a),f.fromBufferAttribute(o,b);if(Ea.distanceSqToSegment(d,f,v,m)>h)continue;v.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(v);n<t.near||n>t.far||e.push({distance:n,point:m.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{for(let i=Math.max(0,l.start),n=Math.min(o.count,l.start+l.count)-1;i<n;i+=x){d.fromBufferAttribute(o,i),f.fromBufferAttribute(o,i+1);if(Ea.distanceSqToSegment(d,f,v,m)>h)continue;v.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(v);n<t.near||n>t.far||e.push({distance:n,point:m.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Ra.prototype.isLine=!0;const La=new Dt,Ca=new Dt;class Pa extends Ra{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let i=0,t=e.count;i<t;i+=2)La.fromBufferAttribute(e,i),Ca.fromBufferAttribute(e,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+La.distanceTo(Ca);t.setAttribute("lineDistance",new tn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Pa.prototype.isLineSegments=!0;class Da extends Ra{constructor(t,e){super(t,e),this.type="LineLoop"}}Da.prototype.isLineLoop=!0;class Ia extends Xe{constructor(t){super(),this.type="PointsMaterial",this.color=new bt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.alphaMap=source.alphaMap,this.size=source.size,this.sizeAttenuation=source.sizeAttenuation,this}}Ia.prototype.isPointsMaterial=!0;const Na=new ce,za=new le,Oa=new te,Ba=new Dt;class Ua extends Ne{constructor(t=new cn,e=new Ia){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(source){return super.copy(source),this.material=source.material,this.geometry=source.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Oa.copy(n.boundingSphere),Oa.applyMatrix4(r),Oa.radius+=o,!1===t.ray.intersectsSphere(Oa))return;Na.copy(r).invert(),za.copy(t.ray).applyMatrix4(Na);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position;if(null!==o){for(let i=Math.max(0,l.start),n=Math.min(o.count,l.start+l.count);i<n;i++){const a=o.getX(i);Ba.fromBufferAttribute(c,a),Fa(Ba,a,h,r,t,e,this)}}else{for(let i=Math.max(0,l.start),n=Math.min(c.count,l.start+l.count);i<n;i++)Ba.fromBufferAttribute(c,i),Fa(Ba,i,h,r,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Fa(t,e,n,r,o,l,object){const c=za.distanceSqToPoint(t);if(c<n){const n=new Dt;za.closestPointToPoint(t,n),n.applyMatrix4(r);const h=o.ray.origin.distanceTo(n);if(h<o.near||h>o.far)return;l.push({distance:h,distanceToRay:Math.sqrt(c),point:n,index:e,face:null,object:object})}}Ua.prototype.isPoints=!0;(class extends Et{constructor(video,t,e,n,r,o,l,c,h){super(video,t,e,n,r,o,l,c,h),this.minFilter=void 0!==o?o:S,this.magFilter=void 0!==r?r:S,this.generateMipmaps=!1;const d=this;"requestVideoFrameCallback"in video&&video.requestVideoFrameCallback((function t(){d.needsUpdate=!0,video.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const video=this.image;!1==="requestVideoFrameCallback"in video&&video.readyState>=video.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}).prototype.isVideoTexture=!0;(class extends Et{constructor(t,e,n){super({width:t,height:e}),this.format=n,this.magFilter=_,this.minFilter=_,this.generateMipmaps=!1,this.needsUpdate=!0}}).prototype.isFramebufferTexture=!0;class Ha extends Et{constructor(t,e,n,r,o,l,c,h,d,f,m,v){super(null,l,c,h,d,f,r,o,m,v),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}Ha.prototype.isCompressedTexture=!0;(class extends Et{constructor(canvas,t,e,n,r,o,l,c,h){super(canvas,t,e,n,r,o,l,c,h),this.needsUpdate=!0}}).prototype.isCanvasTexture=!0;class Ga extends cn{constructor(t=[],e=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const o=[],l=[];function c(a,b,t,e){const n=e+1,r=[];for(let i=0;i<=n;i++){r[i]=[];const e=a.clone().lerp(t,i/n),o=b.clone().lerp(t,i/n),l=n-i;for(let t=0;t<=l;t++)r[i][t]=0===t&&i===n?e:e.clone().lerp(o,t/l)}for(let i=0;i<n;i++)for(let t=0;t<2*(n-i)-1;t++){const e=Math.floor(t/2);t%2==0?(h(r[i][e+1]),h(r[i+1][e]),h(r[i][e])):(h(r[i][e+1]),h(r[i+1][e+1]),h(r[i+1][e]))}}function h(t){o.push(t.x,t.y,t.z)}function d(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function f(t,e,n,r){r<0&&1===t.x&&(l[e]=t.x-1),0===n.x&&0===n.z&&(l[e]=r/2/Math.PI+.5)}function m(t){return Math.atan2(t.z,-t.x)}!function(t){const a=new Dt,b=new Dt,n=new Dt;for(let i=0;i<e.length;i+=3)d(e[i+0],a),d(e[i+1],b),d(e[i+2],n),c(a,b,n,t)}(r),function(t){const e=new Dt;for(let i=0;i<o.length;i+=3)e.x=o[i+0],e.y=o[i+1],e.z=o[i+2],e.normalize().multiplyScalar(t),o[i+0]=e.x,o[i+1]=e.y,o[i+2]=e.z}(n),function(){const t=new Dt;for(let i=0;i<o.length;i+=3){t.x=o[i+0],t.y=o[i+1],t.z=o[i+2];const u=m(t)/2/Math.PI+.5,n=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);l.push(u,1-n)}var e;(function(){const a=new Dt,b=new Dt,t=new Dt,e=new Dt,n=new ut,r=new ut,c=new ut;for(let i=0,h=0;i<o.length;i+=9,h+=6){a.set(o[i+0],o[i+1],o[i+2]),b.set(o[i+3],o[i+4],o[i+5]),t.set(o[i+6],o[i+7],o[i+8]),n.set(l[h+0],l[h+1]),r.set(l[h+2],l[h+3]),c.set(l[h+4],l[h+5]),e.copy(a).add(b).add(t).divideScalar(3);const d=m(e);f(n,h+0,a,d),f(r,h+2,b,d),f(c,h+4,t,d)}})(),function(){for(let i=0;i<l.length;i+=6){const t=l[i+0],e=l[i+2],n=l[i+4],r=Math.max(t,e,n),o=Math.min(t,e,n);r>.9&&o<.1&&(t<.2&&(l[i+0]+=1),e<.2&&(l[i+2]+=1),n<.2&&(l[i+4]+=1))}}()}(),this.setAttribute("position",new tn(o,3)),this.setAttribute("normal",new tn(o.slice(),3)),this.setAttribute("uv",new tn(l,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(data){return new Ga(data.vertices,data.indices,data.radius,data.details)}}new Dt,new Dt,new Dt,new je;class Va{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(u,t){const e=this.getUtoTmapping(u);return this.getPoint(e,t)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),o=0;e.push(0);for(let p=1;p<=t;p++)n=this.getPoint(p/t),o+=n.distanceTo(r),e.push(o),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(u,t){const e=this.getLengths();let i=0;const n=e.length;let r;r=t||u*e[n-1];let o,l=0,c=n-1;for(;l<=c;)if(i=Math.floor(l+(c-l)/2),o=e[i]-r,o<0)l=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(i=c,e[i]===r)return i/(n-1);const h=e[i];return(i+(r-h)/(e[i+1]-h))/(n-1)}getTangent(t,e){const n=1e-4;let r=t-n,o=t+n;r<0&&(r=0),o>1&&(o=1);const l=this.getPoint(r),c=this.getPoint(o),h=e||(l.isVector2?new ut:new Dt);return h.copy(c).sub(l).normalize(),h}getTangentAt(u,t){const e=this.getUtoTmapping(u);return this.getTangent(e,t)}computeFrenetFrames(t,e){const n=new Dt,r=[],o=[],l=[],c=new Dt,h=new ce;for(let i=0;i<=t;i++){const u=i/t;r[i]=this.getTangentAt(u,new Dt)}o[0]=new Dt,l[0]=new Dt;let d=Number.MAX_VALUE;const f=Math.abs(r[0].x),m=Math.abs(r[0].y),v=Math.abs(r[0].z);f<=d&&(d=f,n.set(1,0,0)),m<=d&&(d=m,n.set(0,1,0)),v<=d&&n.set(0,0,1),c.crossVectors(r[0],n).normalize(),o[0].crossVectors(r[0],c),l[0].crossVectors(r[0],o[0]);for(let i=1;i<=t;i++){if(o[i]=o[i-1].clone(),l[i]=l[i-1].clone(),c.crossVectors(r[i-1],r[i]),c.length()>Number.EPSILON){c.normalize();const t=Math.acos(at(r[i-1].dot(r[i]),-1,1));o[i].applyMatrix4(h.makeRotationAxis(c,t))}l[i].crossVectors(r[i],o[i])}if(!0===e){let e=Math.acos(at(o[0].dot(o[t]),-1,1));e/=t,r[0].dot(c.crossVectors(o[0],o[t]))>0&&(e=-e);for(let i=1;i<=t;i++)o[i].applyMatrix4(h.makeRotationAxis(r[i],e*i)),l[i].crossVectors(r[i],o[i])}return{tangents:r,normals:o,binormals:l}}clone(){return(new this.constructor).copy(this)}copy(source){return this.arcLengthDivisions=source.arcLengthDivisions,this}toJSON(){const data={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return data.arcLengthDivisions=this.arcLengthDivisions,data.type=this.type,data}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class ka extends Va{constructor(t=0,e=0,n=1,r=1,o=0,l=2*Math.PI,c=!1,h=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e){const n=e||new ut,r=2*Math.PI;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=r;for(;o>r;)o-=r;o<Number.EPSILON&&(o=l?0:r),!0!==this.aClockwise||l||(o===r?o=-r:o-=r);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),d=this.aY+this.yRadius*Math.sin(c);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=h-this.aX,r=d-this.aY;h=n*t-r*e+this.aX,d=n*e+r*t+this.aY}return n.set(h,d)}copy(source){return super.copy(source),this.aX=source.aX,this.aY=source.aY,this.xRadius=source.xRadius,this.yRadius=source.yRadius,this.aStartAngle=source.aStartAngle,this.aEndAngle=source.aEndAngle,this.aClockwise=source.aClockwise,this.aRotation=source.aRotation,this}toJSON(){const data=super.toJSON();return data.aX=this.aX,data.aY=this.aY,data.xRadius=this.xRadius,data.yRadius=this.yRadius,data.aStartAngle=this.aStartAngle,data.aEndAngle=this.aEndAngle,data.aClockwise=this.aClockwise,data.aRotation=this.aRotation,data}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}ka.prototype.isEllipseCurve=!0;class Wa extends ka{constructor(t,e,n,r,o,l){super(t,e,n,n,r,o,l),this.type="ArcCurve"}}function ja(){let t=0,e=0,n=0,r=0;function o(o,l,c,h){t=o,e=c,n=-3*o+3*l-2*c-h,r=2*o-2*l+c+h}return{initCatmullRom:function(t,e,n,r,l){o(e,n,l*(n-t),l*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,l,c,h){let d=(e-t)/l-(n-t)/(l+c)+(n-e)/c,f=(n-e)/c-(r-e)/(c+h)+(r-n)/h;d*=c,f*=c,o(e,n,d,f)},calc:function(o){const l=o*o;return t+e*o+n*l+r*(l*o)}}}Wa.prototype.isArcCurve=!0;const qa=new Dt,Xa=new ja,Ja=new ja,Ya=new ja;class Za extends Va{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new Dt){const n=e,r=this.points,o=r.length,p=(o-(this.closed?0:1))*t;let l,c,h=Math.floor(p),d=p-h;this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/o)+1)*o:0===d&&h===o-1&&(h=o-2,d=1),this.closed||h>0?l=r[(h-1)%o]:(qa.subVectors(r[0],r[1]).add(r[0]),l=qa);const f=r[h%o],m=r[(h+1)%o];if(this.closed||h+2<o?c=r[(h+2)%o]:(qa.subVectors(r[o-1],r[o-2]).add(r[o-1]),c=qa),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(l.distanceToSquared(f),t),n=Math.pow(f.distanceToSquared(m),t),r=Math.pow(m.distanceToSquared(c),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),Xa.initNonuniformCatmullRom(l.x,f.x,m.x,c.x,e,n,r),Ja.initNonuniformCatmullRom(l.y,f.y,m.y,c.y,e,n,r),Ya.initNonuniformCatmullRom(l.z,f.z,m.z,c.z,e,n,r)}else"catmullrom"===this.curveType&&(Xa.initCatmullRom(l.x,f.x,m.x,c.x,this.tension),Ja.initCatmullRom(l.y,f.y,m.y,c.y,this.tension),Ya.initCatmullRom(l.z,f.z,m.z,c.z,this.tension));return n.set(Xa.calc(d),Ja.calc(d),Ya.calc(d)),n}copy(source){super.copy(source),this.points=[];for(let i=0,t=source.points.length;i<t;i++){const t=source.points[i];this.points.push(t.clone())}return this.closed=source.closed,this.curveType=source.curveType,this.tension=source.tension,this}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,t=this.points.length;i<t;i++){const t=this.points[i];data.points.push(t.toArray())}return data.closed=this.closed,data.curveType=this.curveType,data.tension=this.tension,data}fromJSON(t){super.fromJSON(t),this.points=[];for(let i=0,e=t.points.length;i<e;i++){const e=t.points[i];this.points.push((new Dt).fromArray(e))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ka(t,e,n,r,o){const l=.5*(r-e),c=.5*(o-n),h=t*t;return(2*n-2*r+l+c)*(t*h)+(-3*n+3*r-2*l-c)*h+l*t+n}function Qa(t,e,n,r){return function(t,p){const e=1-t;return e*e*p}(t,e)+function(t,p){return 2*(1-t)*t*p}(t,n)+function(t,p){return t*t*p}(t,r)}function $a(t,e,n,r,o){return function(t,p){const e=1-t;return e*e*e*p}(t,e)+function(t,p){const e=1-t;return 3*e*e*t*p}(t,n)+function(t,p){return 3*(1-t)*t*t*p}(t,r)+function(t,p){return t*t*t*p}(t,o)}Za.prototype.isCatmullRomCurve3=!0;class to extends Va{constructor(t=new ut,e=new ut,n=new ut,r=new ut){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new ut){const n=e,r=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set($a(t,r.x,o.x,l.x,c.x),$a(t,r.y,o.y,l.y,c.y)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}to.prototype.isCubicBezierCurve=!0;class eo extends Va{constructor(t=new Dt,e=new Dt,n=new Dt,r=new Dt){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new Dt){const n=e,r=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set($a(t,r.x,o.x,l.x,c.x),$a(t,r.y,o.y,l.y,c.y),$a(t,r.z,o.z,l.z,c.z)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this.v3.copy(source.v3),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data.v3=this.v3.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}eo.prototype.isCubicBezierCurve3=!0;class no extends Va{constructor(t=new ut,e=new ut){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ut){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(u,t){return this.getPoint(u,t)}getTangent(t,e){const n=e||new ut;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(source){return super.copy(source),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}no.prototype.isLineCurve=!0;class io extends Va{constructor(t=new ut,e=new ut,n=new ut){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ut){const n=e,r=this.v0,o=this.v1,l=this.v2;return n.set(Qa(t,r.x,o.x,l.x),Qa(t,r.y,o.y,l.y)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}io.prototype.isQuadraticBezierCurve=!0;class ro extends Va{constructor(t=new Dt,e=new Dt,n=new Dt){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Dt){const n=e,r=this.v0,o=this.v1,l=this.v2;return n.set(Qa(t,r.x,o.x,l.x),Qa(t,r.y,o.y,l.y),Qa(t,r.z,o.z,l.z)),n}copy(source){return super.copy(source),this.v0.copy(source.v0),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v0=this.v0.toArray(),data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}ro.prototype.isQuadraticBezierCurve3=!0;class so extends Va{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new ut){const n=e,r=this.points,p=(r.length-1)*t,o=Math.floor(p),l=p-o,c=r[0===o?o:o-1],h=r[o],d=r[o>r.length-2?r.length-1:o+1],f=r[o>r.length-3?r.length-1:o+2];return n.set(Ka(l,c.x,h.x,d.x,f.x),Ka(l,c.y,h.y,d.y,f.y)),n}copy(source){super.copy(source),this.points=[];for(let i=0,t=source.points.length;i<t;i++){const t=source.points[i];this.points.push(t.clone())}return this}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,t=this.points.length;i<t;i++){const t=this.points[i];data.points.push(t.toArray())}return data}fromJSON(t){super.fromJSON(t),this.points=[];for(let i=0,e=t.points.length;i<e;i++){const e=t.points[i];this.points.push((new ut).fromArray(e))}return this}}so.prototype.isSplineCurve=!0;var ao=Object.freeze({__proto__:null,ArcCurve:Wa,CatmullRomCurve3:Za,CubicBezierCurve:to,CubicBezierCurve3:eo,EllipseCurve:ka,LineCurve:no,LineCurve3:class extends Va{constructor(t=new Dt,e=new Dt){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new Dt){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(u,t){return this.getPoint(u,t)}copy(source){return super.copy(source),this.v1.copy(source.v1),this.v2.copy(source.v2),this}toJSON(){const data=super.toJSON();return data.v1=this.v1.toArray(),data.v2=this.v2.toArray(),data}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:io,QuadraticBezierCurve3:ro,SplineCurve:so});class oo extends Va{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new no(e,t))}getPoint(t,e){const n=t*this.getLength(),r=this.getCurveLengths();let i=0;for(;i<r.length;){if(r[i]>=n){const t=r[i]-n,o=this.curves[i],l=o.getLength(),u=0===l?0:1-t/l;return o.getPointAt(u,e)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],l=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,c=o.getPoints(l);for(let t=0;t<c.length;t++){const r=c[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(source){super.copy(source),this.curves=[];for(let i=0,t=source.curves.length;i<t;i++){const t=source.curves[i];this.curves.push(t.clone())}return this.autoClose=source.autoClose,this}toJSON(){const data=super.toJSON();data.autoClose=this.autoClose,data.curves=[];for(let i=0,t=this.curves.length;i<t;i++){const t=this.curves[i];data.curves.push(t.toJSON())}return data}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let i=0,e=t.curves.length;i<e;i++){const e=t.curves[i];this.curves.push((new ao[e.type]).fromJSON(e))}return this}}class lo extends oo{constructor(t){super(),this.type="Path",this.currentPoint=new ut,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let i=1,e=t.length;i<e;i++)this.lineTo(t[i].x,t[i].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new no(this.currentPoint.clone(),new ut(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const o=new io(this.currentPoint.clone(),new ut(t,e),new ut(n,r));return this.curves.push(o),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,o,l){const c=new to(this.currentPoint.clone(),new ut(t,e),new ut(n,r),new ut(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new so(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,r,o,l),this}absarc(t,e,n,r,o,l){return this.absellipse(t,e,n,n,r,o,l),this}ellipse(t,e,n,r,o,l,c,h){const d=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(t+d,e+f,n,r,o,l,c,h),this}absellipse(t,e,n,r,o,l,c,h){const d=new ka(t,e,n,r,o,l,c,h);if(this.curves.length>0){const t=d.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(d);const f=d.getPoint(1);return this.currentPoint.copy(f),this}copy(source){return super.copy(source),this.currentPoint.copy(source.currentPoint),this}toJSON(){const data=super.toJSON();return data.currentPoint=this.currentPoint.toArray(),data}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class co extends lo{constructor(t){super(t),this.uuid=st(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(source){super.copy(source),this.holes=[];for(let i=0,t=source.holes.length;i<t;i++){const t=source.holes[i];this.holes.push(t.clone())}return this}toJSON(){const data=super.toJSON();data.uuid=this.uuid,data.holes=[];for(let i=0,t=this.holes.length;i<t;i++){const t=this.holes[i];data.holes.push(t.toJSON())}return data}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let i=0,e=t.holes.length;i<e;i++){const e=t.holes[i];this.holes.push((new lo).fromJSON(e))}return this}}const ho=function(data,t,e=2){const n=t&&t.length,r=n?t[0]*e:data.length;let o=uo(data,0,r,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,d,f,m,v,x;if(n&&(o=function(data,t,e,n){const r=[];let i,o,l,c,h;for(i=0,o=t.length;i<o;i++)l=t[i]*n,c=i<o-1?t[i+1]*n:data.length,h=uo(data,l,c,n,!1),h===h.next&&(h.steiner=!0),r.push(wo(h));for(r.sort(yo),i=0;i<r.length;i++)_o(r[i],e),e=po(e,e.next);return e}(data,t,o,e)),data.length>80*e){c=d=data[0],h=f=data[1];for(let i=e;i<r;i+=e)m=data[i],v=data[i+1],m<c&&(c=m),v<h&&(h=v),m>d&&(d=m),v>f&&(f=v);x=Math.max(d-c,f-h),x=0!==x?1/x:0}return fo(o,l,e,c,h,x),l};function uo(data,t,e,n,r){let i,o;if(r===function(data,t,e,n){let r=0;for(let i=t,o=e-n;i<e;i+=n)r+=(data[o]-data[i])*(data[i+1]+data[o+1]),o=i;return r}(data,t,e,n)>0)for(i=t;i<e;i+=n)o=Do(i,data[i],data[i+1],o);else for(i=e-n;i>=t;i-=n)o=Do(i,data[i],data[i+1],o);return o&&Eo(o,o.next)&&(Io(o),o=o.next),o}function po(t,e){if(!t)return t;e||(e=t);let n,p=t;do{if(n=!1,p.steiner||!Eo(p,p.next)&&0!==area(p.prev,p,p.next))p=p.next;else{if(Io(p),p=e=p.prev,p===p.next)break;n=!0}}while(n||p!==e);return e}function fo(t,e,n,r,o,l,c){if(!t)return;!c&&l&&function(t,e,n,r){let p=t;do{null===p.z&&(p.z=bo(p.x,p.y,e,n,r)),p.prevZ=p.prev,p.nextZ=p.next,p=p.next}while(p!==t);p.prevZ.nextZ=null,p.prevZ=null,function(t){let i,p,q,e,n,r,o,l,c=1;do{for(p=t,t=null,n=null,r=0;p;){for(r++,q=p,o=0,i=0;i<c&&(o++,q=q.nextZ,q);i++);for(l=c;o>0||l>0&&q;)0!==o&&(0===l||!q||p.z<=q.z)?(e=p,p=p.nextZ,o--):(e=q,q=q.nextZ,l--),n?n.nextZ=e:t=e,e.prevZ=n,n=e;p=q}n.nextZ=null,c*=2}while(r>1)}(p)}(t,r,o,l);let h,d,f=t;for(;t.prev!==t.next;)if(h=t.prev,d=t.next,l?go(t,r,o,l):mo(t))e.push(h.i/n),e.push(t.i/n),e.push(d.i/n),Io(t),t=d.next,f=d.next;else if((t=d)===f){c?1===c?fo(t=vo(po(t),e,n),e,n,r,o,l,2):2===c&&xo(t,e,n,r,o,l):fo(po(t),e,n,r,o,l,1);break}}function mo(t){const a=t.prev,b=t,e=t.next;if(area(a,b,e)>=0)return!1;let p=t.next.next;for(;p!==t.prev;){if(So(a.x,a.y,b.x,b.y,e.x,e.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function go(t,e,n,r){const a=t.prev,b=t,o=t.next;if(area(a,b,o)>=0)return!1;const l=a.x<b.x?a.x<o.x?a.x:o.x:b.x<o.x?b.x:o.x,c=a.y<b.y?a.y<o.y?a.y:o.y:b.y<o.y?b.y:o.y,h=a.x>b.x?a.x>o.x?a.x:o.x:b.x>o.x?b.x:o.x,d=a.y>b.y?a.y>o.y?a.y:o.y:b.y>o.y?b.y:o.y,f=bo(l,c,e,n,r),m=bo(h,d,e,n,r);let p=t.prevZ,v=t.nextZ;for(;p&&p.z>=f&&v&&v.z<=m;){if(p!==t.prev&&p!==t.next&&So(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,v!==t.prev&&v!==t.next&&So(a.x,a.y,b.x,b.y,o.x,o.y,v.x,v.y)&&area(v.prev,v,v.next)>=0)return!1;v=v.nextZ}for(;p&&p.z>=f;){if(p!==t.prev&&p!==t.next&&So(a.x,a.y,b.x,b.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;v&&v.z<=m;){if(v!==t.prev&&v!==t.next&&So(a.x,a.y,b.x,b.y,o.x,o.y,v.x,v.y)&&area(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function vo(t,e,n){let p=t;do{const a=p.prev,b=p.next.next;!Eo(a,b)&&Ao(a,p,p.next,b)&&Co(a,b)&&Co(b,a)&&(e.push(a.i/n),e.push(p.i/n),e.push(b.i/n),Io(p),Io(p.next),p=t=b),p=p.next}while(p!==t);return po(p)}function xo(t,e,n,r,o,l){let a=t;do{let b=a.next.next;for(;b!==a.prev;){if(a.i!==b.i&&To(a,b)){let t=Po(a,b);return a=po(a,a.next),t=po(t,t.next),fo(a,e,n,r,o,l),void fo(t,e,n,r,o,l)}b=b.next}a=a.next}while(a!==t)}function yo(a,b){return a.x-b.x}function _o(t,e){if(e=function(t,e){let p=e;const n=t.x,r=t.y;let o,l=-1/0;do{if(r<=p.y&&r>=p.next.y&&p.next.y!==p.y){const t=p.x+(r-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(t<=n&&t>l){if(l=t,t===n){if(r===p.y)return p;if(r===p.next.y)return p.next}o=p.x<p.next.x?p:p.next}}p=p.next}while(p!==e);if(!o)return null;if(n===l)return o;const c=o,h=o.x,d=o.y;let f,m=1/0;p=o;do{n>=p.x&&p.x>=h&&n!==p.x&&So(r<d?n:l,r,h,d,r<d?l:n,r,p.x,p.y)&&(f=Math.abs(r-p.y)/(n-p.x),Co(p,t)&&(f<m||f===m&&(p.x>o.x||p.x===o.x&&Mo(o,p)))&&(o=p,m=f)),p=p.next}while(p!==c);return o}(t,e),e){const b=Po(e,t);po(e,e.next),po(b,b.next)}}function Mo(t,p){return area(t.prev,t,p.prev)<0&&area(p.next,t,t.next)<0}function bo(t,e,n,r,o){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*o)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*o)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function wo(t){let p=t,e=t;do{(p.x<e.x||p.x===e.x&&p.y<e.y)&&(e=p),p=p.next}while(p!==t);return e}function So(t,e,n,r,o,l,c,h){return(o-c)*(e-h)-(t-c)*(l-h)>=0&&(t-c)*(r-h)-(n-c)*(e-h)>=0&&(n-c)*(l-h)-(o-c)*(r-h)>=0}function To(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!function(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&Ao(p,p.next,a,b))return!0;p=p.next}while(p!==a);return!1}(a,b)&&(Co(a,b)&&Co(b,a)&&function(a,b){let p=a,t=!1;const e=(a.x+b.x)/2,n=(a.y+b.y)/2;do{p.y>n!=p.next.y>n&&p.next.y!==p.y&&e<(p.next.x-p.x)*(n-p.y)/(p.next.y-p.y)+p.x&&(t=!t),p=p.next}while(p!==a);return t}(a,b)&&(area(a.prev,a,b.prev)||area(a,b.prev,b))||Eo(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0)}function area(p,q,t){return(q.y-p.y)*(t.x-q.x)-(q.x-p.x)*(t.y-q.y)}function Eo(t,e){return t.x===e.x&&t.y===e.y}function Ao(t,e,n,r){const o=Lo(area(t,e,n)),l=Lo(area(t,e,r)),c=Lo(area(n,r,t)),h=Lo(area(n,r,e));return o!==l&&c!==h||(!(0!==o||!Ro(t,n,e))||(!(0!==l||!Ro(t,r,e))||(!(0!==c||!Ro(n,t,r))||!(0!==h||!Ro(n,e,r)))))}function Ro(p,q,t){return q.x<=Math.max(p.x,t.x)&&q.x>=Math.min(p.x,t.x)&&q.y<=Math.max(p.y,t.y)&&q.y>=Math.min(p.y,t.y)}function Lo(t){return t>0?1:t<0?-1:0}function Co(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0}function Po(a,b){const t=new No(a.i,a.x,a.y),e=new No(b.i,b.x,b.y),n=a.next,r=b.prev;return a.next=b,b.prev=a,t.next=n,n.prev=t,e.next=t,t.prev=e,r.next=e,e.prev=r,e}function Do(i,t,e,n){const p=new No(i,t,e);return n?(p.next=n.next,p.prev=n,n.next.prev=p,n.next=p):(p.prev=p,p.next=p),p}function Io(p){p.next.prev=p.prev,p.prev.next=p.next,p.prevZ&&(p.prevZ.nextZ=p.nextZ),p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function No(i,t,e){this.i=i,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class zo{static area(t){const e=t.length;let a=0;for(let p=e-1,q=0;q<e;p=q++)a+=t[p].x*t[q].y-t[q].x*t[p].y;return.5*a}static isClockWise(t){return zo.area(t)<0}static triangulateShape(t,e){const n=[],r=[],o=[];Oo(t),Bo(n,t);let l=t.length;e.forEach(Oo);for(let i=0;i<e.length;i++)r.push(l),l+=e[i].length,Bo(n,e[i]);const c=ho(n,r);for(let i=0;i<c.length;i+=3)o.push(c.slice(i,i+3));return o}}function Oo(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Bo(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class Uo extends cn{constructor(t=new co([new ut(.5,.5),new ut(-.5,.5),new ut(-.5,-.5),new ut(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],o=[];for(let i=0,e=t.length;i<e;i++){l(t[i])}function l(t){const l=[],c=void 0!==e.curveSegments?e.curveSegments:12,h=void 0!==e.steps?e.steps:1;let d=void 0!==e.depth?e.depth:1,f=void 0===e.bevelEnabled||e.bevelEnabled,m=void 0!==e.bevelThickness?e.bevelThickness:.2,v=void 0!==e.bevelSize?e.bevelSize:m-.1,x=void 0!==e.bevelOffset?e.bevelOffset:0,y=void 0!==e.bevelSegments?e.bevelSegments:3;const _=e.extrudePath,M=void 0!==e.UVGenerator?e.UVGenerator:Fo;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=e.amount);let w,S,T,E,A,R=!1;_&&(w=_.getSpacedPoints(h),R=!0,f=!1,S=_.computeFrenetFrames(h,!1),T=new Dt,E=new Dt,A=new Dt),f||(y=0,m=0,v=0,x=0);const L=t.extractPoints(c);let C=L.shape;const P=L.holes;if(!zo.isClockWise(C)){C=C.reverse();for(let t=0,e=P.length;t<e;t++){const e=P[t];zo.isClockWise(e)&&(P[t]=e.reverse())}}const D=zo.triangulateShape(C,P),I=C;for(let t=0,e=P.length;t<e;t++){const e=P[t];C=C.concat(e)}function N(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const z=C.length,O=D.length;function B(t,e,n){let r,o,l;const c=t.x-e.x,h=t.y-e.y,d=n.x-t.x,f=n.y-t.y,m=c*c+h*h,v=c*f-h*d;if(Math.abs(v)>Number.EPSILON){const v=Math.sqrt(m),x=Math.sqrt(d*d+f*f),y=e.x-h/v,_=e.y+c/v,M=((n.x-f/x-y)*f-(n.y+d/x-_)*d)/(c*f-h*d);r=y+c*M-t.x,o=_+h*M-t.y;const w=r*r+o*o;if(w<=2)return new ut(r,o);l=Math.sqrt(w/2)}else{let t=!1;c>Number.EPSILON?d>Number.EPSILON&&(t=!0):c<-Number.EPSILON?d<-Number.EPSILON&&(t=!0):Math.sign(h)===Math.sign(f)&&(t=!0),t?(r=-h,o=c,l=Math.sqrt(m)):(r=c,o=h,l=Math.sqrt(m/2))}return new ut(r/l,o/l)}const U=[];for(let i=0,t=I.length,e=t-1,n=i+1;i<t;i++,e++,n++)e===t&&(e=0),n===t&&(n=0),U[i]=B(I[i],I[e],I[n]);const F=[];let H,G=U.concat();for(let t=0,e=P.length;t<e;t++){const e=P[t];H=[];for(let i=0,t=e.length,n=t-1,r=i+1;i<t;i++,n++,r++)n===t&&(n=0),r===t&&(r=0),H[i]=B(e[i],e[n],e[r]);F.push(H),G=G.concat(H)}for(let b=0;b<y;b++){const t=b/y,e=m*Math.cos(t*Math.PI/2),n=v*Math.sin(t*Math.PI/2)+x;for(let i=0,t=I.length;i<t;i++){const t=N(I[i],U[i],n);W(t.x,t.y,-e)}for(let t=0,r=P.length;t<r;t++){const r=P[t];H=F[t];for(let i=0,t=r.length;i<t;i++){const t=N(r[i],H[i],n);W(t.x,t.y,-e)}}}const V=v+x;for(let i=0;i<z;i++){const t=f?N(C[i],G[i],V):C[i];R?(E.copy(S.normals[0]).multiplyScalar(t.x),T.copy(S.binormals[0]).multiplyScalar(t.y),A.copy(w[0]).add(E).add(T),W(A.x,A.y,A.z)):W(t.x,t.y,0)}for(let s=1;s<=h;s++)for(let i=0;i<z;i++){const t=f?N(C[i],G[i],V):C[i];R?(E.copy(S.normals[s]).multiplyScalar(t.x),T.copy(S.binormals[s]).multiplyScalar(t.y),A.copy(w[s]).add(E).add(T),W(A.x,A.y,A.z)):W(t.x,t.y,d/h*s)}for(let b=y-1;b>=0;b--){const t=b/y,e=m*Math.cos(t*Math.PI/2),n=v*Math.sin(t*Math.PI/2)+x;for(let i=0,t=I.length;i<t;i++){const t=N(I[i],U[i],n);W(t.x,t.y,d+e)}for(let t=0,r=P.length;t<r;t++){const r=P[t];H=F[t];for(let i=0,t=r.length;i<t;i++){const t=N(r[i],H[i],n);R?W(t.x,t.y+w[h-1].y,w[h-1].x+e):W(t.x,t.y,d+e)}}}function k(t,e){let i=t.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=t.length-1);for(let s=0,t=h+2*y;s<t;s++){const t=z*s,o=z*(s+1);X(e+n+t,e+r+t,e+r+o,e+n+o)}}}function W(t,e,n){l.push(t),l.push(e),l.push(n)}function j(a,b,t){J(a),J(b),J(t);const e=r.length/3,o=M.generateTopUV(n,r,e-3,e-2,e-1);Y(o[0]),Y(o[1]),Y(o[2])}function X(a,b,t,e){J(a),J(b),J(e),J(b),J(t),J(e);const o=r.length/3,l=M.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);Y(l[0]),Y(l[1]),Y(l[3]),Y(l[1]),Y(l[2]),Y(l[3])}function J(t){r.push(l[3*t+0]),r.push(l[3*t+1]),r.push(l[3*t+2])}function Y(t){o.push(t.x),o.push(t.y)}!function(){const t=r.length/3;if(f){let t=0,e=z*t;for(let i=0;i<O;i++){const t=D[i];j(t[2]+e,t[1]+e,t[0]+e)}t=h+2*y,e=z*t;for(let i=0;i<O;i++){const t=D[i];j(t[0]+e,t[1]+e,t[2]+e)}}else{for(let i=0;i<O;i++){const t=D[i];j(t[2],t[1],t[0])}for(let i=0;i<O;i++){const t=D[i];j(t[0]+z*h,t[1]+z*h,t[2]+z*h)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;k(I,e),e+=I.length;for(let t=0,n=P.length;t<n;t++){const n=P[t];k(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new tn(r,3)),this.setAttribute("uv",new tn(o,2)),this.computeVertexNormals()}toJSON(){const data=super.toJSON();return function(t,e,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);void 0!==e.extrudePath&&(data.options.extrudePath=e.extrudePath.toJSON());return data}(this.parameters.shapes,this.parameters.options,data)}static fromJSON(data,t){const e=[];for(let n=0,r=data.shapes.length;n<r;n++){const r=t[data.shapes[n]];e.push(r)}const n=data.options.extrudePath;return void 0!==n&&(data.options.extrudePath=(new ao[n.type]).fromJSON(n)),new Uo(e,data.options)}}const Fo={generateTopUV:function(t,e,n,r,o){const l=e[3*n],c=e[3*n+1],h=e[3*r],d=e[3*r+1],f=e[3*o],m=e[3*o+1];return[new ut(l,c),new ut(h,d),new ut(f,m)]},generateSideWallUV:function(t,e,n,r,o,l){const c=e[3*n],h=e[3*n+1],d=e[3*n+2],f=e[3*r],m=e[3*r+1],v=e[3*r+2],x=e[3*o],y=e[3*o+1],_=e[3*o+2],M=e[3*l],w=e[3*l+1],S=e[3*l+2];return Math.abs(h-m)<Math.abs(c-f)?[new ut(c,1-d),new ut(f,1-v),new ut(x,1-_),new ut(M,1-S)]:[new ut(h,1-d),new ut(m,1-v),new ut(y,1-_),new ut(w,1-S)]}};class Ho extends Ga{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(data){return new Ho(data.radius,data.detail)}}class Go extends cn{constructor(t=new co([new ut(0,.5),new ut(-.5,-.5),new ut(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],o=[],l=[];let c=0,h=0;if(!1===Array.isArray(t))d(t);else for(let i=0;i<t.length;i++)d(t[i]),this.addGroup(c,h,i),c+=h,h=0;function d(t){const c=r.length/3,d=t.extractPoints(e);let f=d.shape;const m=d.holes;!1===zo.isClockWise(f)&&(f=f.reverse());for(let i=0,t=m.length;i<t;i++){const t=m[i];!0===zo.isClockWise(t)&&(m[i]=t.reverse())}const v=zo.triangulateShape(f,m);for(let i=0,t=m.length;i<t;i++){const t=m[i];f=f.concat(t)}for(let i=0,t=f.length;i<t;i++){const t=f[i];r.push(t.x,t.y,0),o.push(0,0,1),l.push(t.x,t.y)}for(let i=0,t=v.length;i<t;i++){const t=v[i],a=t[0]+c,b=t[1]+c,e=t[2]+c;n.push(a,b,e),h+=3}}this.setIndex(n),this.setAttribute("position",new tn(r,3)),this.setAttribute("normal",new tn(o,3)),this.setAttribute("uv",new tn(l,2))}toJSON(){const data=super.toJSON();return function(t,data){if(data.shapes=[],Array.isArray(t))for(let i=0,e=t.length;i<e;i++){const e=t[i];data.shapes.push(e.uuid)}else data.shapes.push(t.uuid);return data}(this.parameters.shapes,data)}static fromJSON(data,t){const e=[];for(let n=0,r=data.shapes.length;n<r;n++){const r=t[data.shapes[n]];e.push(r)}return new Go(e,data.curveSegments)}}class Vo extends cn{constructor(t=1,e=32,n=16,r=0,o=2*Math.PI,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let d=0;const f=[],m=new Dt,v=new Dt,x=[],y=[],_=[],M=[];for(let x=0;x<=n;x++){const w=[],S=x/n;let T=0;0==x&&0==l?T=.5/e:x==n&&h==Math.PI&&(T=-.5/e);for(let n=0;n<=e;n++){const u=n/e;m.x=-t*Math.cos(r+u*o)*Math.sin(l+S*c),m.y=t*Math.cos(l+S*c),m.z=t*Math.sin(r+u*o)*Math.sin(l+S*c),y.push(m.x,m.y,m.z),v.copy(m).normalize(),_.push(v.x,v.y,v.z),M.push(u+T,1-S),w.push(d++)}f.push(w)}for(let t=0;t<n;t++)for(let r=0;r<e;r++){const a=f[t][r+1],b=f[t][r],e=f[t+1][r],o=f[t+1][r+1];(0!==t||l>0)&&x.push(a,b,o),(t!==n-1||h<Math.PI)&&x.push(b,e,o)}this.setIndex(x),this.setAttribute("position",new tn(y,3)),this.setAttribute("normal",new tn(_,3)),this.setAttribute("uv",new tn(M,2))}static fromJSON(data){return new Vo(data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength)}}class ko extends cn{constructor(path=new ro(new Dt(-1,-1,0),new Dt(-1,1,0),new Dt(1,1,0)),t=64,e=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:path,tubularSegments:t,radius:e,radialSegments:n,closed:r};const o=path.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const l=new Dt,c=new Dt,h=new ut;let d=new Dt;const f=[],m=[],v=[],x=[];function y(i){d=path.getPointAt(i/t,d);const r=o.normals[i],h=o.binormals[i];for(let t=0;t<=n;t++){const o=t/n*Math.PI*2,v=Math.sin(o),x=-Math.cos(o);c.x=x*r.x+v*h.x,c.y=x*r.y+v*h.y,c.z=x*r.z+v*h.z,c.normalize(),m.push(c.x,c.y,c.z),l.x=d.x+e*c.x,l.y=d.y+e*c.y,l.z=d.z+e*c.z,f.push(l.x,l.y,l.z)}}!function(){for(let i=0;i<t;i++)y(i);y(!1===r?t:0),function(){for(let i=0;i<=t;i++)for(let e=0;e<=n;e++)h.x=i/t,h.y=e/n,v.push(h.x,h.y)}(),function(){for(let e=1;e<=t;e++)for(let i=1;i<=n;i++){const a=(n+1)*(e-1)+(i-1),b=(n+1)*e+(i-1),t=(n+1)*e+i,r=(n+1)*(e-1)+i;x.push(a,b,r),x.push(b,t,r)}}()}(),this.setIndex(x),this.setAttribute("position",new tn(f,3)),this.setAttribute("normal",new tn(m,3)),this.setAttribute("uv",new tn(v,2))}toJSON(){const data=super.toJSON();return data.path=this.parameters.path.toJSON(),data}static fromJSON(data){return new ko((new ao[data.path.type]).fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed)}}class Wo extends Xe{constructor(t){super(),this.type="ShadowMaterial",this.color=new bt(0),this.transparent=!0,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this}}Wo.prototype.isShadowMaterial=!0;class jo extends Xe{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new bt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.defines={STANDARD:""},this.color.copy(source.color),this.roughness=source.roughness,this.metalness=source.metalness,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.roughnessMap=source.roughnessMap,this.metalnessMap=source.metalnessMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.envMapIntensity=source.envMapIntensity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.flatShading=source.flatShading,this}}jo.prototype.isMeshStandardMaterial=!0;class qo extends jo{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ut(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return at(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new bt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new bt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new bt(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(source){return super.copy(source),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=source.clearcoat,this.clearcoatMap=source.clearcoatMap,this.clearcoatRoughness=source.clearcoatRoughness,this.clearcoatRoughnessMap=source.clearcoatRoughnessMap,this.clearcoatNormalMap=source.clearcoatNormalMap,this.clearcoatNormalScale.copy(source.clearcoatNormalScale),this.ior=source.ior,this.sheen=source.sheen,this.sheenColor.copy(source.sheenColor),this.sheenColorMap=source.sheenColorMap,this.sheenRoughness=source.sheenRoughness,this.sheenRoughnessMap=source.sheenRoughnessMap,this.transmission=source.transmission,this.transmissionMap=source.transmissionMap,this.thickness=source.thickness,this.thicknessMap=source.thicknessMap,this.attenuationDistance=source.attenuationDistance,this.attenuationColor.copy(source.attenuationColor),this.specularIntensity=source.specularIntensity,this.specularIntensityMap=source.specularIntensityMap,this.specularColor.copy(source.specularColor),this.specularColorMap=source.specularColorMap,this}}qo.prototype.isMeshPhysicalMaterial=!0;class Xo extends Xe{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new bt(16777215),this.specular=new bt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.specular.copy(source.specular),this.shininess=source.shininess,this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this.flatShading=source.flatShading,this}}Xo.prototype.isMeshPhongMaterial=!0;class Jo extends Xe{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new bt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.gradientMap=source.gradientMap,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this}}Jo.prototype.isMeshToonMaterial=!0;class Yo extends Xe{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.flatShading=source.flatShading,this}}Yo.prototype.isMeshNormalMaterial=!0;class Zo extends Xe{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new bt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(source){return super.copy(source),this.color.copy(source.color),this.map=source.map,this.lightMap=source.lightMap,this.lightMapIntensity=source.lightMapIntensity,this.aoMap=source.aoMap,this.aoMapIntensity=source.aoMapIntensity,this.emissive.copy(source.emissive),this.emissiveMap=source.emissiveMap,this.emissiveIntensity=source.emissiveIntensity,this.specularMap=source.specularMap,this.alphaMap=source.alphaMap,this.envMap=source.envMap,this.combine=source.combine,this.reflectivity=source.reflectivity,this.refractionRatio=source.refractionRatio,this.wireframe=source.wireframe,this.wireframeLinewidth=source.wireframeLinewidth,this.wireframeLinecap=source.wireframeLinecap,this.wireframeLinejoin=source.wireframeLinejoin,this}}Zo.prototype.isMeshLambertMaterial=!0;class Ko extends Xe{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new bt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(source){return super.copy(source),this.defines={MATCAP:""},this.color.copy(source.color),this.matcap=source.matcap,this.map=source.map,this.bumpMap=source.bumpMap,this.bumpScale=source.bumpScale,this.normalMap=source.normalMap,this.normalMapType=source.normalMapType,this.normalScale.copy(source.normalScale),this.displacementMap=source.displacementMap,this.displacementScale=source.displacementScale,this.displacementBias=source.displacementBias,this.alphaMap=source.alphaMap,this.flatShading=source.flatShading,this}}Ko.prototype.isMeshMatcapMaterial=!0;class Qo extends ba{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(source){return super.copy(source),this.scale=source.scale,this.dashSize=source.dashSize,this.gapSize=source.gapSize,this}}Qo.prototype.isLineDashedMaterial=!0;const $o={arraySlice:function(t,e,n){return $o.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort((function(i,e){return t[i]-t[e]})),n},sortedArray:function(t,e,n){const r=t.length,o=new t.constructor(r);for(let i=0,l=0;l!==r;++i){const r=n[i]*e;for(let n=0;n!==e;++n)o[l++]=t[r+n]}return o},flattenJSON:function(t,e,n,r){let i=1,o=t[0];for(;void 0!==o&&void 0===o[r];)o=t[i++];if(void 0===o)return;let l=o[r];if(void 0!==l)if(Array.isArray(l))do{l=o[r],void 0!==l&&(e.push(o.time),n.push.apply(n,l)),o=t[i++]}while(void 0!==o);else if(void 0!==l.toArray)do{l=o[r],void 0!==l&&(e.push(o.time),l.toArray(n,n.length)),o=t[i++]}while(void 0!==o);else do{l=o[r],void 0!==l&&(e.push(o.time),n.push(l)),o=t[i++]}while(void 0!==o)},subclip:function(t,e,n,r,o=30){const l=t.clone();l.name=e;const c=[];for(let i=0;i<l.tracks.length;++i){const track=l.tracks[i],t=track.getValueSize(),e=[],h=[];for(let l=0;l<track.times.length;++l){const c=track.times[l]*o;if(!(c<n||c>=r)){e.push(track.times[l]);for(let e=0;e<t;++e)h.push(track.values[l*t+e])}}0!==e.length&&(track.times=$o.convertArray(e,track.times.constructor),track.values=$o.convertArray(h,track.values.constructor),c.push(track))}l.tracks=c;let h=1/0;for(let i=0;i<l.tracks.length;++i)h>l.tracks[i].times[0]&&(h=l.tracks[i].times[0]);for(let i=0;i<l.tracks.length;++i)l.tracks[i].shift(-1*h);return l.resetDuration(),l},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const o=n.tracks.length,l=e/r;for(let i=0;i<o;++i){const e=n.tracks[i],r=e.ValueTypeName;if("bool"===r||"string"===r)continue;const o=t.tracks.find((function(track){return track.name===e.name&&track.ValueTypeName===r}));if(void 0===o)continue;let c=0;const h=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);let d=0;const f=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const m=e.times.length-1;let v;if(l<=e.times[0]){const t=c,n=h-c;v=$o.arraySlice(e.values,t,n)}else if(l>=e.times[m]){const t=m*h+c,n=t+h-c;v=$o.arraySlice(e.values,t,n)}else{const t=e.createInterpolant(),n=c,r=h-c;t.evaluate(l),v=$o.arraySlice(t.resultBuffer,n,r)}if("quaternion"===r){(new Pt).fromArray(v).normalize().conjugate().toArray(v)}const x=o.times.length;for(let t=0;t<x;++t){const e=t*f+d;if("quaternion"===r)Pt.multiplyQuaternionsFlat(o.values,e,v,0,o.values,e);else{const t=f-2*d;for(let n=0;n<t;++n)o.values[e+n]-=v[n]}}}return t.blendMode=2501,t}};class tl{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<r)){for(let l=n+2;;){if(void 0===r){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,o)}if(n===l)break;if(o=r,r=e[++n],t<r)break e}l=e.length;break n}if(t>=o)break t;{const c=e[1];t<c&&(n=2,o=c);for(let l=n-2;;){if(void 0===o)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===l)break;if(r=o,o=e[--n-1],t>=o)break e}l=n,n=0}}for(;n<l;){const r=n+l>>>1;t<e[r]?l=r:n=r+1}if(r=e[n],o=e[n-1],void 0===o)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,o,t)}this._cachedIndex=n,this.intervalChanged_(n,o,r)}return this.interpolate_(n,o,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,o=t*r;for(let i=0;i!==r;++i)e[i]=n[o+i];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}tl.prototype.beforeStart_=tl.prototype.copySampleValue_,tl.prototype.afterEnd_=tl.prototype.copySampleValue_;class el extends tl{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:V,endingEnd:V}}intervalChanged_(t,e,n){const r=this.parameterPositions;let o=t-2,l=t+1,c=r[o],h=r[l];if(void 0===c)switch(this.getSettings_().endingStart){case k:o=t,c=2*e-n;break;case W:o=r.length-2,c=e+r[o]-r[o+1];break;default:o=t,c=n}if(void 0===h)switch(this.getSettings_().endingEnd){case k:l=t,h=2*n-e;break;case W:l=1,h=n+r[1]-r[0];break;default:l=t-1,h=e}const d=.5*(n-e),f=this.valueSize;this._weightPrev=d/(e-c),this._weightNext=d/(h-n),this._offsetPrev=o*f,this._offsetNext=l*f}interpolate_(t,e,n,r){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,d=h-c,f=this._offsetPrev,m=this._offsetNext,v=this._weightPrev,x=this._weightNext,p=(n-e)/(r-e),y=p*p,_=y*p,M=-v*_+2*v*y-v*p,w=(1+v)*_+(-1.5-2*v)*y+(-.5+v)*p+1,S=(-1-x)*_+(1.5+x)*y+.5*p,T=x*_-x*y;for(let i=0;i!==c;++i)o[i]=M*l[f+i]+w*l[d+i]+S*l[h+i]+T*l[m+i];return o}}class nl extends tl{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,d=h-c,f=(n-e)/(r-e),m=1-f;for(let i=0;i!==c;++i)o[i]=l[d+i]*m+l[h+i]*f;return o}}class il extends tl{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class rl{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=$o.convertArray(e,this.TimeBufferType),this.values=$o.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(track){const t=track.constructor;let e;if(t.toJSON!==this.toJSON)e=t.toJSON(track);else{e={name:track.name,times:$o.convertArray(track.times,Array),values:$o.convertArray(track.values,Array)};const t=track.getInterpolation();t!==track.DefaultInterpolation&&(e.interpolation=t)}return e.type=track.ValueTypeName,e}InterpolantFactoryMethodDiscrete(t){return new il(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new nl(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new el(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case F:e=this.InterpolantFactoryMethodDiscrete;break;case H:e=this.InterpolantFactoryMethodLinear;break;case G:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return F;case this.InterpolantFactoryMethodLinear:return H;case this.InterpolantFactoryMethodSmooth:return G}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const n=this.times,r=n.length;let o=0,l=r-1;for(;o!==r&&n[o]<t;)++o;for(;-1!==l&&n[l]>e;)--l;if(++l,0!==o||l!==r){o>=l&&(l=Math.max(l,1),o=l-1);const t=this.getValueSize();this.times=$o.arraySlice(n,o,l),this.values=$o.arraySlice(this.values,o*t,l*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,o=n.length;0===o&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let i=0;i!==o;i++){const e=n[i];if("number"==typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,e),t=!1;break}if(null!==l&&l>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,e,l),t=!1;break}l=e}if(void 0!==r&&$o.isTypedArray(r))for(let i=0,e=r.length;i!==e;++i){const e=r[i];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,e),t=!1;break}}return t}optimize(){const t=$o.arraySlice(this.times),e=$o.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===G,o=t.length-1;let l=1;for(let i=1;i<o;++i){let o=!1;const time=t[i];if(time!==t[i+1]&&(1!==i||time!==t[0]))if(r)o=!0;else{const t=i*n,r=t-n,l=t+n;for(let c=0;c!==n;++c){const n=e[t+c];if(n!==e[r+c]||n!==e[l+c]){o=!0;break}}}if(o){if(i!==l){t[l]=t[i];const r=i*n,o=l*n;for(let t=0;t!==n;++t)e[o+t]=e[r+t]}++l}}if(o>0){t[l]=t[o];for(let t=o*n,r=l*n,c=0;c!==n;++c)e[r+c]=e[t+c];++l}return l!==t.length?(this.times=$o.arraySlice(t,0,l),this.values=$o.arraySlice(e,0,l*n)):(this.times=t,this.values=e),this}clone(){const t=$o.arraySlice(this.times,0),e=$o.arraySlice(this.values,0),track=new(0,this.constructor)(this.name,t,e);return track.createInterpolant=this.createInterpolant,track}}rl.prototype.TimeBufferType=Float32Array,rl.prototype.ValueBufferType=Float32Array,rl.prototype.DefaultInterpolation=H;class sl extends rl{}sl.prototype.ValueTypeName="bool",sl.prototype.ValueBufferType=Array,sl.prototype.DefaultInterpolation=F,sl.prototype.InterpolantFactoryMethodLinear=void 0,sl.prototype.InterpolantFactoryMethodSmooth=void 0;class al extends rl{}al.prototype.ValueTypeName="color";class ll extends rl{}ll.prototype.ValueTypeName="number";class cl extends tl{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(r-e);let d=t*c;for(let t=d+c;d!==t;d+=4)Pt.slerpFlat(o,0,l,d-c,l,d,h);return o}}class hl extends rl{InterpolantFactoryMethodLinear(t){return new cl(this.times,this.values,this.getValueSize(),t)}}hl.prototype.ValueTypeName="quaternion",hl.prototype.DefaultInterpolation=H,hl.prototype.InterpolantFactoryMethodSmooth=void 0;class pl extends rl{}pl.prototype.ValueTypeName="string",pl.prototype.ValueBufferType=Array,pl.prototype.DefaultInterpolation=F,pl.prototype.InterpolantFactoryMethodLinear=void 0,pl.prototype.InterpolantFactoryMethodSmooth=void 0;class fl extends rl{}fl.prototype.ValueTypeName="vector";class ml{constructor(t,e=-1,n,r=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=st(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let i=0,t=n.length;i!==t;++i)e.push(gl(n[i]).scale(r));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let i=0,t=n.length;i!==t;++i)e.push(rl.toJSON(n[i]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const o=e.length,l=[];for(let i=0;i<o;i++){let t=[],c=[];t.push((i+o-1)%o,i,(i+1)%o),c.push(0,1,0);const h=$o.getKeyframeOrder(t);t=$o.sortedArray(t,1,h),c=$o.sortedArray(c,1,h),r||0!==t[0]||(t.push(o),c.push(c[0])),l.push(new ll(".morphTargetInfluences["+e[i].name+"]",t,c).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},pattern=/^([\w-]*?)([\d]+)$/;for(let i=0,e=t.length;i<e;i++){const e=t[i],n=e.name.match(pattern);if(n&&n.length>1){const t=n[1];let o=r[t];o||(r[t]=o=[]),o.push(e)}}const o=[];for(const t in r)o.push(this.CreateFromMorphTargetSequence(t,r[t],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,o){if(0!==n.length){const l=[],c=[];$o.flattenJSON(n,l,c,r),0!==l.length&&o.push(new t(e,l,c))}},r=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const d=t.hierarchy||[];for(let t=0;t<d.length;t++){const o=d[t].keys;if(o&&0!==o.length)if(o[0].morphTargets){const t={};let e;for(e=0;e<o.length;e++)if(o[e].morphTargets)for(let n=0;n<o[e].morphTargets.length;n++)t[o[e].morphTargets[n]]=-1;for(const n in t){const t=[],l=[];for(let r=0;r!==o[e].morphTargets.length;++r){const r=o[e];t.push(r.time),l.push(r.morphTarget===n?1:0)}r.push(new ll(".morphTargetInfluence["+n+"]",t,l))}h=t.length*(l||1)}else{const l=".bones["+e[t].name+"]";n(fl,l+".position",o,"pos",r),n(hl,l+".quaternion",o,"rot",r),n(fl,l+".scale",o,"scl",r)}}if(0===r.length)return null;return new this(o,h,r,c)}resetDuration(){let t=0;for(let i=0,e=this.tracks.length;i!==e;++i){const track=this.tracks[i];t=Math.max(t,track.times[track.times.length-1])}return this.duration=t,this}trim(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].trim(0,this.duration);return this}validate(){let t=!0;for(let i=0;i<this.tracks.length;i++)t=t&&this.tracks[i].validate();return t}optimize(){for(let i=0;i<this.tracks.length;i++)this.tracks[i].optimize();return this}clone(){const t=[];for(let i=0;i<this.tracks.length;i++)t.push(this.tracks[i].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function gl(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ll;case"vector":case"vector2":case"vector3":case"vector4":return fl;case"color":return al;case"quaternion":return hl;case"bool":case"boolean":return sl;case"string":return pl}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];$o.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const vl={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class xl{constructor(t,e,n){const r=this;let o,l=!1,c=0,h=0;const d=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){h++,!1===l&&void 0!==r.onStart&&r.onStart(t,c,h),l=!0},this.itemEnd=function(t){c++,void 0!==r.onProgress&&r.onProgress(t,c,h),c===h&&(l=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return o?o(t):t},this.setURLModifier=function(t){return o=t,this},this.addHandler=function(t,e){return d.push(t,e),this},this.removeHandler=function(t){const e=d.indexOf(t);return-1!==e&&d.splice(e,2),this},this.getHandler=function(t){for(let i=0,e=d.length;i<e;i+=2){const e=d[i],n=d[i+1];if(e.global&&(e.lastIndex=0),e.test(t))return n}return null}}}const yl=new xl;class _l{constructor(t){this.manager=void 0!==t?t:yl,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,o){n.load(t,r,e,o)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(path){return this.path=path,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const Ml={};class bl extends _l{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=vl.get(t);if(void 0!==o)return this.manager.itemStart(t),setTimeout((()=>{e&&e(o),this.manager.itemEnd(t)}),0),o;if(void 0!==Ml[t])return void Ml[t].push({onLoad:e,onProgress:n,onError:r});Ml[t]=[],Ml[t].push({onLoad:e,onProgress:n,onError:r});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then((e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body.getReader)return e;const n=Ml[t],r=e.body.getReader(),o=e.headers.get("Content-Length"),l=o?parseInt(o):0,c=0!==l;let h=0;const d=new ReadableStream({start(t){!function e(){r.read().then((({done:r,value:o})=>{if(r)t.close();else{h+=o.byteLength;const r=new ProgressEvent("progress",{lengthComputable:c,loaded:h,total:l});for(let i=0,t=n.length;i<t;i++){const t=n[i];t.onProgress&&t.onProgress(r)}t.enqueue(o),e()}}))}()}});return new Response(d)}throw Error(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`)})).then((t=>{switch(h){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((text=>(new DOMParser).parseFromString(text,c)));case"json":return t.json();default:if(void 0===c)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(c),label=e&&e[1]?e[1].toLowerCase():void 0,n=new TextDecoder(label);return t.arrayBuffer().then((t=>n.decode(t)))}}})).then((data=>{vl.add(t,data);const e=Ml[t];delete Ml[t];for(let i=0,t=e.length;i<t;i++){const t=e[i];t.onLoad&&t.onLoad(data)}})).catch((e=>{const n=Ml[t];if(void 0===n)throw this.manager.itemError(t),e;delete Ml[t];for(let i=0,t=n.length;i<t;i++){const t=n[i];t.onError&&t.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class wl extends _l{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=vl.get(t);if(void 0!==l)return o.manager.itemStart(t),setTimeout((function(){e&&e(l),o.manager.itemEnd(t)}),0),l;const image=mt("img");function c(){d(),vl.add(t,this),e&&e(this),o.manager.itemEnd(t)}function h(e){d(),r&&r(e),o.manager.itemError(t),o.manager.itemEnd(t)}function d(){image.removeEventListener("load",c,!1),image.removeEventListener("error",h,!1)}return image.addEventListener("load",c,!1),image.addEventListener("error",h,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin),o.manager.itemStart(t),image.src=t,image}}class Sl extends _l{constructor(t){super(t)}load(t,e,n,r){const o=new Un,l=new wl(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(i){l.load(t[i],(function(image){o.images[i]=image,c++,6===c&&(o.needsUpdate=!0,e&&e(o))}),void 0,r)}for(let i=0;i<t.length;++i)h(i);return o}}class Tl extends _l{constructor(t){super(t)}load(t,e,n,r){const o=new Et,l=new wl(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,(function(image){o.image=image,o.needsUpdate=!0,void 0!==e&&e(o)}),n,r),o}}class El extends Ne{constructor(t,e=1){super(),this.type="Light",this.color=new bt(t),this.intensity=e}dispose(){}copy(source){return super.copy(source),this.color.copy(source.color),this.intensity=source.intensity,this}toJSON(meta){const data=super.toJSON(meta);return data.object.color=this.color.getHex(),data.object.intensity=this.intensity,void 0!==this.groundColor&&(data.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(data.object.distance=this.distance),void 0!==this.angle&&(data.object.angle=this.angle),void 0!==this.decay&&(data.object.decay=this.decay),void 0!==this.penumbra&&(data.object.penumbra=this.penumbra),void 0!==this.shadow&&(data.object.shadow=this.shadow.toJSON()),data}}El.prototype.isLight=!0;class Al extends El{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(Ne.DefaultUp),this.updateMatrix(),this.groundColor=new bt(e)}copy(source){return El.prototype.copy.call(this,source),this.groundColor.copy(source.groundColor),this}}Al.prototype.isHemisphereLight=!0;const Rl=new ce,Ll=new Dt,Cl=new Dt;class Pl{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ut(512,512),this.map=null,this.mapPass=null,this.matrix=new ce,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new qn,this._frameExtents=new ut(1,1),this._viewportCount=1,this._viewports=[new Rt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Ll.setFromMatrixPosition(t.matrixWorld),e.position.copy(Ll),Cl.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Cl),e.updateMatrixWorld(),Rl.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(source){return this.camera=source.camera.clone(),this.bias=source.bias,this.radius=source.radius,this.mapSize.copy(source.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const object={};return 0!==this.bias&&(object.bias=this.bias),0!==this.normalBias&&(object.normalBias=this.normalBias),1!==this.radius&&(object.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(object.mapSize=this.mapSize.toArray()),object.camera=this.camera.toJSON(!1).object,delete object.camera.matrix,object}}class Dl extends Pl{constructor(){super(new zn(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*it*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,o=t.distance||e.far;n===e.fov&&r===e.aspect&&o===e.far||(e.fov=n,e.aspect=r,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(source){return super.copy(source),this.focus=source.focus,this}}Dl.prototype.isSpotLightShadow=!0;class Il extends El{constructor(t,e,n=0,r=Math.PI/3,o=0,l=1){super(t,e),this.type="SpotLight",this.position.copy(Ne.DefaultUp),this.updateMatrix(),this.target=new Ne,this.distance=n,this.angle=r,this.penumbra=o,this.decay=l,this.shadow=new Dl}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.distance=source.distance,this.angle=source.angle,this.penumbra=source.penumbra,this.decay=source.decay,this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}Il.prototype.isSpotLight=!0;const Nl=new ce,zl=new Dt,Ol=new Dt;class Bl extends Pl{constructor(){super(new zn(90,1,.5,500)),this._frameExtents=new ut(4,2),this._viewportCount=6,this._viewports=[new Rt(2,1,1,1),new Rt(0,1,1,1),new Rt(3,1,1,1),new Rt(1,1,1,1),new Rt(3,0,1,1),new Rt(1,0,1,1)],this._cubeDirections=[new Dt(1,0,0),new Dt(-1,0,0),new Dt(0,0,1),new Dt(0,0,-1),new Dt(0,1,0),new Dt(0,-1,0)],this._cubeUps=[new Dt(0,1,0),new Dt(0,1,0),new Dt(0,1,0),new Dt(0,1,0),new Dt(0,0,1),new Dt(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),zl.setFromMatrixPosition(t.matrixWorld),n.position.copy(zl),Ol.copy(n.position),Ol.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Ol),n.updateMatrixWorld(),r.makeTranslation(-zl.x,-zl.y,-zl.z),Nl.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Nl)}}Bl.prototype.isPointLightShadow=!0;class Ul extends El{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Bl}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.distance=source.distance,this.decay=source.decay,this.shadow=source.shadow.clone(),this}}Ul.prototype.isPointLight=!0;class Fl extends Pl{constructor(){super(new si(-5,5,5,-5,.5,500))}}Fl.prototype.isDirectionalLightShadow=!0;class Hl extends El{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(Ne.DefaultUp),this.updateMatrix(),this.target=new Ne,this.shadow=new Fl}dispose(){this.shadow.dispose()}copy(source){return super.copy(source),this.target=source.target.clone(),this.shadow=source.shadow.clone(),this}}Hl.prototype.isDirectionalLight=!0;class Gl extends El{constructor(t,e){super(t,e),this.type="AmbientLight"}}Gl.prototype.isAmbientLight=!0;class Vl extends El{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(source){return super.copy(source),this.width=source.width,this.height=source.height,this}toJSON(meta){const data=super.toJSON(meta);return data.object.width=this.width,data.object.height=this.height,data}}Vl.prototype.isRectAreaLight=!0;class kl{constructor(){this.coefficients=[];for(let i=0;i<9;i++)this.coefficients.push(new Dt)}set(t){for(let i=0;i<9;i++)this.coefficients[i].copy(t[i]);return this}zero(){for(let i=0;i<9;i++)this.coefficients[i].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*r),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],n*r*1.092548),e.addScaledVector(l[5],r*o*1.092548),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],n*o*1.092548),e.addScaledVector(l[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],1.023328*r),e.addScaledVector(l[2],1.023328*o),e.addScaledVector(l[3],1.023328*n),e.addScaledVector(l[4],.858086*n*r),e.addScaledVector(l[5],.858086*r*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],.858086*n*o),e.addScaledVector(l[8],.429043*(n*n-r*r)),e}add(t){for(let i=0;i<9;i++)this.coefficients[i].add(t.coefficients[i]);return this}addScaledSH(t,s){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],s);return this}scale(s){for(let i=0;i<9;i++)this.coefficients[i].multiplyScalar(s);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let i=0;i<9;i++)if(!this.coefficients[i].equals(t.coefficients[i]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,r=t.y,o=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-r*r)}}kl.prototype.isSphericalHarmonics3=!0;class Wl extends El{constructor(t=new kl,e=1){super(void 0,e),this.sh=t}copy(source){return super.copy(source),this.sh.copy(source.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(meta){const data=super.toJSON(meta);return data.object.sh=this.sh.toArray(),data}}Wl.prototype.isLightProbe=!0;class jl{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let s="";for(let i=0,e=t.length;i<e;i++)s+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(s))}catch(t){return s}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}static resolveURL(t,path){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(path)&&/^\//.test(t)&&(path=path.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:path+t)}}class ql extends cn{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(source){return super.copy(source),this.instanceCount=source.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const data=super.toJSON(this);return data.instanceCount=this.instanceCount,data.isInstancedBufferGeometry=!0,data}}ql.prototype.isInstancedBufferGeometry=!0;let Xl;(class extends _l{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=vl.get(t);if(void 0!==l)return o.manager.itemStart(t),setTimeout((function(){e&&e(l),o.manager.itemEnd(t)}),0),l;const c={};c.credentials="anonymous"===this.crossOrigin?"same-origin":"include",c.headers=this.requestHeader,fetch(t,c).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(o.options,{colorSpaceConversion:"none"}))})).then((function(n){vl.add(t,n),e&&e(n),o.manager.itemEnd(t)})).catch((function(e){r&&r(e),o.manager.itemError(t),o.manager.itemEnd(t)})),o.manager.itemStart(t)}}).prototype.isImageBitmapLoader=!0;const Jl=function(){return void 0===Xl&&(Xl=new(window.AudioContext||window.webkitAudioContext)),Xl};class Yl extends _l{constructor(t){super(t)}load(t,e,n,r){const o=this,l=new bl(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,(function(n){try{const t=n.slice(0);Jl().decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),o.manager.itemError(t)}}),n,r)}}(class extends Wl{constructor(t,e,n=1){super(void 0,n);const r=(new bt).set(t),o=(new bt).set(e),l=new Dt(r.r,r.g,r.b),c=new Dt(o.r,o.g,o.b),h=Math.sqrt(Math.PI),d=h*Math.sqrt(.75);this.sh.coefficients[0].copy(l).add(c).multiplyScalar(h),this.sh.coefficients[1].copy(l).sub(c).multiplyScalar(d)}}).prototype.isHemisphereLightProbe=!0;(class extends Wl{constructor(t,e=1){super(void 0,e);const n=(new bt).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}).prototype.isAmbientLightProbe=!0;class Zl extends Ne{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const source=this.context.createBufferSource();return source.buffer=this.buffer,source.loop=this.loop,source.loopStart=this.loopStart,source.loopEnd=this.loopEnd,source.onended=this.onEnded.bind(this),source.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=source,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,t=this.filters.length;i<t;i++)this.filters[i-1].connect(this.filters[i]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,t=this.filters.length;i<t;i++)this.filters[i-1].disconnect(this.filters[i]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(filter){return this.setFilters(filter?[filter]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}class Kl{constructor(t,e,n){let r,o,l;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,o=t*r+r;let l=this.cumulativeWeight;if(0===l){for(let i=0;i!==r;++i)n[o+i]=n[i];l=e}else{l+=e;const t=e/l;this._mixBufferRegion(n,o,0,t,r)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let i=e,t=e+e;i!==t;++i)if(n[i]!==n[i+e]){c.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let i=n,t=r;i!==t;++i)e[i]=e[r+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,n,r,o){if(r>=.5)for(let i=0;i!==o;++i)t[e+i]=t[n+i]}_slerp(t,e,n,r){Pt.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,o){const l=this._workIndex*o;Pt.multiplyQuaternionsFlat(t,l,t,e,t,n),Pt.slerpFlat(t,e,t,e,t,l,r)}_lerp(t,e,n,r,o){const s=1-r;for(let i=0;i!==o;++i){const o=e+i;t[o]=t[o]*s+t[n+i]*r}}_lerpAdditive(t,e,n,r,o){for(let i=0;i!==o;++i){const o=e+i;t[o]=t[o]+t[n+i]*r}}}const Ql="\\[\\]\\.:\\/",$l=new RegExp("[\\[\\]\\.:\\/]","g"),tc="[^\\[\\]\\.:\\/]",ec="[^"+Ql.replace("\\.","")+"]",nc=/((?:WC+[\/:])*)/.source.replace("WC",tc),ic=/(WCOD+)?/.source.replace("WCOD",ec),rc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",tc),sc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",tc),ac=new RegExp("^"+nc+ic+rc+sc+"$"),oc=["material","materials","bones"];class lc{constructor(t,path,e){this.path=path,this.parsedPath=e||lc.parseTrackName(path),this.node=lc.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,path,e){return t&&t.isAnimationObjectGroup?new lc.Composite(t,path,e):new lc(t,path,e)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace($l,"")}static parseTrackName(t){const e=ac.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==oc.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const o=n(r.children);if(o)return o}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i)t[e++]=source[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let o=e.propertyIndex;if(t||(t=lc.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let i=0;i<t.length;i++)if(t[i].name===r){r=i;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const l=t[r];if(void 0===l){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let c=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==o){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[o]&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else void 0!==l.fromArray&&void 0!==l.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=r;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}lc.Composite=class{constructor(t,path,e){const n=e||lc.parseTrackName(path);this._targetGroup=t,this._bindings=t.subscribe_(path,n)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=t.length;i!==e;++i)t[i].bind()}unbind(){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,e=t.length;i!==e;++i)t[i].unbind()}},lc.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},lc.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},lc.prototype.GetterByBindingType=[lc.prototype._getValue_direct,lc.prototype._getValue_array,lc.prototype._getValue_arrayElement,lc.prototype._getValue_toArray],lc.prototype.SetterByBindingTypeAndVersioning=[[lc.prototype._setValue_direct,lc.prototype._setValue_direct_setNeedsUpdate,lc.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[lc.prototype._setValue_array,lc.prototype._setValue_array_setNeedsUpdate,lc.prototype._setValue_array_setMatrixWorldNeedsUpdate],[lc.prototype._setValue_arrayElement,lc.prototype._setValue_arrayElement_setNeedsUpdate,lc.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[lc.prototype._setValue_fromArray,lc.prototype._setValue_fromArray_setNeedsUpdate,lc.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cc{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:V,endingEnd:V};for(let i=0;i!==l;++i){const t=o[i].createInterpolant(null);c[i]=t,t.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(time){return this._startTime=time,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,o=r/n,l=n/r;t.warp(1,o,e),this.warp(l,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,o=r.time,l=this.timeScale;let c=this._timeScaleInterpolant;null===c&&(c=r._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,d=c.sampleValues;return h[0]=o,h[1]=o+n,d[0]=t/l,d[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(time,t,e,n){if(!this.enabled)return void this._updateWeight(time);const r=this._startTime;if(null!==r){const n=(time-r)*e;if(n<0||0===e)return;this._startTime=null,t=e*n}t*=this._updateTimeScale(time);const o=this._updateTime(t),l=this._updateWeight(time);if(l>0){const t=this._interpolants,e=this._propertyBindings;if(2501===this.blendMode)for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(o),e[n].accumulateAdditive(l);else for(let r=0,c=t.length;r!==c;++r)t[r].evaluate(o),e[r].accumulate(n,l)}}_updateWeight(time){let t=0;if(this.enabled){t=this.weight;const e=this._weightInterpolant;if(null!==e){const n=e.evaluate(time)[0];t*=n,time>e.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(time){let t=0;if(!this.paused){t=this.timeScale;const e=this._timeScaleInterpolant;if(null!==e){t*=e.evaluate(time)[0],time>e.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(t){const e=this._clip.duration,n=this.loop;let time=this.time+t,r=this._loopCount;const o=2202===n;if(0===t)return-1===r?time:o&&1==(1&r)?e-time:time;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(time>=e)time=e;else{if(!(time<0)){this.time=time;break t}time=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),time>=e||time<0){const n=Math.floor(time/e);time-=e*n,r+=Math.abs(n);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,time=t>0?e:0,this.time=time,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===l){const e=t<0;this._setEndings(e,!e,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=time,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=time;if(o&&1==(1&r))return e-time}return time}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=k,r.endingEnd=k):(r.endingStart=t?this.zeroSlopeAtStart?k:V:W,r.endingEnd=e?this.zeroSlopeAtEnd?k:V:W)}_scheduleFading(t,e,n){const r=this._mixer,o=r.time;let l=this._weightInterpolant;null===l&&(l=r._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}(class extends tt{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,o=r.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,d=this._bindingsByRootAndName;let f=d[h];void 0===f&&(f={},d[h]=f);for(let i=0;i!==o;++i){const track=r[i],t=track.name;let o=f[t];if(void 0!==o)++o.referenceCount,l[i]=o;else{if(o=l[i],void 0!==o){null===o._cacheIndex&&(++o.referenceCount,this._addInactiveBinding(o,h,t));continue}const path=e&&e._propertyBindings[i].binding.parsedPath;o=new Kl(lc.create(n,t,path),track.ValueTypeName,track.getValueSize()),++o.referenceCount,this._addInactiveBinding(o,h,t),l[i]=o}c[i].resultBuffer=o.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==t.useCount++&&(this._lendBinding(t),t.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==--t.useCount&&(t.restoreOriginalState(),this._takeBackBinding(t))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,o=this._actionsByClip;let l=o[e];if(void 0===l)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const e=l.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,d=h[h.length-1],f=t._byClipCacheIndex;d._byClipCacheIndex=f,h[f]=d,h.pop(),t._byClipCacheIndex=null;delete c.actionByRoot[(t._localRoot||this._root).uuid],0===h.length&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let i=0,t=e.length;i!==t;++i){const t=e[i];0==--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,o=this._bindings;let l=r[e];void 0===l&&(l={},r[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[r],h=e[e.length-1],d=t._cacheIndex;h._cacheIndex=d,e[d]=h,e.pop(),delete c[o],0===Object.keys(c).length&&delete l[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,o=e[r];t._cacheIndex=r,e[r]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new nl(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,o=e[r];t.__cacheIndex=r,e[r]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const r=e||this._root,o=r.uuid;let l="string"==typeof t?ml.findByName(r,t):t;const c=null!==l?l.uuid:t,h=this._actionsByClip[c];let d=null;if(void 0===n&&(n=null!==l?l.blendMode:j),void 0!==h){const t=h.actionByRoot[o];if(void 0!==t&&t.blendMode===n)return t;d=h.knownActions[0],null===l&&(l=d._clip)}if(null===l)return null;const f=new cc(this,l,e,n);return this._bindAction(f,d),this._addInactiveAction(f,c,o),f}existingAction(t,e){const n=e||this._root,r=n.uuid,o="string"==typeof t?ml.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return void 0!==c&&c.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let i=this._nActiveActions-1;i>=0;--i)t[i].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,time=this.time+=t,r=Math.sign(t),o=this._accuIndex^=1;for(let i=0;i!==n;++i){e[i]._update(time,t,r,o)}const l=this._bindings,c=this._nActiveBindings;for(let i=0;i!==c;++i)l[i].apply(o);return this}setTime(t){this.time=0;for(let i=0;i<this._actions.length;i++)this._actions[i].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,o=r[n];if(void 0!==o){const t=o.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const r=n._cacheIndex,o=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,o._cacheIndex=r,e[r]=o,e.pop(),this._removeInactiveBindingsForAction(n)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class hc{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new hc(void 0===this.value.clone?this.value:this.value.clone())}}(class extends ks{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n}copy(source){return super.copy(source),this.meshPerAttribute=source.meshPerAttribute,this}clone(data){const t=super.clone(data);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(data){const t=super.toJSON(data);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}).prototype.isInstancedInterleavedBuffer=!0;const uc=new ut;class dc{constructor(t=new ut(1/0,1/0),e=new ut(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,e){const n=uc.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return uc.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}dc.prototype.isBox2=!0;const pc=new Dt,fc=new ce,mc=new ce;function gc(object){const t=[];object&&object.isBone&&t.push(object);for(let i=0;i<object.children.length;i++)t.push.apply(t,gc(object.children[i]));return t}const vc=new Float32Array(1);new Int32Array(vc.buffer);Va.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Va.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},lo.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends Pa{constructor(t=10,e=10,n=4473924,r=8947848){n=new bt(n),r=new bt(r);const o=e/2,l=t/e,c=t/2,h=[],d=[];for(let i=0,t=0,f=-c;i<=e;i++,f+=l){h.push(-c,0,f,c,0,f),h.push(f,0,-c,f,0,c);const e=i===o?n:r;e.toArray(d,t),t+=3,e.toArray(d,t),t+=3,e.toArray(d,t),t+=3,e.toArray(d,t),t+=3}const f=new cn;f.setAttribute("position",new tn(h,3)),f.setAttribute("color",new tn(d,3));super(f,new ba({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends Pa{constructor(object){const t=gc(object),e=new cn,n=[],r=[],o=new bt(0,0,1),l=new bt(0,1,0);for(let i=0;i<t.length;i++){const e=t[i];e.parent&&e.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(l.r,l.g,l.b))}e.setAttribute("position",new tn(n,3)),e.setAttribute("color",new tn(r,3));super(e,new ba({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=object,this.bones=t,this.matrix=object.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");mc.copy(this.root.matrixWorld).invert();for(let i=0,t=0;i<e.length;i++){const n=e[i];n.parent&&n.parent.isBone&&(fc.multiplyMatrices(mc,n.matrixWorld),pc.setFromMatrixPosition(fc),r.setXYZ(t,pc.x,pc.y,pc.z),fc.multiplyMatrices(mc,n.parent.matrixWorld),pc.setFromMatrixPosition(fc),r.setXYZ(t+1,pc.x,pc.y,pc.z),t+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},_l.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),jl.extractUrlBase(t)},_l.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},dc.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},dc.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},dc.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},dc.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},zt.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},zt.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},zt.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},zt.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},zt.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},te.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},qn.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},pt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},pt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},pt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},pt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},pt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},pt.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},ce.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},ce.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},ce.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Dt).setFromMatrixColumn(this,3)},ce.prototype.setRotationFromQuaternion=function(q){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(q)},ce.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ce.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},ce.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},ce.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ce.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},ce.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},ce.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ce.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ce.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ce.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ce.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ce.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},ce.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ce.prototype.makeFrustum=function(t,e,n,r,o,l){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,o,l)},ce.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},kn.prototype.isIntersectionLine=function(line){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(line)},Pt.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Pt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},le.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},le.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},le.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},je.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},je.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},je.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},je.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},je.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},je.barycoordFromPoint=function(t,a,b,e,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),je.getBarycoord(t,a,b,e,n)},je.normal=function(a,b,t,e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),je.getNormal(a,b,t,e)},co.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},co.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Uo(this,t)},co.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Go(this,t)},ut.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},ut.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},ut.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Dt.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Dt.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Dt.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},Dt.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},Dt.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},Dt.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},Dt.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},Dt.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},Dt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Rt.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},Rt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ne.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},Ne.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Ne.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},Ne.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Ne.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Ne.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),An.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(An.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),pa.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},zn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(El.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Ke.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===K},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(K)}}}),Ke.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?K:Z),this},Ke.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Ke.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},cn.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},cn.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ke(arguments[1],arguments[2])))},cn.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},cn.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},cn.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},cn.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},cn.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(cn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),ks.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?K:Z),this},ks.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Uo.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Uo.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Uo.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Vs.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},hc.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Xe.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new bt}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(In.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Fs.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},Fs.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Fs.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Fs.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Fs.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Fs.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Fs.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Fs.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Fs.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Fs.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Fs.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Fs.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Fs.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Fs.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Fs.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Fs.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Fs.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Fs.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Fs.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Fs.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Fs.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Fs.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Fs.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Fs.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Fs.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Fs.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?J:X}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(Rs.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Lt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Zl.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new Yl).load(t,(function(t){e.setBuffer(t)})),this},Bn.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Bn.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},St.crossOrigin=void 0,St.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const o=new Tl;o.setCrossOrigin(this.crossOrigin);const l=o.load(t,n,void 0,r);return e&&(l.mapping=e),l},St.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const o=new Sl;o.setCrossOrigin(this.crossOrigin);const l=o.load(t,n,void 0,r);return e&&(l.mapping=e),l},St.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},St.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},280:function(t,e,n){"use strict";function r(t,p){return r=Object.setPrototypeOf||function(t,p){return t.__proto__=p,t},r(t,p)}function o(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&r(t,e)}n.d(e,"a",(function(){return o}))},281:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(25);function o(t,e){if(e&&("object"===Object(r.a)(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}}}]);